From cb21d3f712fee8a3abadfdfc9a828b84a56349f0 Mon Sep 17 00:00:00 2001
From: Vanessa Maegima <vanessa.maegima@nxp.com>
Date: Tue, 16 Jul 2019 12:18:24 -0300
Subject: [PATCH 2/2] power_mode_switch: Add application for Rohm PMIC

Signed-off-by: Vanessa Maegima <vanessa.maegima@nxp.com>
---
 .../rohm_power_mode_switch/FreeRTOSConfig.h   |  135 +
 .../rohm_power_mode_switch/app_srtm.c         | 1862 ++++++
 .../rohm_power_mode_switch/app_srtm.h         |  154 +
 .../armgcc/CMakeLists.txt                     |  846 +++
 .../armgcc/MCIMX7U5xxxxx_cm4_lpm_flash.ld     |  238 +
 .../armgcc/MCIMX7U5xxxxx_cm4_lpm_ram.ld       |  234 +
 .../rohm_power_mode_switch/armgcc/build.sh    |    9 +
 .../armgcc/build_all.bat                      |    7 +
 .../armgcc/build_all.sh                       |    7 +
 .../armgcc/build_flash_debug.bat              |    3 +
 .../armgcc/build_flash_debug.sh               |    3 +
 .../armgcc/build_flash_release.bat            |    3 +
 .../armgcc/build_flash_release.sh             |    3 +
 .../armgcc/build_release.bat                  |    3 +
 .../armgcc/build_release.sh                   |    3 +
 .../rohm_power_mode_switch/armgcc/clean.bat   |    3 +
 .../rohm_power_mode_switch/armgcc/clean.sh    |    3 +
 .../rohm_power_mode_switch/armgcc/lpm_asm.S   |  193 +
 .../demo_apps/rohm_power_mode_switch/board.c  |  133 +
 .../demo_apps/rohm_power_mode_switch/board.h  |   74 +
 .../rohm_power_mode_switch/clock_config.c     |  431 ++
 .../rohm_power_mode_switch/clock_config.h     |   37 +
 .../rohm_power_mode_switch/clock_scg.c        |   75 +
 .../rohm_power_mode_switch/fsl_iomuxc.h       | 1068 +++
 .../iar/MCIMX7U5xxxxx_cm4_lpm_flash.icf       |  105 +
 .../iar/MCIMX7U5xxxxx_cm4_lpm_ram.icf         |   97 +
 .../rohm_power_mode_switch/iar/lpm_asm.s      |  186 +
 .../iar/power_mode_switch.ewd                 | 5812 +++++++++++++++++
 .../iar/power_mode_switch.ewp                 | 5062 ++++++++++++++
 .../iar/power_mode_switch.eww                 |   55 +
 .../demo_apps/rohm_power_mode_switch/lpm.c    |  686 ++
 .../demo_apps/rohm_power_mode_switch/lpm.h    |   95 +
 .../rohm_power_mode_switch/pin_mux.c          |  339 +
 .../rohm_power_mode_switch/pin_mux.h          |  571 ++
 .../power_mode_switch.c                       |  997 +++
 .../power_mode_switch.h                       |   44 +
 .../power_mode_switch.img                     |  Bin 0 -> 70311 bytes
 .../power_mode_switch.xml                     |  170 +
 .../rohm_power_mode_switch/readme.txt         |   96 +
 .../rohm_power_mode_switch/rpmsg_config.h     |   71 +
 .../srtm/channels/srtm_rpmsg_endpoint.c       |  234 +
 .../srtm/channels/srtm_rpmsg_endpoint.h       |   84 +
 .../srtm/services/srtm_bd70528_adapter.c      |  202 +
 .../srtm/services/srtm_bd70528_adapter.h      |   52 +
 .../srtm/services/srtm_io_service.c           |  406 ++
 .../srtm/services/srtm_io_service.h           |  140 +
 .../srtm/services/srtm_keypad_service.c       |  363 +
 .../srtm/services/srtm_keypad_service.h       |  123 +
 .../srtm/services/srtm_lfcl_service.c         |  417 ++
 .../srtm/services/srtm_lfcl_service.h         |  106 +
 .../srtm/services/srtm_pmic_service.c         |  204 +
 .../srtm/services/srtm_pmic_service.h         |   91 +
 .../srtm/services/srtm_rtc_service.c          |  239 +
 .../srtm/services/srtm_rtc_service.h          |  113 +
 .../srtm/services/srtm_snvs_lp_rtc_adapter.c  |  254 +
 .../srtm/services/srtm_snvs_lp_rtc_adapter.h  |   59 +
 56 files changed, 23000 insertions(+)
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/FreeRTOSConfig.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/app_srtm.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/app_srtm.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/CMakeLists.txt
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/MCIMX7U5xxxxx_cm4_lpm_flash.ld
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/MCIMX7U5xxxxx_cm4_lpm_ram.ld
 create mode 100755 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build.sh
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_all.bat
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_all.sh
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_debug.bat
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_debug.sh
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_release.bat
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_release.sh
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_release.bat
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_release.sh
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/clean.bat
 create mode 100755 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/clean.sh
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/lpm_asm.S
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/board.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/board.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_config.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_config.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_scg.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/fsl_iomuxc.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/MCIMX7U5xxxxx_cm4_lpm_flash.icf
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/MCIMX7U5xxxxx_cm4_lpm_ram.icf
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/lpm_asm.s
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.ewd
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.ewp
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.eww
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/lpm.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/lpm.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/pin_mux.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/pin_mux.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.img
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.xml
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/readme.txt
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/rpmsg_config.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/channels/srtm_rpmsg_endpoint.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/channels/srtm_rpmsg_endpoint.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_bd70528_adapter.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_bd70528_adapter.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_io_service.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_io_service.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_keypad_service.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_keypad_service.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_lfcl_service.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_lfcl_service.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_pmic_service.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_pmic_service.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_rtc_service.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_rtc_service.h
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_snvs_lp_rtc_adapter.c
 create mode 100644 boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_snvs_lp_rtc_adapter.h

diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/FreeRTOSConfig.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/FreeRTOSConfig.h
new file mode 100644
index 0000000..9d596dc
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/FreeRTOSConfig.h
@@ -0,0 +1,135 @@
+/*
+ * FreeRTOS Kernel V10.0.1
+ * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+#ifndef FREERTOS_CONFIG_H
+#define FREERTOS_CONFIG_H
+
+/*-----------------------------------------------------------
+ * Application specific definitions.
+ *
+ * These definitions should be adjusted for your particular hardware and
+ * application requirements.
+ *
+ * THESE PARAMETERS ARE DESCRIBED WITHIN THE 'CONFIGURATION' SECTION OF THE
+ * FreeRTOS API DOCUMENTATION AVAILABLE ON THE FreeRTOS.org WEB SITE.
+ *
+ * See http://www.freertos.org/a00110.html.
+ *----------------------------------------------------------*/
+
+#define configUSE_PREEMPTION 1
+#define configUSE_TICKLESS_IDLE 1
+#define configUSE_IDLE_HOOK 0
+#define configUSE_TICK_HOOK 0
+#define configCPU_CLOCK_HZ (SystemCoreClock)
+#define configTICK_RATE_HZ ((TickType_t)1000)
+#define configMAX_PRIORITIES (15)
+#define configMINIMAL_STACK_SIZE ((unsigned short)128)
+#define configTOTAL_HEAP_SIZE ((size_t)(40 * 1024))
+#define configMAX_TASK_NAME_LEN (10)
+#define configUSE_TRACE_FACILITY 0
+#define configUSE_16_BIT_TICKS 0
+#define configIDLE_SHOULD_YIELD 1
+#define configUSE_MUTEXES 1
+#define configQUEUE_REGISTRY_SIZE 0
+#define configCHECK_FOR_STACK_OVERFLOW 0
+#define configUSE_RECURSIVE_MUTEXES 1
+#define configUSE_MALLOC_FAILED_HOOK 1
+#define configUSE_APPLICATION_TASK_TAG 0
+#define configUSE_COUNTING_SEMAPHORES 1
+#define configGENERATE_RUN_TIME_STATS 0
+#define configUSE_TIME_SLICING 0
+
+/* Co-routine definitions. */
+#define configUSE_CO_ROUTINES 0
+#define configMAX_CO_ROUTINE_PRIORITIES (2)
+
+/* Software timer definitions. */
+#define configUSE_TIMERS 1
+#define configTIMER_TASK_PRIORITY (10)
+#define configTIMER_QUEUE_LENGTH 10
+#define configTIMER_TASK_STACK_DEPTH (configMINIMAL_STACK_SIZE * 2)
+
+/* Set the following definitions to 1 to include the API function, or zero
+to exclude the API function. */
+#define INCLUDE_vTaskPrioritySet 0
+#define INCLUDE_uxTaskPriorityGet 0
+#define INCLUDE_vTaskDelete 0
+#define INCLUDE_vTaskCleanUpResources 0
+#define INCLUDE_vTaskSuspend 1
+#define INCLUDE_vTaskDelayUntil 0
+#define INCLUDE_vTaskDelay 1
+#define INCLUDE_xTimerPendFunctionCall 1
+
+/* Normal assert() semantics without relying on the provision of an assert.h
+header file. */
+#define configASSERT(x)           \
+    if ((x) == 0)                 \
+    {                             \
+        taskDISABLE_INTERRUPTS(); \
+        for (;;)                  \
+            ;                     \
+    }
+
+
+/* Redefine: Mutex is needed for SRTM communication */
+#undef configUSE_MUTEXES
+#define configUSE_MUTEXES                       1
+
+#ifndef configTOTAL_HEAP_SIZE
+#define configTOTAL_HEAP_SIZE ((size_t)(40 * 1024))
+#endif
+
+/* Interrupt nesting behaviour configuration. Cortex-M specific. */
+#ifdef __NVIC_PRIO_BITS
+/* __BVIC_PRIO_BITS will be specified when CMSIS is being used. */
+#define configPRIO_BITS __NVIC_PRIO_BITS
+#else
+#define configPRIO_BITS 4 /* 15 priority levels */
+#endif
+
+/* The lowest interrupt priority that can be used in a call to a "set priority"
+function. */
+#define configLIBRARY_LOWEST_INTERRUPT_PRIORITY ((1U << (configPRIO_BITS)) - 1)
+
+/* The highest interrupt priority that can be used by any interrupt service
+routine that makes calls to interrupt safe FreeRTOS API functions.  DO NOT CALL
+INTERRUPT SAFE FREERTOS API FUNCTIONS FROM ANY INTERRUPT THAT HAS A HIGHER
+PRIORITY THAN THIS! (higher priorities are lower numeric values. */
+#define configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY 2
+
+/* Interrupt priorities used by the kernel port layer itself.  These are generic
+to all Cortex-M ports, and do not rely on any particular library functions. */
+#define configKERNEL_INTERRUPT_PRIORITY (configLIBRARY_LOWEST_INTERRUPT_PRIORITY << (8 - configPRIO_BITS))
+/* !!!! configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to zero !!!!
+See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html. */
+#define configMAX_SYSCALL_INTERRUPT_PRIORITY (configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY << (8 - configPRIO_BITS))
+
+/* Definitions that map the FreeRTOS port interrupt handlers to their CMSIS
+standard names. */
+#define vPortSVCHandler SVC_Handler
+#define xPortPendSVHandler PendSV_Handler
+#define xPortSysTickHandler SysTick_Handler
+
+#endif /* FREERTOS_CONFIG_H */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/app_srtm.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/app_srtm.c
new file mode 100644
index 0000000..308ebb6
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/app_srtm.c
@@ -0,0 +1,1862 @@
+/*
+ * Copyright 2019 NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include "FreeRTOS.h"
+#include "task.h"
+#include "timers.h"
+#include "fsl_debug_console.h"
+#include "fsl_lpi2c_freertos.h"
+#include "fsl_gpio.h"
+#include "fsl_pmc0.h"
+#include "fsl_msmc.h"
+#include "fsl_mu.h"
+#include "fsl_edma.h"
+#include "fsl_dmamux.h"
+#include "fsl_port.h"
+#include "fsl_gpio.h"
+#include "fsl_llwu.h"
+#include "fsl_snvs_lp.h"
+#include "fsl_iomuxc.h"
+
+#include "srtm_dispatcher.h"
+#include "srtm_peercore.h"
+#include "srtm_message.h"
+#include "srtm_lfcl_service.h"
+#include "srtm_pmic_service.h"
+#include "srtm_rtc_service.h"
+#include "srtm_io_service.h"
+#include "srtm_keypad_service.h"
+#include "srtm_bd70528_adapter.h"
+#include "srtm_snvs_lp_rtc_adapter.h"
+#include "srtm_rpmsg_endpoint.h"
+
+#include "bd70528.h"
+
+#include "app_srtm.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+#define APP_MS2TICK(ms) ((ms + portTICK_PERIOD_MS - 1) / portTICK_PERIOD_MS)
+
+#define APP_DMA_IRQN(channel) (IRQn_Type)(((uint32_t)DMA0_0_4_IRQn + (((channel) >> 3U) << 2U) + ((channel)&3U)))
+
+enum
+{
+    APP_INPUT_ONOFF = 0U,
+    APP_INPUT_VOL_PLUS = 1U,
+    APP_INPUT_VOL_MINUS = 2U,
+    APP_INPUT_BT_HOST_WAKE = 3U,
+    APP_INPUT_WL_HOST_WAKE = 4U,
+
+    APP_OUTPUT_WL_REG_ON = 5U,
+    APP_OUTPUT_BT_REG_ON = 6U,
+    APP_IO_NUM = 7U
+};
+
+#define APP_INPUT_GPIO_START APP_INPUT_VOL_PLUS
+#define APP_OUTPUT_GPIO_START APP_OUTPUT_WL_REG_ON
+
+typedef enum
+{
+    APP_SRTM_StateRun = 0x0U,
+    APP_SRTM_StateLinkedUp,
+    APP_SRTM_StateReboot,
+    APP_SRTM_StateShutdown,
+} app_srtm_state_t;
+
+typedef enum
+{
+    APP_SRTM_PowerOn = 0x0U,
+    APP_SRTM_PowerOffVlls,
+    APP_SRTM_PowerOff,
+} app_srtm_power_t;
+
+typedef struct
+{
+    uint16_t ioId;
+    TimerHandle_t timer; /* GPIO glitch detect timer */
+    srtm_io_event_t event;
+    bool wakeup;
+    bool override; /* Means the CA7 pin configuration is overridden by CM4 wakeup pin. */
+    uint8_t index;
+    uint8_t value;
+} app_io_t;
+
+/* NOTE: CM4 DRIVERS DON'T SUPPORT SAVE CONTEXT FOR RESUME, BUT CA7 LINUX DRIVERS DO.
+ * WHEN CM4 CORE RUNS INTO VLLS MODE, MOST PERIPHERALS STATE WILL BE LOST. HERE PROVIDES
+ * AN EXAMPLE TO SAVE DEVICE STATE BY APPLICATION IN A SUSPEND CONTEXT LOCATING IN TCM
+ * WHICH CAN KEEP DATA IN VLLS MODE.
+ */
+typedef struct
+{
+    struct
+    {
+        app_io_t data[APP_IO_NUM];
+    } io;
+    struct
+    {
+        uint32_t CR;
+    } mu;
+} app_suspend_ctx_t;
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+/* Send data to PMIC device on I2C Bus. */
+static status_t PMIC_I2C_SendFunc(
+    uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, const uint8_t *txBuff, uint8_t txBuffSize);
+
+/* Receive data from PMIC device on I2C Bus. */
+static status_t PMIC_I2C_ReceiveFunc(
+    uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, uint8_t *rxBuff, uint8_t rxBuffSize);
+
+extern void APP_UpdateSimDgo(uint32_t gpIdx, uint32_t mask, uint32_t value);
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+static const uint16_t llwuPins[] = {
+    0x0000U, /* LLWU_P0 PTA0 */
+    0x0003U, /* LLWU_P1 PTA3 */
+    0x000DU, /* LLWU_P2 PTA13 */
+    0x000EU, /* LLWU_P3 PTA14 */
+    0x0012U, /* LLWU_P4 PTA18 */
+    0x0013U, /* LLWU_P5 PTA19 */
+    0x0017U, /* LLWU_P6 PTA23 */
+    0x001FU, /* LLWU_P7 PTA31 */
+    0x0101U, /* LLWU_P8 PTB1 */
+    0x0103U, /* LLWU_P9 PTB3 */
+    0x0106U, /* LLWU_P10 PTB6 */
+    0x0107U, /* LLWU_P11 PTB7 */
+    0x0109U, /* LLWU_P12 PTB9 */
+    0x010EU, /* LLWU_P13 PTB14 */
+    0x0110U, /* LLWU_P14 PTB16 */
+    0x0113U, /* LLWU_P15 PTB19 */
+};
+
+static const srtm_io_event_t onoffKeyEvents[] = {
+    SRTM_IoEventNone,        /* SRTM_KeypadEventNone */
+    SRTM_IoEventFallingEdge, /* SRTM_KeypadEventPress */
+    SRTM_IoEventRisingEdge,  /* SRTM_KeypadEventRelease */
+    SRTM_IoEventEitherEdge   /* SRTM_KeypadEventPressOrRelease */
+};
+
+static const srtm_io_event_t volPlusKeyEvents[] = {
+    SRTM_IoEventNone,        /* SRTM_KeypadEventNone */
+    SRTM_IoEventRisingEdge,  /* SRTM_KeypadEventPress */
+    SRTM_IoEventFallingEdge, /* SRTM_KeypadEventRelease */
+    SRTM_IoEventEitherEdge   /* SRTM_KeypadEventPressOrRelease */
+};
+
+static const srtm_io_event_t volMinusKeyEvents[] = {
+    SRTM_IoEventNone,        /* SRTM_KeypadEventNone */
+    SRTM_IoEventRisingEdge,  /* SRTM_KeypadEventPress */
+    SRTM_IoEventFallingEdge, /* SRTM_KeypadEventRelease */
+    SRTM_IoEventEitherEdge   /* SRTM_KeypadEventPressOrRelease */
+};
+
+static const srtm_io_event_t llwuPinModeEvents[] = {
+    SRTM_IoEventNone,        /* kLLWU_ExternalPinDisable */
+    SRTM_IoEventRisingEdge,  /* kLLWU_ExternalPinRisingEdge */
+    SRTM_IoEventFallingEdge, /* kLLWU_ExternalPinFallingEdge */
+    SRTM_IoEventEitherEdge   /* kLLWU_ExternalPinAnyEdge */
+};
+
+static lpi2c_rtos_handle_t lpi2c3Handle;
+static bool lpi2c3Init;
+static lpi2c_rtos_handle_t *pmicI2cHandle;
+static bd70528_handle_t bd70528Handle;
+static srtm_dispatcher_t disp;
+static srtm_peercore_t core;
+static srtm_rtc_adapter_t rtcAdapter;
+static srtm_service_t rtcService;
+static srtm_service_t ioService;
+static srtm_service_t keypadService;
+static SemaphoreHandle_t monSig;
+static TimerHandle_t suspendTimer;
+static TimerHandle_t heartBeatTimer;
+static volatile app_srtm_state_t srtmState;
+static struct rpmsg_lite_instance *rpmsgHandle;
+static app_rpmsg_monitor_t rpmsgMonitor;
+static void *rpmsgMonitorParam;
+static app_irq_handler_t irqHandler;
+static void *irqHandlerParam;
+static TimerHandle_t linkupTimer;
+
+static PORT_Type *const ports[] = PORT_BASE_PTRS;
+static GPIO_Type *const gpios[] = GPIO_BASE_PTRS;
+
+static app_suspend_ctx_t suspendContext;
+static bool heartBeat;
+static app_srtm_power_t peercorePower;
+static srtm_procedure_t wakeupCA7Proc;
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static void APP_SRTM_WakeupCA7InIRQ(void)
+{
+    if (wakeupCA7Proc)
+    {
+        SRTM_Dispatcher_PostProc(disp, wakeupCA7Proc);
+        wakeupCA7Proc = NULL;
+    }
+}
+
+static void APP_SRTM_ConfigUSBWakeup(bool enable)
+{
+    if (enable && (SIM->GPR1 & 1U))
+    {
+        if (!NVIC_GetEnableIRQ(USBPHY_IRQn))
+        {
+            PRINTF("enable USB wakeup\r\n");
+            APP_UpdateSimDgo(11, (1U << 12), (1U << 12));
+            LLWU_EnableInternalModuleInterruptWakup(LLWU, LLWU_MODULE_USBPHY, true);
+            EnableIRQ(USBPHY_IRQn);
+        }
+    }
+    else if (!enable)
+    {
+        if (NVIC_GetEnableIRQ(USBPHY_IRQn))
+        {
+            PRINTF("disable USB wakeup\r\n");
+            APP_UpdateSimDgo(11, (1U << 12), 0);
+            LLWU_EnableInternalModuleInterruptWakup(LLWU, LLWU_MODULE_USBPHY, false);
+            NVIC_ClearPendingIRQ(LLWU0_IRQn);
+            DisableIRQ(USBPHY_IRQn);
+            NVIC_ClearPendingIRQ(USBPHY_IRQn);
+        }
+    }
+}
+
+static uint8_t APP_IO_GetLLWUPin(uint16_t ioId)
+{
+    uint8_t i;
+
+    for (i = 0; i < ARRAY_SIZE(llwuPins); i++)
+    {
+        if (llwuPins[i] == ioId)
+        {
+            break;
+        }
+    }
+
+    return i;
+}
+
+static uint8_t APP_IO_GetIoIndex(uint16_t ioId)
+{
+    uint8_t i;
+
+    for (i = 0; i < ARRAY_SIZE(suspendContext.io.data); i++)
+    {
+        if (suspendContext.io.data[i].ioId == ioId)
+        {
+            break;
+        }
+    }
+
+    return i;
+}
+
+static uint8_t APP_Keypad_GetInputIndex(uint8_t keyIdx)
+{
+    uint8_t i;
+
+    for (i = 0; i < APP_OUTPUT_GPIO_START; i++)
+    {
+        if (suspendContext.io.data[i].index == keyIdx)
+        {
+            break;
+        }
+    }
+
+    return i;
+}
+
+static srtm_io_event_t APP_Keypad_GetIoEvent(uint8_t keyIdx, srtm_keypad_event_t event)
+{
+    switch (keyIdx)
+    {
+        case APP_KEYPAD_INDEX_ONOFF:
+            return onoffKeyEvents[event];
+        case APP_KEYPAD_INDEX_VOL_PLUS:
+            return volPlusKeyEvents[event];
+        case APP_KEYPAD_INDEX_VOL_MINUS:
+            return volMinusKeyEvents[event];
+        default:
+            assert(false);
+            break;
+    }
+
+    return SRTM_IoEventNone;
+}
+
+/* LLWU interrupt handler. */
+void LLWU0_IRQHandler(void)
+{
+    /* If application has handler */
+    if (irqHandler)
+    {
+        irqHandler(LLWU0_IRQn, irqHandlerParam);
+    }
+
+    if (LLWU_GetInternalWakeupModuleFlag(LLWU, LLWU_MODULE_USBPHY))
+    {
+        /* USB wakeup interrupt need to be handled by CA7 core, here just disable IRQ and wakeup CA7. */
+        APP_SRTM_ConfigUSBWakeup(false);
+        APP_SRTM_WakeupCA7InIRQ();
+        portYIELD_FROM_ISR(pdTRUE);
+    }
+
+    /* Add for ARM errata 838869, affects Cortex-M4, Cortex-M4F Store immediate overlapping
+    exception return operation might vector to incorrect interrupt */
+    __DSB();
+}
+
+void USBPHY_IRQHandler(void)
+{
+    /* USB wakeup interrupt need to be handled by CA7 core, here just disable IRQ and wakeup CA7. */
+    APP_SRTM_ConfigUSBWakeup(false);
+    APP_SRTM_WakeupCA7InIRQ();
+
+    portYIELD_FROM_ISR(pdTRUE);
+
+    /* Add for ARM errata 838869, affects Cortex-M4, Cortex-M4F Store immediate overlapping
+    exception return operation might vector to incorrect interrupt */
+    __DSB();
+}
+
+void SNVS_IRQHandler(void)
+{
+    BaseType_t reschedule = pdFALSE;
+    srtm_io_event_t ioPress = APP_Keypad_GetIoEvent(APP_KEYPAD_INDEX_ONOFF, SRTM_KeypadEventPress);
+    srtm_io_event_t ioEither = APP_Keypad_GetIoEvent(APP_KEYPAD_INDEX_ONOFF, SRTM_KeypadEventPressOrRelease);
+
+    /* If application has handler */
+    if (irqHandler)
+    {
+        irqHandler(SNVS_IRQn, irqHandlerParam);
+    }
+    /*
+     * Process RTC alarm if present.
+     * SNVS IRQ enable is done in RTC service initialization. So rtcAdapter must be ready.
+     */
+    SRTM_SnvsLpRtcAdapter_NotifyAlarm(rtcAdapter);
+
+    if (SNVS->LPSR & SNVS_LPSR_SPO_MASK)
+    {
+        /* Clear SNVS button interrupt */
+        SNVS->LPSR = SNVS_LPSR_SPO_MASK;
+        if (keypadService &&
+            (suspendContext.io.data[APP_INPUT_ONOFF].wakeup || MU_GetOtherCorePowerMode(MUA) != kMU_PowerModeDsm) &&
+            (suspendContext.io.data[APP_INPUT_ONOFF].event == ioPress ||
+             suspendContext.io.data[APP_INPUT_ONOFF].event == ioEither))
+        {
+            /* Only when CA7 is running or wakeup flag is set, and press event is monitored,
+               we'll notify the event to CA7. */
+            SRTM_KeypadService_NotifyKeypadEvent(keypadService, APP_KEYPAD_INDEX_ONOFF, SRTM_KeypadValuePressed);
+        }
+        xTimerStartFromISR(suspendContext.io.data[APP_INPUT_ONOFF].timer, &reschedule);
+    }
+
+    if (reschedule)
+    {
+        portYIELD_FROM_ISR(reschedule);
+    }
+
+    /* Add for ARM errata 838869, affects Cortex-M4, Cortex-M4F Store immediate overlapping
+    exception return operation might vector to incorrect interrupt */
+    __DSB();
+}
+
+static void APP_HandleGPIOHander(uint8_t gpioIdx)
+{
+    BaseType_t reschedule = pdFALSE;
+    PORT_Type *port = ports[gpioIdx];
+    GPIO_Type *gpio = gpios[gpioIdx];
+
+    if (APP_GPIO_IDX(APP_PIN_BT_HOST_WAKE) == gpioIdx &&
+        (1U << APP_PIN_IDX(APP_PIN_BT_HOST_WAKE)) & PORT_GetPinsInterruptFlags(port))
+    {
+        PORT_ClearPinsInterruptFlags(port, 1U << APP_PIN_IDX(APP_PIN_BT_HOST_WAKE));
+        if (suspendContext.io.data[APP_INPUT_BT_HOST_WAKE].wakeup || MU_GetOtherCorePowerMode(MUA) != kMU_PowerModeDsm)
+        {
+            /* Only when CA7 is running or wakeup flag is set, we'll notify the event to CA7. */
+            SRTM_IoService_NotifyInputEvent(ioService, APP_PIN_BT_HOST_WAKE);
+        }
+    }
+
+    if (APP_GPIO_IDX(APP_PIN_WL_HOST_WAKE) == gpioIdx &&
+        (1U << APP_PIN_IDX(APP_PIN_WL_HOST_WAKE)) & PORT_GetPinsInterruptFlags(port))
+    {
+        PORT_ClearPinsInterruptFlags(port, 1U << APP_PIN_IDX(APP_PIN_WL_HOST_WAKE));
+        if (suspendContext.io.data[APP_INPUT_WL_HOST_WAKE].wakeup || MU_GetOtherCorePowerMode(MUA) != kMU_PowerModeDsm)
+        {
+            /* Only when CA7 is running or wakeup flag is set, we'll notify the event to CA7. */
+            SRTM_IoService_NotifyInputEvent(ioService, APP_PIN_WL_HOST_WAKE);
+        }
+    }
+
+    if (APP_GPIO_IDX(APP_PIN_VOL_PLUS) == gpioIdx &&
+        (1U << APP_PIN_IDX(APP_PIN_VOL_PLUS)) & PORT_GetPinsInterruptFlags(port))
+    {
+        PORT_ClearPinsInterruptFlags(port, (1U << APP_PIN_IDX(APP_PIN_VOL_PLUS)));
+        PORT_SetPinInterruptConfig(port, APP_PIN_IDX(APP_PIN_VOL_PLUS), kPORT_InterruptOrDMADisabled);
+        suspendContext.io.data[APP_INPUT_VOL_PLUS].value = GPIO_PinRead(gpio, APP_PIN_IDX(APP_PIN_VOL_PLUS));
+        xTimerStartFromISR(suspendContext.io.data[APP_INPUT_VOL_PLUS].timer, &reschedule);
+    }
+
+    if (APP_GPIO_IDX(APP_PIN_VOL_MINUS) == gpioIdx &&
+        (1U << APP_PIN_IDX(APP_PIN_VOL_MINUS)) & PORT_GetPinsInterruptFlags(port))
+    {
+        PORT_ClearPinsInterruptFlags(port, (1U << APP_PIN_IDX(APP_PIN_VOL_MINUS)));
+        PORT_SetPinInterruptConfig(port, APP_PIN_IDX(APP_PIN_VOL_MINUS), kPORT_InterruptOrDMADisabled);
+        suspendContext.io.data[APP_INPUT_VOL_MINUS].value = GPIO_PinRead(gpio, APP_PIN_IDX(APP_PIN_VOL_MINUS));
+        xTimerStartFromISR(suspendContext.io.data[APP_INPUT_VOL_MINUS].timer, &reschedule);
+    }
+
+    if (reschedule)
+    {
+        portYIELD_FROM_ISR(reschedule);
+    }
+}
+
+void PCTLA_IRQHandler(void)
+{
+    /* If application has handler */
+    if (irqHandler)
+    {
+        irqHandler(PCTLA_IRQn, irqHandlerParam);
+    }
+    APP_HandleGPIOHander(0U);
+
+    /* Add for ARM errata 838869, affects Cortex-M4, Cortex-M4F Store immediate overlapping
+      exception return operation might vector to incorrect interrupt */
+    __DSB();
+}
+
+void PCTLB_IRQHandler(void)
+{
+    /* If application has handler */
+    if (irqHandler)
+    {
+        irqHandler(PCTLB_IRQn, irqHandlerParam);
+    }
+    APP_HandleGPIOHander(1U);
+
+    /* Add for ARM errata 838869, affects Cortex-M4, Cortex-M4F Store immediate overlapping
+      exception return operation might vector to incorrect interrupt */
+    __DSB();
+}
+
+static srtm_status_t APP_IO_ConfOutput(uint16_t ioId, srtm_io_value_t ioValue)
+{
+    uint8_t gpioIdx = APP_GPIO_IDX(ioId);
+    uint8_t pinIdx = APP_PIN_IDX(ioId);
+
+    assert(gpioIdx < 2U); /* We only support GPIOA and GPIOB */
+    assert(pinIdx < 32U);
+
+    GPIO_PinWrite(gpios[gpioIdx], pinIdx, (uint8_t)ioValue);
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t APP_IO_SetOutput(srtm_service_t service,
+                                      srtm_peercore_t core,
+                                      uint16_t ioId,
+                                      srtm_io_value_t ioValue)
+{
+    uint8_t index = APP_IO_GetIoIndex(ioId);
+
+    assert(index >= APP_OUTPUT_GPIO_START && index < APP_IO_NUM);
+
+    suspendContext.io.data[index].value = (uint8_t)ioValue;
+
+    return APP_IO_ConfOutput(ioId, ioValue);
+}
+
+static srtm_status_t APP_IO_GetInput(srtm_service_t service,
+                                     srtm_peercore_t core,
+                                     uint16_t ioId,
+                                     srtm_io_value_t *pIoValue)
+{
+    uint8_t gpioIdx = APP_GPIO_IDX(ioId);
+    uint8_t pinIdx = APP_PIN_IDX(ioId);
+
+    assert(gpioIdx < 2U); /* We only support GPIOA and GPIOB */
+    assert(pinIdx < 32U);
+    assert(pIoValue);
+
+    *pIoValue = GPIO_PinRead(gpios[gpioIdx], pinIdx) ? SRTM_IoValueHigh : SRTM_IoValueLow;
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t APP_IO_ConfInput(uint8_t inputIdx, srtm_io_event_t event, bool wakeup)
+{
+    uint16_t ioId = suspendContext.io.data[inputIdx].ioId;
+    uint8_t gpioIdx = APP_GPIO_IDX(ioId);
+    uint8_t pinIdx = APP_PIN_IDX(ioId);
+    uint8_t llwuIdx = APP_IO_GetLLWUPin(ioId);
+
+    assert(gpioIdx < 2U || gpioIdx == 0xFFU); /* We only support GPIOA and GPIOB, or the special SNVS power IO */
+    assert(pinIdx < 32U || gpioIdx == 0xFFU);
+    assert(llwuIdx <= ARRAY_SIZE(llwuPins)); /* When llwuIdx == ARRAY_SIZE(llwuPins),
+                                                it means there's no LLWU pin for ioId. */
+
+    if (gpioIdx == 0xFFU) /* SNVS button */
+    {
+        if (wakeup && event != SRTM_IoEventNone)
+        {
+            LLWU_EnableInternalModuleInterruptWakup(LLWU, LLWU_MODULE_SNVS, true);
+        }
+        else
+        {
+            LLWU_EnableInternalModuleInterruptWakup(LLWU, LLWU_MODULE_SNVS, false);
+        }
+    }
+    else /* Normal IO */
+    {
+        switch (event)
+        {
+            case SRTM_IoEventRisingEdge:
+                PORT_SetPinInterruptConfig(ports[gpioIdx], pinIdx, kPORT_InterruptRisingEdge);
+                if (wakeup)
+                {
+                    assert(llwuIdx < ARRAY_SIZE(llwuPins));
+                    LLWU_SetExternalWakeupPinMode(LLWU, llwuIdx, kLLWU_ExternalPinRisingEdge);
+                }
+                break;
+            case SRTM_IoEventFallingEdge:
+                PORT_SetPinInterruptConfig(ports[gpioIdx], pinIdx, kPORT_InterruptFallingEdge);
+                if (wakeup)
+                {
+                    assert(llwuIdx < ARRAY_SIZE(llwuPins));
+                    LLWU_SetExternalWakeupPinMode(LLWU, llwuIdx, kLLWU_ExternalPinFallingEdge);
+                }
+                break;
+            case SRTM_IoEventEitherEdge:
+                PORT_SetPinInterruptConfig(ports[gpioIdx], pinIdx, kPORT_InterruptEitherEdge);
+                if (wakeup)
+                {
+                    assert(llwuIdx < ARRAY_SIZE(llwuPins));
+                    LLWU_SetExternalWakeupPinMode(LLWU, llwuIdx, kLLWU_ExternalPinAnyEdge);
+                }
+                break;
+            case SRTM_IoEventLowLevel:
+                PORT_SetPinInterruptConfig(ports[gpioIdx], pinIdx, kPORT_InterruptLogicZero);
+                /* Power level cannot trigger wakeup */
+                assert(!wakeup);
+                break;
+            case SRTM_IoEventHighLevel:
+                PORT_SetPinInterruptConfig(ports[gpioIdx], pinIdx, kPORT_InterruptLogicOne);
+                /* Power level cannot trigger wakeup */
+                assert(!wakeup);
+                break;
+            default:
+                PORT_SetPinInterruptConfig(ports[gpioIdx], pinIdx, kPORT_InterruptOrDMADisabled);
+                break;
+        }
+        if (!wakeup && llwuIdx < ARRAY_SIZE(llwuPins))
+        {
+            LLWU_SetExternalWakeupPinMode(LLWU, llwuIdx, kLLWU_ExternalPinDisable);
+        }
+    }
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t APP_IO_ConfIEvent(
+    srtm_service_t service, srtm_peercore_t core, uint16_t ioId, srtm_io_event_t event, bool wakeup)
+{
+    uint8_t inputIdx = APP_IO_GetIoIndex(ioId);
+
+    assert(inputIdx < APP_OUTPUT_GPIO_START);
+
+    suspendContext.io.data[inputIdx].event = event;
+    suspendContext.io.data[inputIdx].wakeup = wakeup;
+
+    return APP_IO_ConfInput(inputIdx, event, wakeup);
+}
+
+static srtm_status_t APP_IO_ConfKEvent(
+    srtm_service_t service, srtm_peercore_t core, uint8_t keyIdx, srtm_keypad_event_t event, bool wakeup)
+{
+    uint8_t inputIdx = APP_Keypad_GetInputIndex(keyIdx);
+
+    assert(inputIdx < APP_OUTPUT_GPIO_START);
+
+    suspendContext.io.data[inputIdx].event = APP_Keypad_GetIoEvent(keyIdx, event);
+    suspendContext.io.data[inputIdx].wakeup = wakeup;
+
+    return APP_IO_ConfInput(inputIdx, suspendContext.io.data[inputIdx].event, wakeup);
+}
+
+static void APP_DisableRebootMonitor(bool disableIRQ)
+{
+    /* Disable CA7 Reset interrupt */
+    if (disableIRQ)
+    {
+        DisableIRQ(CMC1_IRQn);
+    }
+
+    /* Stop heart beat timer if enabled */
+    if (heartBeat)
+    {
+        xTimerStop(heartBeatTimer, portMAX_DELAY);
+    }
+}
+
+static void APP_EnableRebootMonitor(void)
+{
+    /* Enable CA7 Reset interrupt to monitor CA7 reset */
+    SIM->MISC_CTRL0 =
+        (SIM->MISC_CTRL0 & ~SIM_MISC_CTRL0_A7_TSTMR_COMP_IRQ_CTRL_MASK) | SIM_MISC_CTRL0_A7_TO_M4_RST_IRQ_EN_MASK;
+    NVIC_ClearPendingIRQ(CMC1_IRQn);
+    EnableIRQ(CMC1_IRQn);
+
+    /* Start heart beat timer if enabled */
+    if (heartBeat)
+    {
+        xTimerStart(heartBeatTimer, portMAX_DELAY);
+    }
+}
+
+static void APP_SRTM_A7ResetHandler(void)
+{
+    portBASE_TYPE taskToWake = pdFALSE;
+
+    if (SIM->MISC_CTRL0 & SIM_MISC_CTRL0_A7_TO_M4_RST_IRQ_EN_MASK)
+    {
+        /* Clear reset flag and disable interrupt. */
+        SIM->MISC_CTRL0 = (SIM->MISC_CTRL0 &
+                           ~(SIM_MISC_CTRL0_A7_TSTMR_COMP_IRQ_CTRL_MASK | SIM_MISC_CTRL0_A7_TO_M4_RST_IRQ_EN_MASK)) |
+                          SIM_MISC_CTRL0_A7_TO_M4_RST_IRQ_CTRL_MASK;
+
+        /* Hold CA7 Core in Reset status. */
+        MU_HardwareResetOtherCore(MUA, false, true, kMU_CoreBootFromAddr0);
+        srtmState = APP_SRTM_StateReboot;
+
+        /* Wake up monitor to reinitialize the SRTM communication with CA7 */
+        if (pdPASS == xSemaphoreGiveFromISR(monSig, &taskToWake))
+        {
+            portYIELD_FROM_ISR(taskToWake);
+        }
+    }
+}
+
+void CMC1_IRQHandler(void)
+{
+    /* If application has handler */
+    if (irqHandler)
+    {
+        irqHandler(CMC1_IRQn, irqHandlerParam);
+    }
+
+    APP_SRTM_A7ResetHandler();
+
+    /* Add for ARM errata 838869, affects Cortex-M4, Cortex-M4F Store immediate overlapping
+    exception return operation might vector to incorrect interrupt */
+    __DSB();
+}
+
+static status_t I2C_SendFunc(lpi2c_rtos_handle_t *handle,
+                             uint8_t deviceAddress,
+                             uint32_t subAddress,
+                             uint8_t subAddressSize,
+                             const uint8_t *txBuff,
+                             uint8_t txBuffSize)
+{
+    lpi2c_master_transfer_t masterXfer;
+
+    /* Prepare transfer structure. */
+    masterXfer.slaveAddress = deviceAddress;
+    masterXfer.direction = kLPI2C_Write;
+    masterXfer.subaddress = subAddress;
+    masterXfer.subaddressSize = subAddressSize;
+    masterXfer.data = (void *)txBuff;
+    masterXfer.dataSize = txBuffSize;
+    masterXfer.flags = kLPI2C_TransferDefaultFlag;
+
+    /* Calling I2C Transfer API to start send. */
+    return LPI2C_RTOS_Transfer(handle, &masterXfer);
+}
+
+static status_t I2C_ReceiveFunc(lpi2c_rtos_handle_t *handle,
+                                uint8_t deviceAddress,
+                                uint32_t subAddress,
+                                uint8_t subAddressSize,
+                                uint8_t *rxBuff,
+                                uint8_t rxBuffSize)
+{
+    lpi2c_master_transfer_t masterXfer;
+
+    /* Prepare transfer structure. */
+    masterXfer.slaveAddress = deviceAddress;
+    masterXfer.direction = kLPI2C_Read;
+    masterXfer.subaddress = subAddress;
+    masterXfer.subaddressSize = subAddressSize;
+    masterXfer.data = rxBuff;
+    masterXfer.dataSize = rxBuffSize;
+    masterXfer.flags = kLPI2C_TransferDefaultFlag;
+
+    /* Calling I2C Transfer API to start receive. */
+    return LPI2C_RTOS_Transfer(handle, &masterXfer);
+}
+
+static status_t PMIC_I2C_SendFunc(
+    uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, const uint8_t *txBuff, uint8_t txBuffSize)
+{
+    /* Calling I2C Transfer API to start send. */
+    return I2C_SendFunc(pmicI2cHandle, deviceAddress, subAddress, subAddressSize, txBuff, txBuffSize);
+}
+
+static status_t PMIC_I2C_ReceiveFunc(
+    uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, uint8_t *rxBuff, uint8_t rxBuffSize)
+{
+    /* Calling I2C Transfer API to start receive. */
+    return I2C_ReceiveFunc(pmicI2cHandle, deviceAddress, subAddress, subAddressSize, rxBuff, rxBuffSize);
+}
+
+void APP_UpdateSimDgo(uint32_t gpIdx, uint32_t mask, uint32_t value)
+{
+    uint32_t mask0 = SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP6_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP5_MASK |
+                     SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP4_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP3_MASK |
+                     SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP2_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP1_MASK;
+    uint32_t mask1 = SIM_SIM_DGO_CTRL1_WR_ACK_DGO_GP11_MASK | SIM_SIM_DGO_CTRL1_WR_ACK_DGO_GP10_MASK |
+                     SIM_SIM_DGO_CTRL1_WR_ACK_DGO_GP9_MASK | SIM_SIM_DGO_CTRL1_WR_ACK_DGO_GP8_MASK |
+                     SIM_SIM_DGO_CTRL1_WR_ACK_DGO_GP7_MASK;
+    volatile uint32_t *reg;
+    uint32_t shift;
+
+    assert(gpIdx >= 1U && gpIdx <= 11U);
+
+    reg = &SIM->SIM_DGO_GP1 + gpIdx - 1;
+
+    *reg = (*reg & ~mask) | value;
+    if (gpIdx <= 6)
+    {
+        shift = gpIdx - 1;
+        SIM->SIM_DGO_CTRL0 = (SIM->SIM_DGO_CTRL0 & ~mask0) | (1U << shift);
+        /* Wait DGO GP1 updated */
+        while ((SIM->SIM_DGO_CTRL0 & (1U << (shift + 13))) == 0)
+        {
+        }
+        /* Clear DGO GP1 ACK and UPDATE bits */
+        SIM->SIM_DGO_CTRL0 = (SIM->SIM_DGO_CTRL0 & ~((1U << shift) | mask0)) | (1U << (shift + 13));
+    }
+    else
+    {
+        shift = gpIdx - 7;
+        SIM->SIM_DGO_CTRL1 = (SIM->SIM_DGO_CTRL1 & ~mask1) | (1U << shift);
+        /* Wait DGO GP1 updated */
+        while ((SIM->SIM_DGO_CTRL1 & (1U << (shift + 13))) == 0)
+        {
+        }
+        /* Clear DGO GP1 ACK and UPDATE bits */
+        SIM->SIM_DGO_CTRL1 = (SIM->SIM_DGO_CTRL1 & ~((1U << shift) | mask1)) | (1U << (shift + 13));
+    }
+}
+
+static void APP_PowerOffCA7(bool suspendMode)
+{
+    if (!suspendMode)
+    {
+        /* Disable application domain power (PTF power supply need to be on) */
+        /*PF1550_EnableRegulator(&pf1550Handle, kPF1550_ModuleSwitch1, kPF1550_OperatingStatusRun, false);
+        PF1550_EnableRegulator(&pf1550Handle, kPF1550_ModuleVrefDdr, kPF1550_OperatingStatusRun, false);
+        PF1550_EnableRegulator(&pf1550Handle, kPF1550_ModuleSwitch2, kPF1550_OperatingStatusRun, false);*/
+    }
+    //PF1550_EnableRegulator(&pf1550Handle, kPF1550_ModuleLdo2, kPF1550_OperatingStatusRun, false);
+
+    peercorePower = suspendMode ? APP_SRTM_PowerOffVlls : APP_SRTM_PowerOff;
+}
+
+static void APP_PowerOnCA7(bool suspendMode)
+{
+    //PF1550_EnableRegulator(&pf1550Handle, kPF1550_ModuleLdo2, kPF1550_OperatingStatusRun, true);
+    if (!suspendMode)
+    {
+        /* Enable application domain power */
+        /*PF1550_EnableRegulator(&pf1550Handle, kPF1550_ModuleSwitch2, kPF1550_OperatingStatusRun, true);
+        PF1550_EnableRegulator(&pf1550Handle, kPF1550_ModuleVrefDdr, kPF1550_OperatingStatusRun, true);
+        PF1550_EnableRegulator(&pf1550Handle, kPF1550_ModuleSwitch1, kPF1550_OperatingStatusRun, true);*/
+    }
+
+    vTaskDelay(APP_MS2TICK(100U));
+
+    peercorePower = APP_SRTM_PowerOn;
+}
+
+static void APP_ResetSRTM(app_srtm_state_t state)
+{
+    srtmState = state;
+    /* Wake up monitor to reinitialize the SRTM communication with CA7 */
+    xSemaphoreGive(monSig);
+}
+
+static void APP_SRTM_ControlCA7(srtm_dispatcher_t dispatcher, void *param1, void *param2)
+{
+    app_srtm_state_t state = (app_srtm_state_t)(uint32_t)param1;
+
+    switch (state)
+    {
+        case APP_SRTM_StateRun:
+            /* Fresh power up: Need SRTM monitor to prepare communication */
+            srtmState = APP_SRTM_StateRun;
+            xSemaphoreGive(monSig);
+            break;
+        case APP_SRTM_StateReboot:
+            /* Only when CA7 is active, we can reboot it. */
+            if (!core || peercorePower != APP_SRTM_PowerOn)
+            {
+                PRINTF("CA7 is not active, cannot reboot!\r\n");
+            }
+            else
+            {
+                /* Now prepare reboot */
+                APP_ResetSRTM(APP_SRTM_StateReboot);
+            }
+            break;
+        case APP_SRTM_StateShutdown:
+            /* Only when CA7 goes into VLLS mode, we can shutdown it. */
+            if (core && peercorePower == APP_SRTM_PowerOffVlls)
+            {
+                /* USB wakeup no longer needed. */
+                APP_SRTM_ConfigUSBWakeup(false);
+                /* Now prepare shutdown */
+                APP_ResetSRTM(APP_SRTM_StateShutdown);
+            }
+            else
+            {
+                PRINTF("CA7 isn't in VLLS status, cannot shutdown!\r\n");
+            }
+            break;
+        default:
+            break;
+    }
+}
+
+static void APP_SRTM_DoWakeup(void *param)
+{
+    if (peercorePower != APP_SRTM_PowerOn)
+    {
+        /* If CA7 is woken up by events other than USB IRQ, we need to release the USB IRQ to CA7 handler. */
+        if (param == NULL)
+        {
+            APP_SRTM_ConfigUSBWakeup(false);
+        }
+        /* Power on regulators which were closed on suspend */
+        PRINTF("CA7 in VLLS status, power on it and wakeup!\r\n");
+        APP_PowerOnCA7(true);
+        /* Wake up CA7 */
+        MU_TriggerInterrupts(MUA, kMU_NmiInterruptTrigger);
+        /* When system runs into VLLS, CA7 RST will be held. */
+        MU_BootOtherCore(MUA, kMU_CoreBootFromAddr0);
+    }
+    else
+    {
+        PRINTF("CA7 not in VLLS status, wakeup directly!\r\n");
+        /* Wake up CA7 */
+        MU_TriggerInterrupts(MUA, kMU_NmiInterruptTrigger);
+    }
+}
+
+static void APP_SRTM_DoWakeupCA7(srtm_dispatcher_t dispatcher, void *param1, void *param2)
+{
+    if (core && SRTM_PeerCore_GetState(core) == SRTM_PeerCore_State_Deactivated)
+    {
+        APP_SRTM_DoWakeup(param1);
+    }
+}
+
+static void APP_SRTM_PollSuspend(srtm_dispatcher_t dispatcher, void *param1, void *param2)
+{
+    srtm_peercore_state_t state;
+    mu_power_mode_t mode;
+
+    state = SRTM_PeerCore_GetState(core);
+    mode = MU_GetOtherCorePowerMode(MUA);
+
+    if (mode == kMU_PowerModeDsm)
+    {
+        /* Need to disable CA7 Reset IRQ. */
+        APP_DisableRebootMonitor(true);
+        /* Now the peer core is suspended */
+        if (state == SRTM_PeerCore_State_Deactivating)
+        {
+            PRINTF("CA7 in VLLS status, power off unused regulator!\r\n");
+            APP_PowerOffCA7(true);
+            SRTM_PeerCore_SetState(core, SRTM_PeerCore_State_Deactivated);
+            /* Now configure USB wakeup source. */
+            APP_SRTM_ConfigUSBWakeup(true);
+        }
+        else if (state == SRTM_PeerCore_State_Activating)
+        {
+            PRINTF("CA7 in VLLS status, wake up immediately!\r\n");
+            /* When CA7 need to be waken up before power gated, just trigger CA7 */
+            MU_TriggerInterrupts(MUA, kMU_NmiInterruptTrigger);
+        }
+        else if (state == SRTM_PeerCore_State_Inactive)
+        {
+            PRINTF("CA7 in VLLS status, shutdown all app domain power now!\r\n");
+            /* Shutdown requested, now safe to power off PMIC regulators */
+            APP_ResetSRTM(APP_SRTM_StateShutdown);
+        }
+    }
+    else if (mode == kMU_PowerModeStop) /* The suspend is just a Linux standby mode */
+    {
+        if (state == SRTM_PeerCore_State_Deactivating)
+        {
+            PRINTF("CA7 in VLPS status, do not power off regulator!\r\n");
+            SRTM_PeerCore_SetState(core, SRTM_PeerCore_State_Deactivated);
+        }
+        else if (state == SRTM_PeerCore_State_Activating)
+        {
+            PRINTF("CA7 in VLPS status, wake up immediately!\r\n");
+            /* When CA7 need to be waken up before power gated, just trigger CA7 */
+            MU_TriggerInterrupts(MUA, kMU_NmiInterruptTrigger);
+        }
+    }
+    else if (state == SRTM_PeerCore_State_Deactivating || state == SRTM_PeerCore_State_Activating ||
+             state == SRTM_PeerCore_State_Inactive)
+    {
+        PRINTF("CA7 suspend timeout and it doesn't go into VLLS/VLPS, wait again!\r\n");
+        /* Peer core has not suspended, wait once more */
+        xTimerStart(suspendTimer, portMAX_DELAY);
+    }
+}
+
+static void APP_SuspendTimerCallback(TimerHandle_t xTimer)
+{
+    srtm_procedure_t proc = SRTM_Procedure_Create(APP_SRTM_PollSuspend, NULL, NULL);
+
+    /* Need to poll suspend status in SRTM task context */
+    if (proc)
+    {
+        SRTM_Dispatcher_PostProc(disp, proc);
+    }
+}
+
+static void APP_HeartBeatTimerCallback(TimerHandle_t xTimer)
+{
+    srtm_procedure_t proc = SRTM_Procedure_Create(APP_SRTM_ControlCA7, (void *)APP_SRTM_StateReboot, NULL);
+
+    if (proc)
+    {
+        SRTM_Dispatcher_PostProc(disp, proc);
+    }
+}
+
+static void APP_SRTM_PollLinkup(srtm_dispatcher_t dispatcher, void *param1, void *param2)
+{
+    if (srtmState == APP_SRTM_StateRun)
+    {
+        if (rpmsg_lite_is_link_up(rpmsgHandle))
+        {
+            srtmState = APP_SRTM_StateLinkedUp;
+            xSemaphoreGive(monSig);
+        }
+        else
+        {
+            /* Start timer to poll linkup status. */
+            xTimerStart(linkupTimer, portMAX_DELAY);
+        }
+    }
+}
+
+static void APP_LinkupTimerCallback(TimerHandle_t xTimer)
+{
+    srtm_procedure_t proc = SRTM_Procedure_Create(APP_SRTM_PollLinkup, NULL, NULL);
+
+    if (proc)
+    {
+        SRTM_Dispatcher_PostProc(disp, proc);
+    }
+}
+
+static void APP_VolPlusTimerCallback(TimerHandle_t xTimer)
+{
+    uint8_t gpioIdx = APP_GPIO_IDX(APP_PIN_VOL_PLUS);
+    uint8_t pinIdx = APP_PIN_IDX(APP_PIN_VOL_PLUS);
+    srtm_keypad_value_t value;
+
+    if (GPIO_PinRead(gpios[gpioIdx], pinIdx) == suspendContext.io.data[APP_INPUT_VOL_PLUS].value)
+    {
+        value = suspendContext.io.data[APP_INPUT_VOL_PLUS].value ? SRTM_KeypadValuePressed : SRTM_KeypadValueReleased;
+        /* No glitch, a valid user operation */
+        if (suspendContext.io.data[APP_INPUT_VOL_PLUS].wakeup || MU_GetOtherCorePowerMode(MUA) != kMU_PowerModeDsm)
+        {
+            /* Only when CA7 is running or wakeup flag is set, we'll notify the event to CA7. */
+            SRTM_KeypadService_NotifyKeypadEvent(keypadService, APP_KEYPAD_INDEX_VOL_PLUS, value);
+        }
+    }
+
+    /* Restore pin detection interrupt */
+    APP_IO_ConfInput(APP_INPUT_VOL_PLUS, suspendContext.io.data[APP_INPUT_VOL_PLUS].event, false);
+}
+
+static void APP_VolMinusTimerCallback(TimerHandle_t xTimer)
+{
+    uint8_t gpioIdx = APP_GPIO_IDX(APP_PIN_VOL_MINUS);
+    uint8_t pinIdx = APP_PIN_IDX(APP_PIN_VOL_MINUS);
+    srtm_keypad_value_t value;
+
+    if (GPIO_PinRead(gpios[gpioIdx], pinIdx) == suspendContext.io.data[APP_INPUT_VOL_MINUS].value)
+    {
+        value = suspendContext.io.data[APP_INPUT_VOL_MINUS].value ? SRTM_KeypadValuePressed : SRTM_KeypadValueReleased;
+        /* No glitch, a valid user operation */
+        if (suspendContext.io.data[APP_INPUT_VOL_MINUS].wakeup || MU_GetOtherCorePowerMode(MUA) != kMU_PowerModeDsm)
+        {
+            /* Only when CA7 is running or wakeup flag is set, we'll notify the event to CA7. */
+            SRTM_KeypadService_NotifyKeypadEvent(keypadService, APP_KEYPAD_INDEX_VOL_MINUS, value);
+        }
+    }
+
+    /* Restore pin detection interrupt */
+    APP_IO_ConfInput(APP_INPUT_VOL_MINUS, suspendContext.io.data[APP_INPUT_VOL_MINUS].event, false);
+}
+
+static void APP_OnOffTimerCallback(TimerHandle_t xTimer)
+{
+    srtm_io_event_t ioRelease = APP_Keypad_GetIoEvent(APP_KEYPAD_INDEX_ONOFF, SRTM_KeypadEventRelease);
+    srtm_io_event_t ioEither = APP_Keypad_GetIoEvent(APP_KEYPAD_INDEX_ONOFF, SRTM_KeypadEventPressOrRelease);
+
+    if ((SNVS->HPSR & SNVS_HPSR_BTN_MASK) == SNVS_HPSR_BTN_MASK)
+    {
+        if (peercorePower == APP_SRTM_PowerOff)
+        {
+            /* If CA7 is powered off, ONOFF key is used to power on it. */
+            APP_SRTM_BootCA7();
+        }
+        else if (keypadService && (suspendContext.io.data[APP_INPUT_ONOFF].wakeup ||
+                                   MU_GetOtherCorePowerMode(MUA) != kMU_PowerModeDsm) &&
+                 (suspendContext.io.data[APP_INPUT_ONOFF].event == ioRelease ||
+                  suspendContext.io.data[APP_INPUT_ONOFF].event == ioEither))
+        {
+            /* Only when CA7 is running or wakeup flag is set, and release event is monitored,
+               we'll notify the event to CA7. */
+            SRTM_KeypadService_NotifyKeypadEvent(keypadService, APP_KEYPAD_INDEX_ONOFF, SRTM_KeypadValueReleased);
+        }
+        xTimerStop(suspendContext.io.data[APP_INPUT_ONOFF].timer, portMAX_DELAY);
+    }
+}
+
+static srtm_status_t APP_SRTM_LfclEventHandler(
+    srtm_service_t service, srtm_peercore_t core, srtm_lfcl_event_t event, void *eventParam, void *userParam)
+{
+    switch (event)
+    {
+        case SRTM_Lfcl_Event_Running:
+            /* Peer core is running now, stop suspend polling timer */
+            xTimerStop(suspendTimer, portMAX_DELAY);
+            APP_EnableRebootMonitor();
+            break;
+
+        case SRTM_Lfcl_Event_SuspendReq:
+            /* Peer core is going to suspend, start a timer to wait peer core to suspend */
+            xTimerStart(suspendTimer, portMAX_DELAY);
+            /* Disable CA7 heart beat monitor */
+            APP_DisableRebootMonitor(false);
+            break;
+
+        case SRTM_Lfcl_Event_WakeupReq:
+            /* If already deactivated, power on CA7, else CA7 will not power off,
+               and wakeup will defer until CA7 enter VLLS */
+            APP_SRTM_DoWakeupCA7(NULL, NULL, NULL);
+            break;
+
+        case SRTM_Lfcl_Event_RebootReq:
+            /* Now prepare reboot */
+            APP_ResetSRTM(APP_SRTM_StateReboot);
+            break;
+
+        case SRTM_Lfcl_Event_ShutdownReq:
+            /* Peer core is going to shutdown, start a timer to wait peer core to suspend */
+            xTimerStart(suspendTimer, portMAX_DELAY);
+            break;
+
+        case SRTM_Lfcl_Event_HeartBeatEnable:
+            heartBeat = true;
+            xTimerStart(heartBeatTimer, portMAX_DELAY);
+            break;
+
+        case SRTM_Lfcl_Event_HeartBeatDisable:
+            heartBeat = false;
+            xTimerStop(heartBeatTimer, portMAX_DELAY);
+            break;
+
+        case SRTM_Lfcl_Event_HeartBeat:
+            xTimerReset(heartBeatTimer, portMAX_DELAY);
+            break;
+
+        default:
+            break;
+    }
+
+    return SRTM_Status_Success;
+}
+
+static void APP_SRTM_NotifyPeerCoreReady(struct rpmsg_lite_instance *rpmsgHandle, bool ready)
+{
+    if (rpmsgMonitor)
+    {
+        rpmsgMonitor(rpmsgHandle, ready, rpmsgMonitorParam);
+    }
+}
+
+static void APP_SRTM_Linkup(void)
+{
+    srtm_channel_t chan;
+    srtm_rpmsg_endpoint_config_t rpmsgConfig;
+
+    APP_SRTM_NotifyPeerCoreReady(rpmsgHandle, true);
+
+    /* Create SRTM peer core */
+    core = SRTM_PeerCore_Create(1U); /* Assign CA7 core ID to 1U */
+
+    /* Common RPMsg channel config */
+    rpmsgConfig.localAddr = RL_ADDR_ANY;
+    rpmsgConfig.peerAddr = RL_ADDR_ANY;
+
+    /* Create and add SRTM PMIC channel to peer core */
+    rpmsgConfig.rpmsgHandle = rpmsgHandle;
+    rpmsgConfig.epName = APP_SRTM_PMIC_CHANNEL_NAME;
+    chan = SRTM_RPMsgEndpoint_Create(&rpmsgConfig);
+    SRTM_PeerCore_AddChannel(core, chan);
+
+    /* Create and add SRTM Life Cycle channel to peer core */
+    rpmsgConfig.rpmsgHandle = rpmsgHandle;
+    rpmsgConfig.epName = APP_SRTM_LFCL_CHANNEL_NAME;
+    chan = SRTM_RPMsgEndpoint_Create(&rpmsgConfig);
+    SRTM_PeerCore_AddChannel(core, chan);
+
+    /* Create and add SRTM Keypad channel to peer core */
+    rpmsgConfig.rpmsgHandle = rpmsgHandle;
+    rpmsgConfig.epName = APP_SRTM_KEYPAD_CHANNEL_NAME;
+    chan = SRTM_RPMsgEndpoint_Create(&rpmsgConfig);
+    SRTM_PeerCore_AddChannel(core, chan);
+
+    /* Create and add SRTM IO channel to peer core */
+    rpmsgConfig.rpmsgHandle = rpmsgHandle;
+    rpmsgConfig.epName = APP_SRTM_IO_CHANNEL_NAME;
+    chan = SRTM_RPMsgEndpoint_Create(&rpmsgConfig);
+    SRTM_PeerCore_AddChannel(core, chan);
+
+    /* Create and add SRTM RTC channel to peer core */
+    rpmsgConfig.rpmsgHandle = rpmsgHandle;
+    rpmsgConfig.epName = APP_SRTM_RTC_CHANNEL_NAME;
+    chan = SRTM_RPMsgEndpoint_Create(&rpmsgConfig);
+    SRTM_PeerCore_AddChannel(core, chan);
+
+    SRTM_Dispatcher_AddPeerCore(disp, core);
+}
+
+static void APP_SRTM_InitPeerCore(void)
+{
+    heartBeat = false;
+
+    rpmsgHandle = rpmsg_lite_remote_init((void *)RPMSG_LITE_SRTM_SHMEM_BASE, RPMSG_LITE_SRTM_LINK_ID, RL_NO_FLAGS);
+    assert(rpmsgHandle);
+
+    if (rpmsg_lite_is_link_up(rpmsgHandle))
+    {
+        /* If resume context has already linked up, don't need to announce channel again. */
+        APP_SRTM_Linkup();
+    }
+    else
+    {
+        /* Start timer to poll linkup status. */
+        xTimerStart(linkupTimer, portMAX_DELAY);
+    }
+}
+
+static void APP_SRTM_GpioReset(void)
+{
+    uint32_t i;
+
+    /* First disable all GPIO interrupts configured by CA7 */
+    for (i = 0; i < APP_OUTPUT_GPIO_START; i++)
+    {
+        if (suspendContext.io.data[i].timer)
+        {
+            xTimerStop(suspendContext.io.data[i].timer, portMAX_DELAY);
+        }
+        if (suspendContext.io.data[i].override)
+        {
+            /* The IO is configured by CM4 instead of CA7, don't reset HW configuration. */
+            suspendContext.io.data[i].event = SRTM_IoEventNone;
+            suspendContext.io.data[i].wakeup = false;
+        }
+        else
+        {
+            APP_IO_ConfIEvent(NULL, NULL, suspendContext.io.data[i].ioId, SRTM_IoEventNone, false);
+        }
+    }
+
+    /* Output pin value doesn't change. */
+
+    /* Then reset IO service */
+    SRTM_IoService_Reset(ioService, core);
+    SRTM_KeypadService_Reset(keypadService, core);
+}
+
+static void APP_SRTM_ResetServices(void)
+{
+    /* When CA7 resets, we need to avoid async event to send to CA7. IO services have async events. */
+    SRTM_RtcService_Reset(rtcService, core);
+    APP_SRTM_GpioReset();
+}
+
+static void APP_SRTM_DeinitPeerCore(void)
+{
+    /* Stop linkupTimer if it's started. */
+    xTimerStop(linkupTimer, portMAX_DELAY);
+
+    if (core)
+    {
+        /* Notify application for the peer core disconnection. */
+        APP_SRTM_NotifyPeerCoreReady(rpmsgHandle, false);
+        /* Need to let services know peer core is now down. */
+        APP_SRTM_ResetServices();
+
+        SRTM_Dispatcher_RemovePeerCore(disp, core);
+        SRTM_PeerCore_Destroy(core);
+        core = NULL;
+    }
+
+    if (rpmsgHandle)
+    {
+        rpmsg_lite_deinit(rpmsgHandle);
+        rpmsgHandle = NULL;
+    }
+}
+
+static void APP_SRTM_InitI2C(lpi2c_rtos_handle_t *handle, LPI2C_Type *base, uint32_t baudrate, uint32_t clockrate)
+{
+    status_t status;
+    lpi2c_master_config_t lpi2cConfig;
+
+    /* Initialize LPI2C instance for PMIC */
+    /*
+     * lpi2cConfig.debugEnable = false;
+     * lpi2cConfig.ignoreAck = false;
+     * lpi2cConfig.pinConfig = kLPI2C_2PinOpenDrain;
+     * lpi2cConfig.baudRate_Hz = 100000U;
+     * lpi2cConfig.busIdleTimeout_ns = 0;
+     * lpi2cConfig.pinLowTimeout_ns = 0;
+     * lpi2cConfig.sdaGlitchFilterWidth_ns = 0;
+     * lpi2cConfig.sclGlitchFilterWidth_ns = 0;
+     */
+    LPI2C_MasterGetDefaultConfig(&lpi2cConfig);
+    lpi2cConfig.baudRate_Hz = baudrate;
+    /* Initialize LPI2C RTOS driver. */
+    status = LPI2C_RTOS_Init(handle, base, &lpi2cConfig, clockrate);
+    assert(status == kStatus_Success);
+    (void)status;
+}
+
+static void APP_SRTM_DeinitI2C(lpi2c_rtos_handle_t *handle)
+{
+    status_t status;
+
+    status = LPI2C_RTOS_Deinit(handle);
+    assert(status == kStatus_Success);
+    (void)status;
+}
+
+static void APP_SRTM_InitPmicDevice(void)
+{
+    if (!lpi2c3Init)
+    {
+        APP_SRTM_InitI2C(&lpi2c3Handle, LPI2C3, APP_LPI2C3_BAUDRATE, CLOCK_GetIpFreq(kCLOCK_Lpi2c3));
+        lpi2c3Init = true;
+    }
+    pmicI2cHandle = &lpi2c3Handle;
+}
+
+static void APP_SRTM_DeinitPmicDevice(void)
+{
+    if (lpi2c3Init)
+    {
+        APP_SRTM_DeinitI2C(&lpi2c3Handle);
+        lpi2c3Init = false;
+    }
+    pmicI2cHandle = NULL;
+}
+
+static void APP_SRTM_InitPmicService(void)
+{
+    bd70528_config_t bd70528Config;
+    srtm_pmic_adapter_t pmicAdapter;
+    srtm_service_t service;
+
+    APP_SRTM_InitPmicDevice();
+    /*  Set LPI2C Master IRQ Priority. */
+    NVIC_SetPriority(LPI2C3_IRQn, APP_LPI2C3_IRQ_PRIO);
+
+    /* Initialize PMIC driver */
+    BD70528_GetDefaultConfig(&bd70528Config);
+    bd70528Config.I2C_SendFunc = PMIC_I2C_SendFunc;
+    bd70528Config.I2C_ReceiveFunc = PMIC_I2C_ReceiveFunc;
+    BD70528_Init(&bd70528Handle, &bd70528Config);
+
+    /* Create and register PMIC service */
+    pmicAdapter = SRTM_Bd70528Adapter_Create(&bd70528Handle);
+    service = SRTM_PmicService_Create(pmicAdapter);
+    SRTM_Dispatcher_RegisterService(disp, service);
+}
+
+static void APP_SRTM_InitLfclService(void)
+{
+    srtm_service_t service;
+
+    /* Create and register Life Cycle service */
+    service = SRTM_LfclService_Create();
+    SRTM_LfclService_Subscribe(service, APP_SRTM_LfclEventHandler, NULL);
+    SRTM_Dispatcher_RegisterService(disp, service);
+}
+
+static void APP_SRTM_InitIoKeyDevice(void)
+{
+    uint32_t i;
+
+    gpio_pin_config_t gpioConfig = {
+        kGPIO_DigitalOutput, 0U,
+    };
+
+    /* Init output configuration */
+    for (i = APP_OUTPUT_GPIO_START; i < APP_IO_NUM; i++)
+    {
+        gpioConfig.outputLogic = suspendContext.io.data[i].value;
+        GPIO_PinInit(gpios[APP_GPIO_IDX(suspendContext.io.data[i].ioId)], APP_PIN_IDX(suspendContext.io.data[i].ioId),
+                     &gpioConfig);
+    }
+
+    /* Init input configuration */
+    gpioConfig.pinDirection = kGPIO_DigitalInput;
+    for (i = APP_INPUT_GPIO_START; i < APP_OUTPUT_GPIO_START; i++)
+    {
+        GPIO_PinInit(gpios[APP_GPIO_IDX(suspendContext.io.data[i].ioId)], APP_PIN_IDX(suspendContext.io.data[i].ioId),
+                     &gpioConfig);
+        if (!suspendContext.io.data[i].override)
+        {
+            APP_IO_ConfInput(i, suspendContext.io.data[i].event, suspendContext.io.data[i].wakeup);
+        }
+    }
+}
+
+static void APP_SRTM_InitIoKeyService(void)
+{
+    /* Init IO structure used in the application. */
+    /* Keypad */
+    suspendContext.io.data[APP_INPUT_ONOFF].index = APP_KEYPAD_INDEX_ONOFF;
+    suspendContext.io.data[APP_INPUT_VOL_PLUS].index = APP_KEYPAD_INDEX_VOL_PLUS;
+    suspendContext.io.data[APP_INPUT_VOL_MINUS].index = APP_KEYPAD_INDEX_VOL_MINUS;
+
+    /* GPIO ID */
+    suspendContext.io.data[APP_INPUT_ONOFF].ioId = APP_PIN_ONOFF; /* Special SNVS IO */
+    suspendContext.io.data[APP_INPUT_VOL_PLUS].ioId = APP_PIN_VOL_PLUS;
+    suspendContext.io.data[APP_INPUT_VOL_MINUS].ioId = APP_PIN_VOL_MINUS;
+    suspendContext.io.data[APP_INPUT_BT_HOST_WAKE].ioId = APP_PIN_BT_HOST_WAKE;
+    suspendContext.io.data[APP_INPUT_WL_HOST_WAKE].ioId = APP_PIN_WL_HOST_WAKE;
+    suspendContext.io.data[APP_OUTPUT_WL_REG_ON].ioId = APP_PIN_WL_REG_ON;
+    suspendContext.io.data[APP_OUTPUT_BT_REG_ON].ioId = APP_PIN_BT_REG_ON;
+
+    APP_SRTM_InitIoKeyDevice();
+
+    /* Enable interrupt for GPIO. */
+    NVIC_SetPriority(PCTLA_IRQn, APP_GPIO_IRQ_PRIO);
+    NVIC_SetPriority(PCTLB_IRQn, APP_GPIO_IRQ_PRIO);
+    EnableIRQ(PCTLA_IRQn);
+    EnableIRQ(PCTLB_IRQn);
+
+    ioService = SRTM_IoService_Create();
+    SRTM_IoService_RegisterPin(ioService, APP_PIN_BT_REG_ON, APP_IO_SetOutput, APP_IO_GetInput, NULL, NULL);
+    SRTM_IoService_RegisterPin(ioService, APP_PIN_WL_REG_ON, APP_IO_SetOutput, APP_IO_GetInput, NULL, NULL);
+    SRTM_IoService_RegisterPin(ioService, APP_PIN_BT_HOST_WAKE, NULL, APP_IO_GetInput, APP_IO_ConfIEvent, NULL);
+    SRTM_IoService_RegisterPin(ioService, APP_PIN_WL_HOST_WAKE, NULL, APP_IO_GetInput, APP_IO_ConfIEvent, NULL);
+    SRTM_Dispatcher_RegisterService(disp, ioService);
+
+    keypadService = SRTM_KeypadService_Create();
+    SRTM_KeypadService_RegisterKey(keypadService, APP_KEYPAD_INDEX_ONOFF, APP_IO_ConfKEvent, NULL);
+    SRTM_KeypadService_RegisterKey(keypadService, APP_KEYPAD_INDEX_VOL_PLUS, APP_IO_ConfKEvent, NULL);
+    SRTM_KeypadService_RegisterKey(keypadService, APP_KEYPAD_INDEX_VOL_MINUS, APP_IO_ConfKEvent, NULL);
+    SRTM_Dispatcher_RegisterService(disp, keypadService);
+}
+
+static void APP_SRTM_InitRtcService(void)
+{
+    snvs_lp_srtc_config_t snvsSrtcConfig;
+
+    SNVS_LP_SRTC_GetDefaultConfig(&snvsSrtcConfig);
+    SNVS_LP_SRTC_Init(SNVS, &snvsSrtcConfig);
+
+    rtcAdapter = SRTM_SnvsLpRtcAdapter_Create(SNVS);
+    assert(rtcAdapter);
+
+    rtcService = SRTM_RtcService_Create(rtcAdapter);
+    SRTM_Dispatcher_RegisterService(disp, rtcService);
+}
+
+static void APP_SRTM_InitServices(void)
+{
+    APP_SRTM_InitPmicService();
+    APP_SRTM_InitRtcService();
+    APP_SRTM_InitLfclService();
+    APP_SRTM_InitIoKeyService();
+
+    /* SNVS is shared by RTC and Key service, enable IRQ last. */
+    NVIC_SetPriority(SNVS_IRQn, APP_SNVS_IRQ_PRIO);
+    EnableIRQ(SNVS_IRQn);
+}
+
+static void APP_ResetCA7Regulators(void)
+{
+    /* Set CA7 power to its default value. */
+    /*PF1550_SetRegulatorOutputVoltage(&pf1550Handle, kPF1550_ModuleSwitch1, kPF1550_OperatingStatusRun, 1100000U);
+    PF1550_SetRegulatorOutputVoltage(&pf1550Handle, kPF1550_ModuleSwitch2, kPF1550_OperatingStatusRun, 1200000U);
+    PF1550_SetRegulatorOutputVoltage(&pf1550Handle, kPF1550_ModuleSwitch3, kPF1550_OperatingStatusRun, 1800000U);
+    PF1550_SetRegulatorOutputVoltage(&pf1550Handle, kPF1550_ModuleLdo2, kPF1550_OperatingStatusRun, 3300000U);*/
+
+    /* Delay 500ms to wait CA7 Domain Power stable. */
+    vTaskDelay(APP_MS2TICK(500U));
+}
+
+static void APP_SRTM_GetBd70528Reg(srtm_dispatcher_t dispatcher, void *param1, void *param2)
+{
+    uint32_t reg = (uint32_t)param1;
+    uint32_t *pValue = (uint32_t *)param2;
+
+    /* Clear high bytes. */
+    *pValue = 0;
+    BD70528_ReadReg(&bd70528Handle, reg, (uint8_t *)pValue);
+}
+
+static void APP_SRTM_SetBd70528Reg(srtm_dispatcher_t dispatcher, void *param1, void *param2)
+{
+    uint32_t reg = (uint32_t)param1;
+    uint32_t value = (uint32_t)param2;
+
+    BD70528_WriteReg(&bd70528Handle, reg, value);
+}
+
+static void APP_SRTM_DoSetWakeupPin(srtm_dispatcher_t dispatcher, void *param1, void *param2)
+{
+    uint16_t ioId = (uint32_t)param1;
+    uint16_t event = (uint32_t)param2;
+    uint8_t inputIdx = APP_IO_GetIoIndex(ioId);
+    bool wakeup = (bool)(event >> 8);
+    uint8_t pinMode = (uint8_t)event;
+
+    assert(inputIdx < APP_OUTPUT_GPIO_START);
+    assert(pinMode < ARRAY_SIZE(llwuPinModeEvents));
+
+    if (llwuPinModeEvents[pinMode] != SRTM_IoEventNone)
+    {
+        /* NOTE: As we reused same VOL+ pin for CM4 wakeup, the PORT configuration from CA7 will be overwritten.
+         * This is just for demonstration of the wakeup pin feature. Real application should avoid assign same pin
+         * to both CA7 and CM4.
+         */
+        APP_IO_ConfInput(inputIdx, llwuPinModeEvents[pinMode], wakeup);
+        suspendContext.io.data[inputIdx].override = true;
+    }
+    else
+    {
+        /* Restore CA7 settings */
+        APP_IO_ConfInput(inputIdx, suspendContext.io.data[inputIdx].event, suspendContext.io.data[inputIdx].wakeup);
+        suspendContext.io.data[inputIdx].override = false;
+    }
+}
+
+static void APP_SRTM_DoSetWakeupModule(srtm_dispatcher_t dispatcher, void *param1, void *param2)
+{
+    uint32_t module = (uint32_t)param1;
+    bool enable = (bool)param2;
+
+    LLWU_EnableInternalModuleInterruptWakup(LLWU, module, enable);
+}
+
+static void SRTM_MonitorTask(void *pvParameters)
+{
+    app_srtm_state_t state = APP_SRTM_StateShutdown;
+
+    /* Initialize services and add to dispatcher */
+    APP_SRTM_InitServices();
+
+    /* Start SRTM dispatcher */
+    SRTM_Dispatcher_Start(disp);
+
+    /* Monitor peer core state change */
+    while (true)
+    {
+        xSemaphoreTake(monSig, portMAX_DELAY);
+
+        if (state == srtmState)
+        {
+            continue;
+        }
+
+        switch (srtmState)
+        {
+            case APP_SRTM_StateRun:
+                assert(state == APP_SRTM_StateShutdown);
+                SRTM_Dispatcher_Stop(disp);
+
+                /* The default power state is APP_SRTM_PowerOn which applies to dual boot mode */
+                if (peercorePower == APP_SRTM_PowerOff)
+                {
+                    PRINTF("#### Power on CA7 and boot it ####\r\n");
+                    APP_PowerOnCA7(false);
+                    APP_ResetCA7Regulators();
+
+                    if ((PMC0->CTRL & PMC0_CTRL_PMC1ON_MASK) == 0)
+                    {
+                        /* Use PMIC regulator */
+                        PMC0_EnablePmc1LdoRegulator(false);
+                        PMC0_PowerOnPmc1();
+                    }
+
+                    /* Wake up CA7 */
+                    MU_TriggerInterrupts(MUA, kMU_NmiInterruptTrigger);
+                    /* Release CA7 reset */
+                    MU_BootOtherCore(MUA, kMU_CoreBootFromAddr0);
+                }
+                else
+                {
+                    /* CA7 is already running */
+                }
+
+                APP_SRTM_InitPeerCore();
+                SRTM_Dispatcher_Start(disp);
+
+                state = APP_SRTM_StateRun;
+                break;
+
+            case APP_SRTM_StateLinkedUp:
+                if (state == APP_SRTM_StateRun)
+                {
+                    SRTM_Dispatcher_Stop(disp);
+                    /* Need to announce channel as we just linked up. */
+                    APP_SRTM_Linkup();
+                    /* LinkedUp is still in Run state. Don't change state variable here. */
+                    SRTM_Dispatcher_Start(disp);
+                }
+                break;
+
+            case APP_SRTM_StateShutdown:
+                PRINTF("#### Shutdown CA7 ####\r\n");
+                assert(state == APP_SRTM_StateRun);
+
+                SRTM_Dispatcher_Stop(disp);
+                APP_DisableRebootMonitor(true);
+                /* Remove peer core from dispatcher */
+                APP_SRTM_DeinitPeerCore();
+                /* dispatcher can still handle proc message during peer core shutdown */
+                SRTM_Dispatcher_Start(disp);
+
+                /* Clear A7 resume entry */
+                APP_UpdateSimDgo(3, 0xFFFFFFFF, 0);
+
+                /* Shutdown CA7 domain power */
+                PRINTF("#### Power off CA7 ####\r\n");
+                APP_PowerOffCA7(false);
+                state = APP_SRTM_StateShutdown;
+                break;
+
+            case APP_SRTM_StateReboot:
+                PRINTF("#### Reset CA7 ####\r\n");
+                assert(state == APP_SRTM_StateRun);
+
+                SRTM_Dispatcher_Stop(disp);
+                APP_DisableRebootMonitor(true);
+                /* Remove peer core from dispatcher */
+                APP_SRTM_DeinitPeerCore();
+
+                /* Hold CA7 reset */
+                MU_HardwareResetOtherCore(MUA, false, true, kMU_CoreBootFromAddr0);
+
+                APP_ResetCA7Regulators();
+
+                /* Release CA7 reset */
+                MU_BootOtherCore(MUA, kMU_CoreBootFromAddr0);
+
+                /* Restore srtmState to Run. */
+                srtmState = APP_SRTM_StateRun;
+
+                /* Initialize peer core and add to dispatcher */
+                APP_SRTM_InitPeerCore();
+                SRTM_Dispatcher_Start(disp);
+
+                /* Do not need to change state. It's still Run. */
+                break;
+
+            default:
+                assert(false);
+                break;
+        }
+    }
+}
+
+static void SRTM_DispatcherTask(void *pvParameters)
+{
+    SRTM_Dispatcher_Run(disp);
+}
+
+static void APP_SRTM_I2C_ReleaseBusDelay(void)
+{
+    uint32_t i = 0U;
+    for (i = 0U; i < APP_LPI2C_DELAY; i++)
+    {
+        __NOP();
+    }
+}
+
+void APP_SRTM_I2C_ReleaseBus(void)
+{
+    uint8_t i = 0U;
+    gpio_pin_config_t pin_config;
+
+    /* Initialize PTB12/PTB13 as GPIO */
+    pin_config.pinDirection = kGPIO_DigitalOutput;
+    pin_config.outputLogic = 1U;
+    IOMUXC_SetPinMux(IOMUXC_PTA16_PTA16, 0U);
+    IOMUXC_SetPinMux(IOMUXC_PTA17_PTA17, 0U);
+    IOMUXC_SetPinConfig(IOMUXC_PTA16_PTA16, IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinConfig(IOMUXC_PTA17_PTA17, IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(IOMUXC_PTB12_PTB12, 0U);
+    IOMUXC_SetPinMux(IOMUXC_PTB13_PTB13, 0U);
+    IOMUXC_SetPinConfig(IOMUXC_PTB12_PTB12, IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinConfig(IOMUXC_PTB13_PTB13, IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    GPIO_PinInit(APP_BD70528_LPI2C_SCL_GPIO, APP_BD70528_LPI2C_SCL_PIN, &pin_config);
+    GPIO_PinInit(APP_BD70528_LPI2C_SDA_GPIO, APP_BD70528_LPI2C_SDA_PIN, &pin_config);
+
+    /* Drive SDA low first to simulate a start */
+    GPIO_PinWrite(APP_BD70528_LPI2C_SDA_GPIO, APP_BD70528_LPI2C_SDA_PIN, 0U);
+    APP_SRTM_I2C_ReleaseBusDelay();
+
+    /* Send 9 pulses on SCL and keep SDA high */
+    for (i = 0U; i < 9U; i++)
+    {
+        GPIO_PinWrite(APP_BD70528_LPI2C_SCL_GPIO, APP_BD70528_LPI2C_SCL_PIN, 0U);
+        APP_SRTM_I2C_ReleaseBusDelay();
+
+        GPIO_PinWrite(APP_BD70528_LPI2C_SDA_GPIO, APP_BD70528_LPI2C_SDA_PIN, 1U);
+        APP_SRTM_I2C_ReleaseBusDelay();
+
+        GPIO_PinWrite(APP_BD70528_LPI2C_SCL_GPIO, APP_BD70528_LPI2C_SCL_PIN, 1U);
+        APP_SRTM_I2C_ReleaseBusDelay();
+        APP_SRTM_I2C_ReleaseBusDelay();
+    }
+
+    /* Send stop */
+    GPIO_PinWrite(APP_BD70528_LPI2C_SCL_GPIO, APP_BD70528_LPI2C_SCL_PIN, 0U);
+    APP_SRTM_I2C_ReleaseBusDelay();
+
+    GPIO_PinWrite(APP_BD70528_LPI2C_SDA_GPIO, APP_BD70528_LPI2C_SDA_PIN, 0U);
+    APP_SRTM_I2C_ReleaseBusDelay();
+
+    GPIO_PinWrite(APP_BD70528_LPI2C_SCL_GPIO, APP_BD70528_LPI2C_SCL_PIN, 1U);
+    APP_SRTM_I2C_ReleaseBusDelay();
+
+    GPIO_PinWrite(APP_BD70528_LPI2C_SDA_GPIO, APP_BD70528_LPI2C_SDA_PIN, 1U);
+    APP_SRTM_I2C_ReleaseBusDelay();
+}
+
+static void APP_SRTM_InitPeriph(bool resume)
+{
+    gpio_pin_config_t gpioConfig = {
+        kGPIO_DigitalOutput, 0U,
+    };
+
+    /* Init output DDR_SW_EN# to enabled. */
+    GPIO_PinInit(gpios[APP_GPIO_IDX(APP_PIN_DDR_SW_EN)], APP_PIN_IDX(APP_PIN_DDR_SW_EN), &gpioConfig);
+    /* Init output A7_POW_EN# to enabled. */
+    GPIO_PinInit(gpios[APP_GPIO_IDX(APP_PIN_A7_POW_EN)], APP_PIN_IDX(APP_PIN_A7_POW_EN), &gpioConfig);
+
+    MU_Init(MUA);
+}
+
+static void APP_SRTM_RecycleWakeupProc(srtm_message_t message, void *param)
+{
+    wakeupCA7Proc = message;
+}
+
+void APP_SRTM_Init(void)
+{
+    APP_SRTM_InitPeriph(false);
+
+    if (PMC0->CTRL & PMC0_CTRL_PMC1ON_MASK)
+    {
+        peercorePower = APP_SRTM_PowerOn;
+    }
+    else
+    {
+        peercorePower = APP_SRTM_PowerOff;
+    }
+
+    /* Set IRQ priority. */
+    NVIC_SetPriority(CMC1_IRQn, APP_A7Reset_IRQ_PRIO);
+    NVIC_SetPriority(USBPHY_IRQn, APP_USB_IRQ_PRIO);
+    NVIC_SetPriority(LLWU0_IRQn, APP_LLWU0_IRQ_PRIO);
+    EnableIRQ(LLWU0_IRQn);
+
+    monSig = xSemaphoreCreateBinary();
+    assert(monSig);
+
+    suspendTimer =
+        xTimerCreate("Suspend", APP_MS2TICK(APP_SUSPEND_TIMER_PERIOD_MS), pdFALSE, NULL, APP_SuspendTimerCallback);
+    assert(suspendTimer);
+
+    heartBeatTimer = xTimerCreate("HeartBeat", APP_MS2TICK(APP_HEART_BEAT_TIMER_PERIOD_MS), pdFALSE, NULL,
+                                  APP_HeartBeatTimerCallback);
+    assert(heartBeatTimer);
+
+    linkupTimer =
+        xTimerCreate("Linkup", APP_MS2TICK(APP_LINKUP_TIMER_PERIOD_MS), pdFALSE, NULL, APP_LinkupTimerCallback);
+    assert(linkupTimer);
+
+    suspendContext.io.data[APP_INPUT_VOL_PLUS].timer =
+        xTimerCreate("Vol+", APP_MS2TICK(50), pdFALSE, NULL, APP_VolPlusTimerCallback);
+    assert(suspendContext.io.data[APP_INPUT_VOL_PLUS].timer);
+    suspendContext.io.data[APP_INPUT_VOL_MINUS].timer =
+        xTimerCreate("Vol-", APP_MS2TICK(50), pdFALSE, NULL, APP_VolMinusTimerCallback);
+    assert(suspendContext.io.data[APP_INPUT_VOL_MINUS].timer);
+
+    suspendContext.io.data[APP_INPUT_ONOFF].timer =
+        xTimerCreate("OnOff", APP_MS2TICK(50), pdTRUE, NULL, APP_OnOffTimerCallback);
+    assert(suspendContext.io.data[APP_INPUT_ONOFF].timer);
+
+    /* Create procedure message to wake up CA7 core, used in IRQ handler. Parameter 1 stands for USB wakeup. */
+    wakeupCA7Proc = SRTM_Procedure_Create(APP_SRTM_DoWakeupCA7, (void *)1, NULL);
+    assert(wakeupCA7Proc);
+    SRTM_Message_SetFreeFunc(wakeupCA7Proc, APP_SRTM_RecycleWakeupProc, NULL);
+
+    /* Create SRTM dispatcher */
+    disp = SRTM_Dispatcher_Create();
+
+    xTaskCreate(SRTM_MonitorTask, "SRTM monitor", 256U, NULL, APP_SRTM_MONITOR_TASK_PRIO, NULL);
+    xTaskCreate(SRTM_DispatcherTask, "SRTM dispatcher", 512U, NULL, APP_SRTM_DISPATCHER_TASK_PRIO, NULL);
+}
+
+void APP_SRTM_Suspend(void)
+{
+    suspendContext.mu.CR = MUA->CR;
+
+    APP_SRTM_DeinitPmicDevice();
+}
+
+void APP_SRTM_Resume(bool resume)
+{
+    if (resume)
+    {
+        APP_SRTM_InitPeriph(true);
+        APP_SRTM_InitIoKeyDevice();
+        MUA->CR = suspendContext.mu.CR;
+    }
+
+    /* Even if suspend fails, I2C handle is destroyed. Need to initialize again. */
+    APP_SRTM_InitPmicDevice();
+}
+
+void APP_SRTM_BootCA7(void)
+{
+    srtm_procedure_t proc = SRTM_Procedure_Create(APP_SRTM_ControlCA7, (void *)APP_SRTM_StateRun, NULL);
+
+    assert(proc);
+    /* Fresh power up: Need SRTM monitor to prepare communication */
+    SRTM_Dispatcher_PostProc(disp, proc);
+}
+
+void APP_SRTM_RebootCA7(void)
+{
+    srtm_procedure_t proc = SRTM_Procedure_Create(APP_SRTM_ControlCA7, (void *)APP_SRTM_StateReboot, NULL);
+
+    assert(proc);
+    SRTM_Dispatcher_PostProc(disp, proc);
+}
+
+void APP_SRTM_ShutdownCA7(void)
+{
+    srtm_procedure_t proc = SRTM_Procedure_Create(APP_SRTM_ControlCA7, (void *)APP_SRTM_StateShutdown, NULL);
+
+    assert(proc);
+    SRTM_Dispatcher_PostProc(disp, proc);
+}
+
+void APP_SRTM_WakeupCA7(void)
+{
+    srtm_procedure_t proc = SRTM_Procedure_Create(APP_SRTM_DoWakeupCA7, NULL, NULL);
+
+    assert(proc);
+    SRTM_Dispatcher_PostProc(disp, proc);
+}
+
+uint32_t APP_SRTM_GetPmicReg(uint32_t reg)
+{
+    srtm_procedure_t proc;
+    uint32_t value;
+
+    proc = SRTM_Procedure_Create(APP_SRTM_GetBd70528Reg, (void *)reg, (void *)&value);
+    assert(proc);
+    SRTM_Dispatcher_CallProc(disp, proc, SRTM_WAIT_FOR_EVER);
+    SRTM_Procedure_Destroy(proc);
+
+    return value;
+}
+
+void APP_SRTM_SetPmicReg(uint32_t reg, uint32_t value)
+{
+    srtm_procedure_t proc;
+
+    proc = SRTM_Procedure_Create(APP_SRTM_SetBd70528Reg, (void *)reg, (void *)value);
+    assert(proc);
+    SRTM_Dispatcher_CallProc(disp, proc, SRTM_WAIT_FOR_EVER);
+    SRTM_Procedure_Destroy(proc);
+}
+
+void APP_SRTM_SetWakeupPin(uint16_t ioId, uint16_t event)
+{
+    srtm_procedure_t proc;
+
+    proc = SRTM_Procedure_Create(APP_SRTM_DoSetWakeupPin, (void *)(uint32_t)ioId, (void *)(uint32_t)event);
+    assert(proc);
+
+    SRTM_Dispatcher_CallProc(disp, proc, SRTM_WAIT_FOR_EVER);
+    SRTM_Procedure_Destroy(proc);
+}
+
+void APP_SRTM_SetWakeupModule(uint32_t module, bool enable)
+{
+    srtm_procedure_t proc;
+
+    proc = SRTM_Procedure_Create(APP_SRTM_DoSetWakeupModule, (void *)module, (void *)(uint32_t)enable);
+    assert(proc);
+
+    SRTM_Dispatcher_CallProc(disp, proc, SRTM_WAIT_FOR_EVER);
+    SRTM_Procedure_Destroy(proc);
+}
+
+void APP_SRTM_SetRpmsgMonitor(app_rpmsg_monitor_t monitor, void *param)
+{
+    rpmsgMonitor = monitor;
+    rpmsgMonitorParam = param;
+}
+
+void APP_SRTM_SetIRQHandler(app_irq_handler_t handler, void *param)
+{
+    irqHandler = handler;
+    irqHandlerParam = param;
+}
+
+struct rpmsg_lite_instance *APP_SRTM_GetRPMsgHandle(void)
+{
+    return rpmsgHandle;
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/app_srtm.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/app_srtm.h
new file mode 100644
index 0000000..eb02a82
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/app_srtm.h
@@ -0,0 +1,154 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef _APP_SRTM_H_
+#define _APP_SRTM_H_
+
+#include "rpmsg_lite.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/* IRQ handler priority definition, bigger number stands for lower priority */
+#define APP_LPI2C0_IRQ_PRIO (5U)
+#define APP_LPI2C3_IRQ_PRIO (5U)
+#define APP_A7Reset_IRQ_PRIO (4U) /* CA7 Reset IRQ priority */
+#define APP_SAI_TX_DMA_IRQ_PRIO (5U)
+#define APP_SAI_RX_DMA_IRQ_PRIO (5U)
+#define APP_SAI_IRQ_PRIO (5U)
+#define APP_GPIO_IRQ_PRIO (5U)
+#define APP_LLWU0_IRQ_PRIO (5U)
+#define APP_SNVS_IRQ_PRIO (5U)
+#define APP_USB_IRQ_PRIO (5U)
+
+/* Task priority definition, bigger number stands for higher priority */
+#define APP_SRTM_MONITOR_TASK_PRIO (4U)
+#define APP_SRTM_DISPATCHER_TASK_PRIO (3U)
+
+/* I2C baud rate */
+#define APP_LPI2C0_BAUDRATE (100000U)
+#define APP_LPI2C3_BAUDRATE (100000U)
+
+/* Macro used to release I2C bus in initialization */
+#define APP_LPI2C_DELAY (100U)
+#define APP_BD70528_LPI2C_SCL_GPIO GPIOB
+#define APP_BD70528_LPI2C_SCL_PIN (12U)
+#define APP_BD70528_LPI2C_SDA_GPIO GPIOB
+#define APP_BD70528_LPI2C_SDA_PIN (13U)
+
+/* SAI DMA channel */
+#define APP_SAI_TX_DMA_CHANNEL (1U)
+#define APP_SAI_RX_DMA_CHANNEL (0U)
+
+/* Define the period to polling the CA7 core suspend status */
+#define APP_SUSPEND_TIMER_PERIOD_MS (200U)
+/* Define the timeout ms to receive the heart beat message */
+#define APP_HEART_BEAT_TIMER_PERIOD_MS (31000U)
+/* Define the timeout ms to polling the CA7 link up status */
+#define APP_LINKUP_TIMER_PERIOD_MS (10U)
+
+#define RPMSG_LITE_SRTM_SHMEM_BASE (0x9FF00000U)
+#define RPMSG_LITE_SRTM_LINK_ID (0U)
+#define APP_SRTM_PMIC_CHANNEL_NAME "rpmsg-regulator-channel"
+#define APP_SRTM_LFCL_CHANNEL_NAME "rpmsg-life-cycle-channel"
+#define APP_SRTM_KEYPAD_CHANNEL_NAME "rpmsg-keypad-channel"
+#define APP_SRTM_IO_CHANNEL_NAME "rpmsg-io-channel"
+#define APP_SRTM_RTC_CHANNEL_NAME "rpmsg-rtc-channel"
+
+#define APP_PIN_ONOFF (0xFFFFU)        /* SNVS Power Pin */
+#define APP_PIN_A7_POW_EN (0x0019U)    /* PTA25 */
+#define APP_PIN_DDR_SW_EN (0x0106U)    /* PTB6 */
+#define APP_PIN_BT_REG_ON (0x000FU)    /* PTA15 */
+#define APP_PIN_WL_REG_ON (0x000EU)    /* PTA14 */
+#define APP_PIN_BT_HOST_WAKE (0x0107U) /* PTB7 */
+#define APP_PIN_WL_HOST_WAKE (0x001FU) /* PTA31 */
+#define APP_PIN_VOL_MINUS (0x000DU)    /* PTA13 */
+#define APP_PIN_VOL_PLUS (0x0003U)     /* PTA3 */
+
+/* Keypad index in Linux OS */
+#define APP_KEYPAD_INDEX_ONOFF (116U)
+#define APP_KEYPAD_INDEX_VOL_MINUS (114U)
+#define APP_KEYPAD_INDEX_VOL_PLUS (115U)
+
+/* LLWU module index */
+#define LLWU_MODULE_LPTMR0 (0U)
+#define LLWU_MODULE_LPTMR1 (1U)
+#define LLWU_MODULE_CMP0 (2U)
+#define LLWU_MODULE_CMP1 (3U)
+#define LLWU_MODULE_SNVS (4U)
+#define LLWU_MODULE_USBPHY (6U)
+
+#define APP_GPIO_IDX(ioId) ((uint8_t)(((uint16_t)ioId) >> 8U))
+#define APP_PIN_IDX(ioId) ((uint8_t)ioId)
+
+typedef void (*app_rpmsg_monitor_t)(struct rpmsg_lite_instance *rpmsgHandle, bool ready, void *param);
+typedef void (*app_irq_handler_t)(IRQn_Type irq, void *param);
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+
+#if defined(__cplusplus)
+extern "C" {
+#endif
+
+/* Release I2C buses used by SRTM services */
+void APP_SRTM_I2C_ReleaseBus(void);
+
+/* Initialize SRTM contexts */
+void APP_SRTM_Init(void);
+
+/* SRTM suspend: we need to save SRTM context */
+void APP_SRTM_Suspend(void);
+
+/* SRTM resume: we need to restore SRTM context.
+   Bool param means if this is a real resume or just recovery from failed power mode switch.*/
+void APP_SRTM_Resume(bool resume);
+
+/* If CA7 is not running, power on and kick off, then create the communication channels.
+   Otherwise only create the communication channels */
+void APP_SRTM_BootCA7(void);
+
+/* Reboot CA7 core */
+void APP_SRTM_RebootCA7(void);
+
+/* Shutdown CA7 core */
+void APP_SRTM_ShutdownCA7(void);
+
+/* Wakeup CA7 core from suspend mode */
+void APP_SRTM_WakeupCA7(void);
+
+/* Get PMIC register */
+uint32_t APP_SRTM_GetPmicReg(uint32_t reg);
+
+/* Set PMIC register */
+void APP_SRTM_SetPmicReg(uint32_t reg, uint32_t value);
+
+/* Enable or disable wakeup pin
+ * event[7:0]: llwu_external_pin_mode_t
+ * event[8]: LLWU wakeup enable
+ */
+void APP_SRTM_SetWakeupPin(uint16_t ioId, uint16_t event);
+
+/* Enable or disable LLWU wakeup module */
+void APP_SRTM_SetWakeupModule(uint32_t module, bool enable);
+
+/* Set RPMsg channel init/deinit monitor */
+void APP_SRTM_SetRpmsgMonitor(app_rpmsg_monitor_t monitor, void *param);
+
+/* Set SNVS IRQ handler for application */
+void APP_SRTM_SetIRQHandler(app_irq_handler_t handler, void *param);
+
+/* Get SRTM RPMsg handle */
+struct rpmsg_lite_instance *APP_SRTM_GetRPMsgHandle(void);
+
+#if defined(__cplusplus)
+}
+#endif
+
+#endif /* _APP_SRTM_H_ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/CMakeLists.txt b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/CMakeLists.txt
new file mode 100644
index 0000000..e466544
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/CMakeLists.txt
@@ -0,0 +1,846 @@
+INCLUDE(CMakeForceCompiler)
+
+# CROSS COMPILER SETTING
+SET(CMAKE_SYSTEM_NAME Generic)
+CMAKE_MINIMUM_REQUIRED (VERSION 2.6)
+
+# THE VERSION NUMBER
+SET (Tutorial_VERSION_MAJOR 1)
+SET (Tutorial_VERSION_MINOR 0)
+
+# ENABLE ASM
+ENABLE_LANGUAGE(ASM)
+
+SET(CMAKE_STATIC_LIBRARY_PREFIX)
+SET(CMAKE_STATIC_LIBRARY_SUFFIX)
+
+SET(CMAKE_EXECUTABLE_LIBRARY_PREFIX)
+SET(CMAKE_EXECUTABLE_LIBRARY_SUFFIX)
+
+ 
+# CURRENT DIRECTORY
+SET(ProjDirPath ${CMAKE_CURRENT_SOURCE_DIR})
+
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -DNDEBUG")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -D__STARTUP_CLEAR_BSS")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -DNO_CRP")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -Wall")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -fno-common")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -ffunction-sections")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -fdata-sections")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -ffreestanding")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -fno-builtin")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -mthumb")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -mapcs")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -std=gnu99")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -mcpu=cortex-m4")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -mfloat-abi=hard")
+
+SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -DDEBUG")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -DFSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -DENABLE_RAM_VECTOR_TABLE")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -D__STARTUP_CLEAR_BSS")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -DNO_CRP")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -g")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -Wall")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -fno-common")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -ffunction-sections")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -fdata-sections")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -ffreestanding")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -fno-builtin")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -mthumb")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -mapcs")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -std=gnu99")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -mcpu=cortex-m4")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -mfloat-abi=hard")
+
+SET(CMAKE_ASM_FLAGS_FLASH_DEBUG "${CMAKE_ASM_FLAGS_FLASH_DEBUG} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -DNDEBUG")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -DFSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -DENABLE_RAM_VECTOR_TABLE")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -D__STARTUP_CLEAR_BSS")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -DNO_CRP")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -Wall")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -fno-common")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -ffunction-sections")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -fdata-sections")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -ffreestanding")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -fno-builtin")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -mthumb")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -mapcs")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -std=gnu99")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -mcpu=cortex-m4")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -mfloat-abi=hard")
+
+SET(CMAKE_ASM_FLAGS_FLASH_RELEASE "${CMAKE_ASM_FLAGS_FLASH_RELEASE} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -DNDEBUG")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -DCPU_MCIMX7U5DVP08")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -DFSL_RTOS_FREE_RTOS")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -DSDK_I2C_BASED_COMPONENT_USED=1")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -DBOARD_USE_CODEC=0")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -Os")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -Wall")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -fno-common")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -ffunction-sections")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -fdata-sections")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -ffreestanding")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -fno-builtin")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -mthumb")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -mapcs")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -std=gnu99")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -mcpu=cortex-m4")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -mfloat-abi=hard")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -MMD")
+
+SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -MP")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DDEBUG")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DFSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DENABLE_RAM_VECTOR_TABLE")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DSRTM_DEBUG_MESSAGE_FUNC=DbgConsole_Printf")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DSRTM_DEBUG_VERBOSE_LEVEL=SRTM_DEBUG_VERBOSE_WARN")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DCPU_MCIMX7U5DVP08")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DFSL_RTOS_FREE_RTOS")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DSDK_I2C_BASED_COMPONENT_USED=1")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -DBOARD_USE_CODEC=0")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -g")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -O0")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -Wall")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -fno-common")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -ffunction-sections")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -fdata-sections")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -ffreestanding")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -fno-builtin")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -mthumb")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -mapcs")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -std=gnu99")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -mcpu=cortex-m4")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -mfloat-abi=hard")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -MMD")
+
+SET(CMAKE_C_FLAGS_FLASH_DEBUG "${CMAKE_C_FLAGS_FLASH_DEBUG} -MP")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -DNDEBUG")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -DFSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -DENABLE_RAM_VECTOR_TABLE")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -DCPU_MCIMX7U5DVP08")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -DFSL_RTOS_FREE_RTOS")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -DSDK_I2C_BASED_COMPONENT_USED=1")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -DBOARD_USE_CODEC=0")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -Os")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -Wall")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -fno-common")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -ffunction-sections")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -fdata-sections")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -ffreestanding")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -fno-builtin")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -mthumb")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -mapcs")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -std=gnu99")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -mcpu=cortex-m4")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -mfloat-abi=hard")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -MMD")
+
+SET(CMAKE_C_FLAGS_FLASH_RELEASE "${CMAKE_C_FLAGS_FLASH_RELEASE} -MP")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DNDEBUG")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DCPU_MCIMX7U5DVP08")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Os")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fno-common")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -ffunction-sections")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fdata-sections")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -ffreestanding")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fno-builtin")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -mthumb")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -mapcs")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fno-rtti")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fno-exceptions")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -mcpu=cortex-m4")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -mfloat-abi=hard")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -MMD")
+
+SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -MP")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -DDEBUG")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -DFSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -DENABLE_RAM_VECTOR_TABLE")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -DCPU_MCIMX7U5DVP08")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -g")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -O0")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -Wall")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -fno-common")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -ffunction-sections")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -fdata-sections")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -ffreestanding")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -fno-builtin")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -mthumb")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -mapcs")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -fno-rtti")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -fno-exceptions")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -mcpu=cortex-m4")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -mfloat-abi=hard")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -MMD")
+
+SET(CMAKE_CXX_FLAGS_FLASH_DEBUG "${CMAKE_CXX_FLAGS_FLASH_DEBUG} -MP")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -DNDEBUG")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -DFSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -DENABLE_RAM_VECTOR_TABLE")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -DCPU_MCIMX7U5DVP08")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -Os")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -Wall")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -fno-common")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -ffunction-sections")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -fdata-sections")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -ffreestanding")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -fno-builtin")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -mthumb")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -mapcs")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -fno-rtti")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -fno-exceptions")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -mcpu=cortex-m4")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -mfloat-abi=hard")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -MMD")
+
+SET(CMAKE_CXX_FLAGS_FLASH_RELEASE "${CMAKE_CXX_FLAGS_FLASH_RELEASE} -MP")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} --specs=nano.specs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} --specs=nosys.specs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Wall")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -fno-common")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -ffunction-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -fdata-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -ffreestanding")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -fno-builtin")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -mthumb")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -mapcs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} --gc-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -static")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -z")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} muldefs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -mcpu=cortex-m4")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -mfloat-abi=hard")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} --defsym=__stack_size__=0x400")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} --defsym=__heap_size__=0x400")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -g")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} --specs=nano.specs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} --specs=nosys.specs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -Wall")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -fno-common")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -ffunction-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -fdata-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -ffreestanding")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -fno-builtin")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -mthumb")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -mapcs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} --gc-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -static")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -z")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} muldefs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -mcpu=cortex-m4")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -mfloat-abi=hard")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} --defsym=__ram_vector_table__=1")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} --defsym=__stack_size__=0x400")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} --defsym=__heap_size__=0x400")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} --specs=nano.specs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} --specs=nosys.specs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -Wall")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -fno-common")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -ffunction-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -fdata-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -ffreestanding")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -fno-builtin")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -mthumb")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -mapcs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} --gc-sections")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -static")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -z")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} muldefs")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -mcpu=cortex-m4")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -mfloat-abi=hard")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -mfpu=fpv4-sp-d16")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} --defsym=__ram_vector_table__=1")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} --defsym=__stack_size__=0x400")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -Xlinker")
+
+SET(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} --defsym=__heap_size__=0x400")
+
+include_directories(${ProjDirPath}/..)
+
+include_directories(${ProjDirPath}/../../..)
+
+include_directories(${ProjDirPath}/..)
+
+include_directories(${ProjDirPath}/../../..)
+
+include_directories(${ProjDirPath}/..)
+
+include_directories(${ProjDirPath}/../../..)
+
+include_directories(${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F)
+
+include_directories(${ProjDirPath}/..)
+
+include_directories(${ProjDirPath}/../../..)
+
+include_directories(${ProjDirPath}/../../../../../CMSIS/Include)
+
+include_directories(${ProjDirPath}/../../../../../devices)
+
+include_directories(${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include)
+
+include_directories(${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/private)
+
+include_directories(${ProjDirPath}/../srtm/channels)
+
+include_directories(${ProjDirPath}/../srtm/services)
+
+include_directories(${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers)
+
+include_directories(${ProjDirPath}/../../../../../devices/MCIMX7U5)
+
+include_directories(${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities/str)
+
+include_directories(${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities)
+
+include_directories(${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities/debug_console)
+
+include_directories(${ProjDirPath}/../../../../../components/uart)
+
+include_directories(${ProjDirPath}/../../../../../components/serial_manager)
+
+include_directories(${ProjDirPath}/../../../../../components/lists)
+
+include_directories(${ProjDirPath}/../../../../../components/pf1550)
+
+include_directories(${ProjDirPath}/../../../../../components/bd70528)
+
+include_directories(${ProjDirPath}/../../../../../components/srtm/include)
+
+include_directories(${ProjDirPath}/../../../../../components/srtm/srtm)
+
+include_directories(${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/platform/imx7ulp_m4)
+
+include_directories(${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include)
+
+include_directories(${ProjDirPath}/../../../../../middleware/issdk/sensors)
+
+include_directories(${ProjDirPath}/../../../../../CMSIS/Driver/Include)
+
+include_directories(${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/source)
+
+include_directories(${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/include)
+
+include_directories(${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/include/libinclude)
+
+add_executable(power_mode_switch.elf 
+"${ProjDirPath}/../lpm.c"
+"${ProjDirPath}/../lpm.h"
+"${ProjDirPath}/lpm_asm.S"
+"${ProjDirPath}/../FreeRTOSConfig.h"
+"${ProjDirPath}/../rpmsg_config.h"
+"${ProjDirPath}/../clock_scg.c"
+"${ProjDirPath}/../power_mode_switch.c"
+"${ProjDirPath}/../power_mode_switch.h"
+"${ProjDirPath}/../pin_mux.c"
+"${ProjDirPath}/../pin_mux.h"
+"${ProjDirPath}/../board.c"
+"${ProjDirPath}/../board.h"
+"${ProjDirPath}/../clock_config.c"
+"${ProjDirPath}/../clock_config.h"
+"${ProjDirPath}/../fsl_iomuxc.h"
+"${ProjDirPath}/../app_srtm.c"
+"${ProjDirPath}/../app_srtm.h"
+"${ProjDirPath}/../srtm/channels/srtm_rpmsg_endpoint.h"
+"${ProjDirPath}/../srtm/channels/srtm_rpmsg_endpoint.c"
+"${ProjDirPath}/../srtm/services/srtm_lfcl_service.h"
+"${ProjDirPath}/../srtm/services/srtm_lfcl_service.c"
+"${ProjDirPath}/../srtm/services/srtm_pmic_service.h"
+"${ProjDirPath}/../srtm/services/srtm_pmic_service.c"
+"${ProjDirPath}/../srtm/services/srtm_bd70528_adapter.h"
+"${ProjDirPath}/../srtm/services/srtm_bd70528_adapter.c"
+"${ProjDirPath}/../srtm/services/srtm_io_service.h"
+"${ProjDirPath}/../srtm/services/srtm_io_service.c"
+"${ProjDirPath}/../srtm/services/srtm_keypad_service.h"
+"${ProjDirPath}/../srtm/services/srtm_keypad_service.c"
+"${ProjDirPath}/../srtm/services/srtm_rtc_service.h"
+"${ProjDirPath}/../srtm/services/srtm_rtc_service.c"
+"${ProjDirPath}/../srtm/services/srtm_snvs_lp_rtc_adapter.h"
+"${ProjDirPath}/../srtm/services/srtm_snvs_lp_rtc_adapter.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_port.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_llwu.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_llwu.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_lptmr.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_lptmr.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_gpio.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_gpio.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_clock.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_clock.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_common.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_common.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/fsl_device_registers.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/MCIMX7U5_cm4.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/MCIMX7U5_cm4_features.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/system_MCIMX7U5_cm4.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/system_MCIMX7U5_cm4.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities/str/fsl_str.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities/str/fsl_str.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities/debug_console/fsl_debug_console.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities/debug_console/fsl_debug_console.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities/debug_console/fsl_debug_console_conf.h"
+"${ProjDirPath}/../../../../../components/uart/uart.h"
+"${ProjDirPath}/../../../../../components/uart/lpuart_adapter.c"
+"${ProjDirPath}/../../../../../components/serial_manager/serial_manager.h"
+"${ProjDirPath}/../../../../../components/serial_manager/serial_manager.c"
+"${ProjDirPath}/../../../../../components/serial_manager/serial_port_uart.h"
+"${ProjDirPath}/../../../../../components/serial_manager/serial_port_uart.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_lpuart.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_lpuart.c"
+"${ProjDirPath}/../../../../../components/lists/generic_list.h"
+"${ProjDirPath}/../../../../../components/lists/generic_list.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/gcc/startup_MCIMX7U5_cm4.S"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_msmc.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_msmc.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/utilities/fsl_assert.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_dmamux.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_dmamux.c"
+"${ProjDirPath}/../../../../../CMSIS/Include/core_cm4.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/cmsis_armcc.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/cmsis_armclang.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/cmsis_gcc.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/cmsis_compiler.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/cmsis_version.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/mpu_armv7.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/core_armv8mbl.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/core_armv8mml.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/arm_common_tables.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/arm_const_structs.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/arm_math.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/cmsis_iccarm.h"
+"${ProjDirPath}/../../../../../CMSIS/Include/mpu_armv8.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_edma.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_edma.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_lpi2c.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_lpi2c.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_lpi2c_freertos.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_lpi2c_freertos.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/LICENSE"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/event_groups.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/FreeRTOS.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/message_buffer.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/queue.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/semphr.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/stream_buffer.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/task.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/timers.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/freertos_tasks_c_additions.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/private/deprecated_definitions.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/private/list.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/private/mpu_wrappers.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/private/portable.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/private/projdefs.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/include/private/stack_macros.h"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/event_groups.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/list.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/queue.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/stream_buffer.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/tasks.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/timers.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F/port.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_pmc0.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_snvs_lp.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_snvs_lp.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_mu.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_mu.c"
+"${ProjDirPath}/../../../../../components/bd70528/bd70528.h"
+"${ProjDirPath}/../../../../../components/bd70528/bd70528.c"
+"${ProjDirPath}/../../../../../components/pf1550/fsl_pf1550.h"
+"${ProjDirPath}/../../../../../components/pf1550/fsl_pf1550.c"
+"${ProjDirPath}/../../../../../components/pf1550/fsl_pf1550_charger.h"
+"${ProjDirPath}/../../../../../components/pf1550/fsl_pf1550_charger.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_sai.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_sai.c"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_sai_edma.h"
+"${ProjDirPath}/../../../../../devices/MCIMX7U5/drivers/fsl_sai_edma.c"
+"${ProjDirPath}/../../../../../components/srtm/port/srtm_heap_freertos.c"
+"${ProjDirPath}/../../../../../components/srtm/port/srtm_mutex_freertos.c"
+"${ProjDirPath}/../../../../../components/srtm/port/srtm_sem_freertos.c"
+"${ProjDirPath}/../../../../../components/srtm/include/srtm_channel.h"
+"${ProjDirPath}/../../../../../components/srtm/include/srtm_defs.h"
+"${ProjDirPath}/../../../../../components/srtm/include/srtm_dispatcher.h"
+"${ProjDirPath}/../../../../../components/srtm/include/srtm_message.h"
+"${ProjDirPath}/../../../../../components/srtm/include/srtm_peercore.h"
+"${ProjDirPath}/../../../../../components/srtm/include/srtm_service.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_channel.c"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_channel_struct.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_dispatcher.c"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_dispatcher_struct.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_message.c"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_message_struct.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_peercore.c"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_peercore_struct.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_service.c"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_service_struct.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_heap.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_message_pool.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_list.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_mutex.h"
+"${ProjDirPath}/../../../../../components/srtm/srtm/srtm_sem.h"
+"${ProjDirPath}/../../../../../components/srtm/port/srtm_message_pool.c"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/platform/imx7ulp_m4/rpmsg_platform.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/platform/imx7ulp_m4/rpmsg_platform.c"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/environment/rpmsg_env_freertos.c"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/rpmsg_env.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/rpmsg_queue.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/rpmsg_lite/rpmsg_queue.c"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/rpmsg_lite.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/rpmsg_ns.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/llist.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/rpmsg_default_config.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/virtio_ring.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/virtqueue.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/include/rpmsg_compiler.h"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/common/llist.c"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/rpmsg_lite/rpmsg_lite.c"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/rpmsg_lite/rpmsg_ns.c"
+"${ProjDirPath}/../../../../../middleware/multicore/rpmsg_lite/lib/virtio/virtqueue.c"
+"${ProjDirPath}/../../../../../rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang/heap_4.c"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/fxas21002.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/fxos8700.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/mpl3115.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/fxlc95000.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/fxls8471q.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/fxls8962.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/fxpq3115.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/mag3110.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/mma845x.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/mma865x.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/mma8491q.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/mma9553.h"
+"${ProjDirPath}/../../../../../middleware/issdk/sensors/diff_p.h"
+"${ProjDirPath}/../../../../../CMSIS/Driver/Include/Driver_I2C.h"
+"${ProjDirPath}/../../../../../CMSIS/Driver/Include/Driver_Common.h"
+"${ProjDirPath}/../../../../../CMSIS/Driver/Include/Driver_SPI.h"
+"${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/source/pedometer.c"
+"${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/include/pedometer.h"
+"${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/include/libinclude/KeynetikPedometer.h"
+)
+
+
+set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -T${ProjDirPath}/MCIMX7U5xxxxx_cm4_lpm_ram.ld -static")
+
+set(CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG "${CMAKE_EXE_LINKER_FLAGS_FLASH_DEBUG} -T${ProjDirPath}/MCIMX7U5xxxxx_cm4_lpm_flash.ld -static")
+
+set(CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE "${CMAKE_EXE_LINKER_FLAGS_FLASH_RELEASE} -T${ProjDirPath}/MCIMX7U5xxxxx_cm4_lpm_flash.ld -static")
+
+TARGET_LINK_LIBRARIES(power_mode_switch.elf -Wl,--start-group)
+target_link_libraries(power_mode_switch.elf optimized m)
+
+target_link_libraries(power_mode_switch.elf optimized c)
+
+target_link_libraries(power_mode_switch.elf optimized gcc)
+
+target_link_libraries(power_mode_switch.elf optimized nosys)
+
+target_link_libraries(power_mode_switch.elf optimized m)
+
+target_link_libraries(power_mode_switch.elf optimized c)
+
+target_link_libraries(power_mode_switch.elf optimized gcc)
+
+target_link_libraries(power_mode_switch.elf optimized nosys)
+
+target_link_libraries(power_mode_switch.elf optimized m)
+
+target_link_libraries(power_mode_switch.elf optimized c)
+
+target_link_libraries(power_mode_switch.elf optimized gcc)
+
+target_link_libraries(power_mode_switch.elf optimized nosys)
+
+link_directories(${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/lib)
+
+target_link_libraries(power_mode_switch.elf optimized ${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/lib/libpedometerm4.a)
+
+link_directories(${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/lib)
+
+target_link_libraries(power_mode_switch.elf optimized ${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/lib/libpedometerm4.a)
+
+link_directories(${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/lib)
+
+target_link_libraries(power_mode_switch.elf optimized ${ProjDirPath}/../../../../../middleware/issdk/algorithms/pedometer/lib/libpedometerm4.a)
+
+TARGET_LINK_LIBRARIES(power_mode_switch.elf -Wl,--end-group)
+
+ADD_CUSTOM_COMMAND(TARGET power_mode_switch.elf POST_BUILD COMMAND ${CMAKE_OBJCOPY}
+-Obinary ${EXECUTABLE_OUTPUT_PATH}/power_mode_switch.elf ${EXECUTABLE_OUTPUT_PATH}/sdk20-app.bin)
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/MCIMX7U5xxxxx_cm4_lpm_flash.ld b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/MCIMX7U5xxxxx_cm4_lpm_flash.ld
new file mode 100644
index 0000000..6c04de6
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/MCIMX7U5xxxxx_cm4_lpm_flash.ld
@@ -0,0 +1,238 @@
+/*
+** ###################################################################
+**     Processors:          MCIMX7U5CVP05
+**                          MCIMX7U5DVK08
+**                          MCIMX7U5DVP08
+**
+**     Compiler:            GNU C Compiler
+**     Reference manual:    i.MX7ULPRMV2, Rev. A, Dec. 2017
+**     Version:             rev. 5.0, 2017-12-22
+**     Build:               b180117
+**
+**     Abstract:
+**         Linker file for the GNU C Compiler
+**
+**     Copyright 2016 Freescale Semiconductor, Inc.
+**     Copyright 2016-2018 NXP
+**     All rights reserved.
+**
+**     SPDX-License-Identifier: BSD-3-Clause
+**
+**     http:                 www.nxp.com
+**     mail:                 support@nxp.com
+**
+** ###################################################################
+*/
+
+/* Entry Point */
+ENTRY(Reset_Handler)
+
+HEAP_SIZE  = DEFINED(__heap_size__)  ? __heap_size__  : 0x400;
+STACK_SIZE = DEFINED(__stack_size__) ? __stack_size__ : 0x400;
+M_VECTOR_RAM_SIZE = DEFINED(__ram_vector_table__) ? 0x0240 : 0x0;
+
+/* Memory region from [0x04000000-0x04001FFF] is reserved for ROM header */
+
+/* Specify the memory areas */
+MEMORY
+{
+  m_interrupts          (RX)  : ORIGIN = 0x04002000, LENGTH = 0x00000240
+  m_text                (RX)  : ORIGIN = 0x04002240, LENGTH = 0x003FDDC0
+  m_data                (RW)  : ORIGIN = 0x1FFD2000, LENGTH = 0x00026000
+/* 32KB RAM above 0x20008000 is used by ROM. In suspend/resume case, the RAM above 0x20008000
+ * will be corrupted by ROM. Application need to save data to somewhere safe, specifically,
+ * [0x20008000, 0x2000BFFF] to M4 suspend ram, and [0x2000C000, 0x2000DBFF] to
+ * ROM header area [0x1FFD0000-0x1FFD1BFF]. ROM header area [0x1FFD1C00-0x1FFD1FFF] is used
+ * for IOMUXC0/GPIOA/GPIOB recovery which must be done before pad isolation ack.
+ */
+  m_data_2              (RW)  : ORIGIN = 0x20000000, LENGTH = 0x0000DC00
+  m_m4_suspend_ram      (RW)  : ORIGIN = 0x1FFF8000, LENGTH = 0x00004000
+  m_a7_suspend_ram      (RW)  : ORIGIN = 0x1FFFC000, LENGTH = 0x00004000
+}
+
+/* Define output sections */
+SECTIONS
+{
+  /* The startup code goes first into internal flash */
+  .interrupts :
+  {
+    __VECTOR_TABLE = .;
+    . = ALIGN(4);
+    KEEP(*(.isr_vector))     /* Startup code */
+    . = ALIGN(4);
+  } > m_interrupts
+
+  /* The program code and other data goes into internal flash */
+  .text :
+  {
+    . = ALIGN(4);
+    *(.text)                 /* .text sections (code) */
+    *(.text*)                /* .text* sections (code) */
+    *(.rodata)               /* .rodata sections (constants, strings, etc.) */
+    *(.rodata*)              /* .rodata* sections (constants, strings, etc.) */
+    *(.glue_7)               /* glue arm to thumb code */
+    *(.glue_7t)              /* glue thumb to arm code */
+    *(.eh_frame)
+    KEEP (*(.init))
+    KEEP (*(.fini))
+    . = ALIGN(4);
+  } > m_text
+
+  .ARM.extab :
+  {
+    *(.ARM.extab* .gnu.linkonce.armextab.*)
+  } > m_text
+
+  .ARM :
+  {
+    __exidx_start = .;
+    *(.ARM.exidx*)
+    __exidx_end = .;
+  } > m_text
+
+ .ctors :
+  {
+    __CTOR_LIST__ = .;
+    /* gcc uses crtbegin.o to find the start of
+       the constructors, so we make sure it is
+       first.  Because this is a wildcard, it
+       doesn't matter if the user does not
+       actually link against crtbegin.o; the
+       linker won't look for a file to match a
+       wildcard.  The wildcard also means that it
+       doesn't matter which directory crtbegin.o
+       is in.  */
+    KEEP (*crtbegin.o(.ctors))
+    KEEP (*crtbegin?.o(.ctors))
+    /* We don't want to include the .ctor section from
+       from the crtend.o file until after the sorted ctors.
+       The .ctor section from the crtend file contains the
+       end of ctors marker and it must be last */
+    KEEP (*(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors))
+    KEEP (*(SORT(.ctors.*)))
+    KEEP (*(.ctors))
+    __CTOR_END__ = .;
+  } > m_text
+
+  .dtors :
+  {
+    __DTOR_LIST__ = .;
+    KEEP (*crtbegin.o(.dtors))
+    KEEP (*crtbegin?.o(.dtors))
+    KEEP (*(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors))
+    KEEP (*(SORT(.dtors.*)))
+    KEEP (*(.dtors))
+    __DTOR_END__ = .;
+  } > m_text
+
+  .preinit_array :
+  {
+    PROVIDE_HIDDEN (__preinit_array_start = .);
+    KEEP (*(.preinit_array*))
+    PROVIDE_HIDDEN (__preinit_array_end = .);
+  } > m_text
+
+  .init_array :
+  {
+    PROVIDE_HIDDEN (__init_array_start = .);
+    KEEP (*(SORT(.init_array.*)))
+    KEEP (*(.init_array*))
+    PROVIDE_HIDDEN (__init_array_end = .);
+  } > m_text
+
+  .fini_array :
+  {
+    PROVIDE_HIDDEN (__fini_array_start = .);
+    KEEP (*(SORT(.fini_array.*)))
+    KEEP (*(.fini_array*))
+    PROVIDE_HIDDEN (__fini_array_end = .);
+  } > m_text
+
+  __etext = .;    /* define a global symbol at end of code */
+  __DATA_ROM = .; /* Symbol is used by startup for data initialization */
+
+  .interrupts_ram :
+  {
+    . = ALIGN(4);
+    __VECTOR_RAM__ = .;
+    __interrupts_ram_start__ = .; /* Create a global symbol at data start */
+    *(.m_interrupts_ram)     /* This is a user defined section */
+    . += M_VECTOR_RAM_SIZE;
+    . = ALIGN(4);
+    __interrupts_ram_end__ = .; /* Define a global symbol at data end */
+  } > m_data
+
+  __VECTOR_RAM = DEFINED(__ram_vector_table__) ? __VECTOR_RAM__ : ORIGIN(m_interrupts);
+  __RAM_VECTOR_TABLE_SIZE_BYTES = DEFINED(__ram_vector_table__) ? (__interrupts_ram_end__ - __interrupts_ram_start__) : 0x0;
+
+  .data : AT(__DATA_ROM)
+  {
+    __data_start__ = .;      /* create a global symbol at data start */
+    __quickaccess_start__ = .;
+    . = ALIGN(32);
+    *(CodeQuickAccess)
+    *(DataQuickAccess)
+    . = ALIGN(128);
+    __quickaccess_end__ = .;
+    __DATA_RAM = .;
+    *(.data)                 /* .data sections */
+    *(.data*)                /* .data* sections */
+    KEEP(*(.jcr*))
+    . = ALIGN(4);
+    __data_end__ = .;        /* define a global symbol at data end */
+  } > m_data
+
+  __DATA_END = __DATA_ROM + (__data_end__ - __data_start__);
+  text_end = ORIGIN(m_text) + LENGTH(m_text);
+  ASSERT(__DATA_END <= text_end, "region m_text overflowed with text and data")
+
+  /* Uninitialized data section */
+  .bss :
+  {
+    /* This is used by the startup in order to initialize the .bss section */
+    . = ALIGN(4);
+    __START_BSS = .;
+    __bss_start__ = .;
+    *(.bss)
+    *(.bss*)
+    *(COMMON)
+    . = ALIGN(4);
+    __bss_end__ = .;
+    __END_BSS = .;
+  } > m_data
+
+  .m4_suspend :
+  {
+    *(M4SuspendRam)
+    . = ALIGN(4);
+  } > m_m4_suspend_ram
+
+  .heap :
+  {
+    . = ALIGN(8);
+    __end__ = .;
+    PROVIDE(end = .);
+    __HeapBase = .;
+    . += HEAP_SIZE;
+    __HeapLimit = .;
+    __heap_limit = .; /* Add for _sbrk */
+  } > m_data_2
+
+  ASSERT(__HeapLimit <= ORIGIN(m_data_2) + LENGTH(m_data_2), "region m_data_2 overflowed with heap")
+
+  /*
+  .stack :
+  {
+    . = ALIGN(8);
+  } > m_data_2
+*/
+  /* Initializes stack on the end of block */
+  __StackTop   = ORIGIN(m_data_2) + LENGTH(m_data_2) + STACK_SIZE;
+  __StackLimit = __StackTop - STACK_SIZE;
+  PROVIDE(__stack = __StackTop);
+
+  .ARM.attributes 0 : { *(.ARM.attributes) }
+
+  ASSERT(__StackTop <= 0x20010000, "region stack overflowed")
+}
+
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/MCIMX7U5xxxxx_cm4_lpm_ram.ld b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/MCIMX7U5xxxxx_cm4_lpm_ram.ld
new file mode 100644
index 0000000..72e5718
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/MCIMX7U5xxxxx_cm4_lpm_ram.ld
@@ -0,0 +1,234 @@
+/*
+** ###################################################################
+**     Processors:          MCIMX7U5CVP05
+**                          MCIMX7U5DVK08
+**                          MCIMX7U5DVP08
+**
+**     Compiler:            GNU C Compiler
+**     Reference manual:    i.MX7ULPRMV2, Rev. A, Dec. 2017
+**     Version:             rev. 5.0, 2017-12-22
+**     Build:               b180117
+**
+**     Abstract:
+**         Linker file for the GNU C Compiler
+**
+**     Copyright 2016 Freescale Semiconductor, Inc.
+**     Copyright 2016-2018 NXP
+**     All rights reserved.
+**
+**     SPDX-License-Identifier: BSD-3-Clause
+**
+**     http:                 www.nxp.com
+**     mail:                 support@nxp.com
+**
+** ###################################################################
+*/
+
+/* Entry Point */
+ENTRY(Reset_Handler)
+
+HEAP_SIZE  = DEFINED(__heap_size__)  ? __heap_size__  : 0x400;
+STACK_SIZE = DEFINED(__stack_size__) ? __stack_size__ : 0x400;
+M_VECTOR_RAM_SIZE = DEFINED(__ram_vector_table__) ? 0x0240 : 0x0;
+
+/* Memory region from [0x1FFD0000-0x1FFD1FFF] is reserved for ROM header */
+
+/* Specify the memory areas */
+MEMORY
+{
+  m_interrupts          (RX)  : ORIGIN = 0x1FFD2000, LENGTH = 0x00000240
+  m_text                (RX)  : ORIGIN = 0x1FFD2240, LENGTH = 0x00025DC0
+/* 32KB RAM above 0x20008000 is used by ROM. In suspend/resume case, the RAM above 0x20008000
+ * will be corrupted by ROM. Application need to save data to somewhere safe, specifically,
+ * [0x20008000, 0x2000BFFF] to M4 suspend ram, and [0x2000C000, 0x2000DBFF] to
+ * ROM header area [0x1FFD0000-0x1FFD1BFF]. ROM header area [0x1FFD1C00-0x1FFD1FFF] is used
+ * for IOMUXC0/GPIOA/GPIOB recovery which must be done before pad isolation ack.
+ */
+  m_data                (RW)  : ORIGIN = 0x20000000, LENGTH = 0x0000DC00
+  m_m4_suspend_ram      (RW)  : ORIGIN = 0x1FFF8000, LENGTH = 0x00004000
+  m_a7_suspend_ram      (RW)  : ORIGIN = 0x1FFFC000, LENGTH = 0x00004000
+}
+
+/* Define output sections */
+SECTIONS
+{
+  /* The startup code goes first into internal RAM */
+  .interrupts :
+  {
+    __VECTOR_TABLE = .;
+    . = ALIGN(4);
+    KEEP(*(.isr_vector))     /* Startup code */
+    . = ALIGN(4);
+  } > m_interrupts
+
+  /* The program code and other data goes into internal RAM */
+  .text :
+  {
+    . = ALIGN(4);
+    *(.text)                 /* .text sections (code) */
+    *(.text*)                /* .text* sections (code) */
+    *(.rodata)               /* .rodata sections (constants, strings, etc.) */
+    *(.rodata*)              /* .rodata* sections (constants, strings, etc.) */
+    *(.glue_7)               /* glue arm to thumb code */
+    *(.glue_7t)              /* glue thumb to arm code */
+    *(.eh_frame)
+    KEEP (*(.init))
+    KEEP (*(.fini))
+    . = ALIGN(4);
+  } > m_text
+
+  .ARM.extab :
+  {
+    *(.ARM.extab* .gnu.linkonce.armextab.*)
+  } > m_text
+
+  .ARM :
+  {
+    __exidx_start = .;
+    *(.ARM.exidx*)
+    __exidx_end = .;
+  } > m_text
+
+ .ctors :
+  {
+    __CTOR_LIST__ = .;
+    /* gcc uses crtbegin.o to find the start of
+       the constructors, so we make sure it is
+       first.  Because this is a wildcard, it
+       doesn't matter if the user does not
+       actually link against crtbegin.o; the
+       linker won't look for a file to match a
+       wildcard.  The wildcard also means that it
+       doesn't matter which directory crtbegin.o
+       is in.  */
+    KEEP (*crtbegin.o(.ctors))
+    KEEP (*crtbegin?.o(.ctors))
+    /* We don't want to include the .ctor section from
+       from the crtend.o file until after the sorted ctors.
+       The .ctor section from the crtend file contains the
+       end of ctors marker and it must be last */
+    KEEP (*(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors))
+    KEEP (*(SORT(.ctors.*)))
+    KEEP (*(.ctors))
+    __CTOR_END__ = .;
+  } > m_text
+
+  .dtors :
+  {
+    __DTOR_LIST__ = .;
+    KEEP (*crtbegin.o(.dtors))
+    KEEP (*crtbegin?.o(.dtors))
+    KEEP (*(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors))
+    KEEP (*(SORT(.dtors.*)))
+    KEEP (*(.dtors))
+    __DTOR_END__ = .;
+  } > m_text
+
+  .preinit_array :
+  {
+    PROVIDE_HIDDEN (__preinit_array_start = .);
+    KEEP (*(.preinit_array*))
+    PROVIDE_HIDDEN (__preinit_array_end = .);
+  } > m_text
+
+  .init_array :
+  {
+    PROVIDE_HIDDEN (__init_array_start = .);
+    KEEP (*(SORT(.init_array.*)))
+    KEEP (*(.init_array*))
+    PROVIDE_HIDDEN (__init_array_end = .);
+  } > m_text
+
+  .fini_array :
+  {
+    PROVIDE_HIDDEN (__fini_array_start = .);
+    KEEP (*(SORT(.fini_array.*)))
+    KEEP (*(.fini_array*))
+    PROVIDE_HIDDEN (__fini_array_end = .);
+  } > m_text
+
+  __etext = .;    /* define a global symbol at end of code */
+  __DATA_ROM = .; /* Symbol is used by startup for data initialization */
+
+  .interrupts_ram :
+  {
+    . = ALIGN(4);
+    __VECTOR_RAM__ = .;
+    __interrupts_ram_start__ = .; /* Create a global symbol at data start */
+    *(.m_interrupts_ram)     /* This is a user defined section */
+    . += M_VECTOR_RAM_SIZE;
+    . = ALIGN(4);
+    __interrupts_ram_end__ = .; /* Define a global symbol at data end */
+  } > m_data
+
+  __VECTOR_RAM = DEFINED(__ram_vector_table__) ? __VECTOR_RAM__ : ORIGIN(m_interrupts);
+  __RAM_VECTOR_TABLE_SIZE_BYTES = DEFINED(__ram_vector_table__) ? (__interrupts_ram_end__ - __interrupts_ram_start__) : 0x0;
+
+  .data : AT(__DATA_ROM)
+  {
+    . = ALIGN(4);
+    __DATA_RAM = .;
+    __data_start__ = .;      /* create a global symbol at data start */
+    *(.data)                 /* .data sections */
+    *(.data*)                /* .data* sections */
+    KEEP(*(.jcr*))
+    . = ALIGN(4);
+    __data_end__ = .;        /* define a global symbol at data end */
+  } > m_data
+
+  __DATA_END = __DATA_ROM + (__data_end__ - __data_start__);
+  text_end = ORIGIN(m_text) + LENGTH(m_text);
+  ASSERT(__DATA_END <= text_end, "region m_text overflowed with text and data")
+
+  /* Uninitialized data section */
+  .bss :
+  {
+    /* This is used by the startup in order to initialize the .bss section */
+    . = ALIGN(4);
+    __START_BSS = .;
+    __bss_start__ = .;
+    *(.bss)
+    *(.bss*)
+    *(COMMON)
+    . = ALIGN(4);
+    __bss_end__ = .;
+    __END_BSS = .;
+  } > m_data
+
+  .m4_suspend :
+  {
+    *(M4SuspendRam)
+    . = ALIGN(4);
+  } > m_m4_suspend_ram
+
+  .heap :
+  {
+    . = ALIGN(8);
+    __end__ = .;
+    PROVIDE(end = .);
+    __HeapBase = .;
+    . += HEAP_SIZE;
+    __HeapLimit = .;
+    __heap_limit = .; /* Add for _sbrk */
+  } > m_data
+
+  ASSERT(__HeapLimit <= ORIGIN(m_data) + LENGTH(m_data), "region m_data overflowed with heap")
+
+  /*
+  .stack :
+  {
+    . = ALIGN(8);
+    . += STACK_SIZE;
+  } > m_data
+*/
+
+  /* Initializes stack on the end of block */
+  __StackTop   = ORIGIN(m_data) + LENGTH(m_data) + STACK_SIZE;
+  __StackLimit = __StackTop - STACK_SIZE;
+  PROVIDE(__stack = __StackTop);
+
+  .ARM.attributes 0 : { *(.ARM.attributes) }
+
+  ASSERT(__StackTop <= 0x20010000, "region stack overflowed")
+}
+
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build.sh b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build.sh
new file mode 100755
index 0000000..ae32152
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+sh build_release.sh
+
+cp release/sdk20-app.bin ../../../../../tools/imgutil/evkmcimx7ulp/
+cd ../../../../../tools/imgutil/evkmcimx7ulp/
+./mkimg.sh ram
+cp sdk20-app.img ../../../boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc
+cd -
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_all.bat b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_all.bat
new file mode 100644
index 0000000..8a2766a
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_all.bat
@@ -0,0 +1,7 @@
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=release  .
+mingw32-make -j4
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=flash_debug  .
+mingw32-make -j4
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=flash_release  .
+mingw32-make -j4
+IF "%1" == "" ( pause )
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_all.sh b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_all.sh
new file mode 100644
index 0000000..3187b9d
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_all.sh
@@ -0,0 +1,7 @@
+#!/bin/sh
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=release  .
+make -j4
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=flash_debug  .
+make -j4
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=flash_release  .
+make -j4
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_debug.bat b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_debug.bat
new file mode 100644
index 0000000..00d35df
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_debug.bat
@@ -0,0 +1,3 @@
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=flash_debug  .
+mingw32-make -j4
+IF "%1" == "" ( pause ) 
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_debug.sh b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_debug.sh
new file mode 100644
index 0000000..0760a1b
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_debug.sh
@@ -0,0 +1,3 @@
+#!/bin/sh
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=flash_debug  .
+make -j4
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_release.bat b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_release.bat
new file mode 100644
index 0000000..32d36b9
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_release.bat
@@ -0,0 +1,3 @@
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=flash_release  .
+mingw32-make -j4
+IF "%1" == "" ( pause ) 
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_release.sh b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_release.sh
new file mode 100644
index 0000000..808d15e
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_flash_release.sh
@@ -0,0 +1,3 @@
+#!/bin/sh
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=flash_release  .
+make -j4
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_release.bat b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_release.bat
new file mode 100644
index 0000000..bf845b8
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_release.bat
@@ -0,0 +1,3 @@
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=release  .
+mingw32-make -j4
+IF "%1" == "" ( pause ) 
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_release.sh b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_release.sh
new file mode 100644
index 0000000..299c5b3
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/build_release.sh
@@ -0,0 +1,3 @@
+#!/bin/sh
+cmake -DCMAKE_TOOLCHAIN_FILE="../../../../../tools/cmake_toolchain_files/armgcc.cmake" -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=release  .
+make -j4
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/clean.bat b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/clean.bat
new file mode 100644
index 0000000..ad8f5e6
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/clean.bat
@@ -0,0 +1,3 @@
+RD /s /Q release flash_debug flash_release CMakeFiles
+DEL /s /Q /F Makefile cmake_install.cmake CMakeCache.txt
+pause
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/clean.sh b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/clean.sh
new file mode 100755
index 0000000..f784d78
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/clean.sh
@@ -0,0 +1,3 @@
+#!/bin/sh
+rm -rf release flash_debug flash_release CMakeFiles
+rm -rf Makefile cmake_install.cmake CMakeCache.txt
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/lpm_asm.S b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/lpm_asm.S
new file mode 100644
index 0000000..9fb2a64
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/armgcc/lpm_asm.S
@@ -0,0 +1,193 @@
+/*
+ * Copyright 2017-2018 NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+        .syntax unified
+        .arch armv7-m
+#if FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE
+        .section CodeQuickAccess, "ax"
+#else
+        .text
+#endif
+        .extern  LPM_NvicStateSave
+        .extern  LPM_NvicStateRestore
+        .extern  LPM_SystemSuspend
+        .extern  LPM_SystemResume
+        .extern  SystemInit
+        .extern  __isr_vector
+
+        .thumb
+
+        .thumb_func
+        .align 2
+        .globl LPM_Suspend
+        .type LPM_Suspend, %function
+LPM_Suspend:
+        /* Primask has been set before entering this function */
+        PUSH    {R4-R11, LR}                 /* Save task return context */
+        MRS     R0, CONTROL
+        PUSH    {R0}                         /* Save CONTROL register */
+
+        /* Save NVIC */
+        LDR     R1, =LPM_NvicStateSave
+        BLX     R1
+
+        LDR     R1, =0x1FFD1C00
+        /* Save IOMUXC0 MUX register */
+        LDR     R2, =0x4103D000
+        LDR     R3, =0x4103D0D0
+LPM_S0:
+        CMP     R2, R3
+        ITTT    LT
+        LDRLT   R0, [R2], #4
+        STRLT   R0, [R1], #4
+        BLT     LPM_S0
+        /* Save IOMUXC0 SELECT INPUT register */
+        LDR     R2, =0x4103D100
+        LDR     R3, =0x4103D22C
+LPM_S1:
+        CMP     R2, R3
+        ITTT    LT
+        LDRLT   R0, [R2], #4
+        STRLT   R0, [R1], #4
+        BLT     LPM_S1
+        /* Save GPIOA register */
+        LDR     R2, =0x4100F000
+        LDR     R0, [R2, #0x0]  /* PDOR */
+        STR     R0, [R1], #4
+        LDR     R0, [R2, #0x14] /* PDDR */
+        STR     R0, [R1], #4
+        /* Save GPIOB register */
+        LDR     R2, =0x4100F040
+        LDR     R0, [R2, #0x0]  /* PDOR */
+        STR     R0, [R1], #4
+        LDR     R0, [R2, #0x14] /* PDDR */
+        STR     R0, [R1], #4
+
+        MOV     R0, SP                       /* Set 1st param to SP */
+        LDR     R1, =LPM_SystemSuspend
+        BLX     R1                           /* Won't return unless wakeup before suspend */
+
+        MOV     R0, #0                       /* Set resume parameter to false */
+        LDR     R1, =LPM_SystemResume
+        BLX     R1                           /* Suspend failed, resume system */
+
+        /* NVIC didn't change in LPM_SystemSuspend, no recovery needed. */
+
+        POP     {R0}                         /* CONTROL not changed, discard the data in stack. */
+        POP     {R4-R11, LR}
+        MOV     R0, #0                       /* Return false means suspend failure. */
+        BX      LR
+
+        .thumb_func
+        .align 2
+        .globl LPM_Resume
+        .type LPM_Resume, %function
+LPM_Resume:
+        CPSID   I
+
+        /* Enable GPIO clock */
+        LDR     R1, =0x40000000
+        LDR     R0, =0x41026000
+        STR     R1, [R0, #0x3C]  /* PCC0->RGPIO2P0 = PCC_CLKCFG_CGC_MASK; */
+        STR     R1, [R0, #0xFC]  /* PCC0->PCTLA = PCC_CLKCFG_CGC_MASK; */
+        STR     R1, [R0, #0x100] /* PCC0->PCTLB = PCC_CLKCFG_CGC_MASK; */
+
+        LDR     R1, =0x1FFD1C00
+        /* Restore IOMUXC0 MUX register */
+        LDR     R2, =0x4103D000
+        LDR     R3, =0x4103D0D0
+LPM_R0:
+        CMP     R2, R3
+        ITTT    LT
+        LDRLT   R0, [R1], #4
+        STRLT   R0, [R2], #4
+        BLT     LPM_R0
+        /* Restore IOMUXC0 SELECT INPUT register */
+        LDR     R2, =0x4103D100
+        LDR     R3, =0x4103D22C
+LPM_R1:
+        CMP     R2, R3
+        ITTT    LT
+        LDRLT   R0, [R1], #4
+        STRLT   R0, [R2], #4
+        BLT     LPM_R1
+        /* Restore GPIOA register */
+        LDR     R2, =0x4100F000
+        LDR     R0, [R1], #4
+        STR     R0, [R2, #0x0]  /* PDOR */
+        LDR     R0, [R1], #4
+        STR     R0, [R2, #0x14] /* PDDR */
+        /* Restore GPIOB register */
+        LDR     R2, =0x4100F040
+        LDR     R0, [R1], #4
+        STR     R0, [R2, #0x0]  /* PDOR */
+        LDR     R0, [R1], #4
+        STR     R0, [R2, #0x14] /* PDDR */
+        /* Clear pad isolation */
+        LDR     R0, =0x410A1028
+        LDR     R1, [R0]
+        ORR     R1, R1, #0x4000
+        STR     R1, [R0]
+
+        /* Judge if the code is running in QSPI flash region [0x04000000, 0x0C000000]. */
+        /* If so, need to initialize QSPI first. */
+        LDR     R1, =SystemInit
+        LDR     R0, =0x04000000
+        CMP     R1, R0
+        BCC     LPM_MediaReady
+        LDR     R0, =0x0C000000
+        CMP     R1, R0
+        BCS     LPM_MediaReady
+
+        BL      LPM_InitQSPI
+
+LPM_MediaReady:
+        LDR     R0, =0xE000ED08
+        LDR     R1, =__isr_vector
+        STR     R1, [R0]
+        LDR     R2, [R1]                     /* Initialize resume stack, which is same as startup stack. */
+        MSR     MSP, R2
+
+        LDR     R0, =SystemInit
+        BLX     R0                           /* Call SystemInit to initialize SoC */
+        MOV     R0, #1                       /* Set resume parameter to true */
+        LDR     R1, =LPM_SystemResume
+        BLX     R1                           /* Resume from VLLS, return PSP */
+        MOV     R4, R0                       /* Save PSP to R4 */
+
+        LDR     R1, =LPM_NvicStateRestore
+        BLX     R1                           /* Restore NVIC */
+
+        MOV     R0, R4
+        LDMIA   R0!, {R1, R4-R11, LR}        /* Restore core registers, R1 stores CONTROL value */
+
+        /* Restore CONTROL and return */
+        MSR     PSP, R0                      /* Recover PSP */
+        MSR     CONTROL, R1                  /* Recover CONTROL */
+        ISB
+        MOV     R0, #1                       /* Return true means suspend successfully. */
+        BX      LR                           /* Primask will be cleared outside this function */
+
+LPM_InitQSPI:
+        LDR     R0, =0x41027304
+        MOV     R1, #0x1
+        STR     R1, [R0]                     /* Set FIRC async plat divider to 1 */
+
+        LDR     R0, =0x410B2094
+        LDR     R1, =0x43000000
+        STR     R1, [R0]                     /* Select QSPI clock to SOSC DIV1 and enable it */
+
+        LDR     R0, =0x410A5000
+        LDR     R1, [R0]
+        BIC     R1, R1, #0x4000
+        STR     R1, [R0]                     /* MCR: QSPIA Enable */
+
+        ISB
+        DSB
+        BX      LR
+
+        .end
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/board.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/board.c
new file mode 100644
index 0000000..3db089d
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/board.c
@@ -0,0 +1,133 @@
+/*
+ * Copyright (c) 2016, Freescale Semiconductor, Inc.
+ * Copyright 2016-2018 NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include "fsl_common.h"
+#include "fsl_debug_console.h"
+#include "board.h"
+#if defined(SDK_I2C_BASED_COMPONENT_USED) && SDK_I2C_BASED_COMPONENT_USED
+#include "fsl_lpi2c.h"
+#endif /* SDK_I2C_BASED_COMPONENT_USED */
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+/* Initialize debug console. */
+void BOARD_InitDebugConsole(void)
+{
+    CLOCK_SetIpSrc(kCLOCK_Lpuart0, BOARD_DEBUG_UART_CLKSRC);
+
+    uint32_t uartClkSrcFreq = BOARD_DEBUG_UART_CLK_FREQ;
+
+    DbgConsole_Init(BOARD_DEBUG_UART_INSTANCE, BOARD_DEBUG_UART_BAUDRATE, BOARD_DEBUG_UART_TYPE, uartClkSrcFreq);
+}
+
+#if defined(SDK_I2C_BASED_COMPONENT_USED) && SDK_I2C_BASED_COMPONENT_USED
+void BOARD_LPI2C_Init(LPI2C_Type *base, uint32_t clkSrc_Hz)
+{
+    lpi2c_master_config_t lpi2cConfig = {0};
+
+    /*
+     * lpi2cConfig.debugEnable = false;
+     * lpi2cConfig.ignoreAck = false;
+     * lpi2cConfig.pinConfig = kLPI2C_2PinOpenDrain;
+     * lpi2cConfig.baudRate_Hz = 100000U;
+     * lpi2cConfig.busIdleTimeout_ns = 0;
+     * lpi2cConfig.pinLowTimeout_ns = 0;
+     * lpi2cConfig.sdaGlitchFilterWidth_ns = 0;
+     * lpi2cConfig.sclGlitchFilterWidth_ns = 0;
+     */
+    LPI2C_MasterGetDefaultConfig(&lpi2cConfig);
+    LPI2C_MasterInit(base, &lpi2cConfig, clkSrc_Hz);
+}
+
+status_t BOARD_LPI2C_Send(LPI2C_Type *base,
+                          uint8_t deviceAddress,
+                          uint32_t subAddress,
+                          uint8_t subAddressSize,
+                          uint8_t *txBuff,
+                          uint8_t txBuffSize)
+{
+    status_t reVal;
+
+    /* Send master blocking data to slave */
+    reVal = LPI2C_MasterStart(base, deviceAddress, kLPI2C_Write);
+    if (kStatus_Success == reVal)
+    {
+        while (LPI2C_MasterGetStatusFlags(base) & kLPI2C_MasterNackDetectFlag)
+        {
+        }
+
+        reVal = LPI2C_MasterSend(base, &subAddress, subAddressSize);
+        if (reVal != kStatus_Success)
+        {
+            return reVal;
+        }
+
+        reVal = LPI2C_MasterSend(base, txBuff, txBuffSize);
+        if (reVal != kStatus_Success)
+        {
+            return reVal;
+        }
+
+        reVal = LPI2C_MasterStop(base);
+        if (reVal != kStatus_Success)
+        {
+            return reVal;
+        }
+    }
+
+    return reVal;
+}
+
+status_t BOARD_LPI2C_Receive(LPI2C_Type *base,
+                             uint8_t deviceAddress,
+                             uint32_t subAddress,
+                             uint8_t subAddressSize,
+                             uint8_t *rxBuff,
+                             uint8_t rxBuffSize)
+{
+    status_t reVal;
+
+    reVal = LPI2C_MasterStart(base, deviceAddress, kLPI2C_Write);
+    if (kStatus_Success == reVal)
+    {
+        while (LPI2C_MasterGetStatusFlags(base) & kLPI2C_MasterNackDetectFlag)
+        {
+        }
+
+        reVal = LPI2C_MasterSend(base, &subAddress, subAddressSize);
+        if (reVal != kStatus_Success)
+        {
+            return reVal;
+        }
+
+        reVal = LPI2C_MasterRepeatedStart(base, deviceAddress, kLPI2C_Read);
+        if (reVal != kStatus_Success)
+        {
+            return reVal;
+        }
+
+        reVal = LPI2C_MasterReceive(base, rxBuff, rxBuffSize);
+        if (reVal != kStatus_Success)
+        {
+            return reVal;
+        }
+
+        reVal = LPI2C_MasterStop(base);
+        if (reVal != kStatus_Success)
+        {
+            return reVal;
+        }
+    }
+    return reVal;
+}
+#endif /* SDK_I2C_BASED_COMPONENT_USED */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/board.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/board.h
new file mode 100644
index 0000000..3587d5d
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/board.h
@@ -0,0 +1,74 @@
+/*
+ * Copyright (c) 2016, Freescale Semiconductor, Inc.
+ * Copyright 2016-2018 NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef _BOARD_H_
+#define _BOARD_H_
+
+#include "clock_config.h"
+#include "fsl_clock.h"
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/*! @brief The board name */
+#define BOARD_NAME "MCIMX7ULP-EVK"
+#define MANUFACTURER_NAME "NXP"
+
+/* The UART to use for debug messages. */
+#define BOARD_DEBUG_UART_TYPE kSerialPort_Uart
+#define BOARD_DEBUG_UART_BAUDRATE 115200u
+#define BOARD_DEBUG_UART_BASEADDR LPUART0_BASE
+#define BOARD_DEBUG_UART_INSTANCE 0U
+#define BOARD_DEBUG_UART_CLK_FREQ CLOCK_GetIpFreq(kCLOCK_Lpuart0)
+#define BOARD_DEBUG_UART_PCC_ADDRESS kCLOCK_Lpuart0
+#define BOARD_DEBUG_UART_CLKSRC kCLOCK_IpSrcSystem
+#define BOARD_UART_IRQ LPUART0_IRQn
+#define BOARD_UART_IRQ_HANDLER LPUART0_IRQHandler
+
+#define BOARD_VOLP_GPIO GPIOA
+#define BOARD_VOLP_PORT PORTA
+#define BOARD_VOLP_GPIO_PIN 3U
+#define BOARD_VOLP_IRQ PCTLA_IRQn
+#define BOARD_VOLP_IRQ_HANDLER PCTLA_IRQHandler
+#define BOARD_VOLP_NAME "VOL+"
+
+#define BOARD_VOLM_GPIO GPIOA
+#define BOARD_VOLM_PORT PORTA
+#define BOARD_VOLM_GPIO_PIN 13U
+#define BOARD_VOLM_IRQ PCTLA_IRQn
+#define BOARD_VOLM_IRQ_HANDLER PCTLA_IRQHandler
+#define BOARD_VOLM_NAME "VOL-"
+
+#if defined(__cplusplus)
+extern "C" {
+#endif /* __cplusplus */
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+
+void BOARD_InitDebugConsole(void);
+#if defined(SDK_I2C_BASED_COMPONENT_USED) && SDK_I2C_BASED_COMPONENT_USED
+void BOARD_LPI2C_Init(LPI2C_Type *base, uint32_t clkSrc_Hz);
+status_t BOARD_LPI2C_Send(LPI2C_Type *base,
+                          uint8_t deviceAddress,
+                          uint32_t subAddress,
+                          uint8_t subaddressSize,
+                          uint8_t *txBuff,
+                          uint8_t txBuffSize);
+status_t BOARD_LPI2C_Receive(LPI2C_Type *base,
+                             uint8_t deviceAddress,
+                             uint32_t subAddress,
+                             uint8_t subaddressSize,
+                             uint8_t *rxBuff,
+                             uint8_t rxBuffSize);
+#endif /* SDK_I2C_BASED_COMPONENT_USED */
+#if defined(__cplusplus)
+}
+#endif /* __cplusplus */
+
+#endif /* _BOARD_H_ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_config.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_config.c
new file mode 100644
index 0000000..afaebb4
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_config.c
@@ -0,0 +1,431 @@
+/*
+ * Copyright (c) 2016, Freescale Semiconductor, Inc.
+ * Copyright 2016-2018 NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include "fsl_msmc.h"
+#include "clock_config.h"
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+/*
+ * SYSOSC clock ROM setting.
+ * SYSOSC clock         : 24MHz
+ * SOSCDIV1_CLK output  : 0MHz (async platform clock)
+ * SOSCDIV2_CLK output  : 0MHz (async bus clock)
+ * SOSCDIV3_CLK output  : 0MHz (async slow clock)
+ */
+const scg_sosc_config_t g_scgSysOscConfig = {.freq = BOARD_XTAL0_CLK_HZ,
+                                             .enableMode = kSCG_SysOscEnable,
+                                             .monitorMode = kSCG_SysOscMonitorDisable,
+                                             .div1 = kSCG_AsyncClkDisable,
+                                             .div2 = kSCG_AsyncClkDisable,
+                                             .div3 = kSCG_AsyncClkDisable,
+                                             .workMode = kSCG_SysOscModeOscLowPower};
+
+/*
+ * SIRC clock ROM setting.
+ * SIRC clock           : 16MHz
+ * SIRCDIV1_CLK output  : 0MHz  (async platform clock)
+ * SIRCDIV2_CLK output  : 0MHz  (async bus clock)
+ * SIRCDIV3_CLK output  : 0MHz  (async slow clock)
+ */
+const scg_sirc_config_t g_scgSircConfig = {.enableMode = kSCG_SircEnable | kSCG_SircEnableInLowPower,
+                                           .div1 = kSCG_AsyncClkDisable,
+                                           .div2 = kSCG_AsyncClkDisable,
+                                           .div3 = kSCG_AsyncClkDisable,
+                                           .range = kSCG_SircRangeHigh};
+
+/*
+ * FIRC clock ROM setting.
+ * FIRC clock           : 48MHz
+ * FIRCDIV1_CLK output  : 0MHz (async platform clock)
+ * FIRCDIV2_CLK output  : 0MHz (async bus clock)
+ * FIRCDIV3_CLK output  : 0MHz (async slow clock)
+ */
+const scg_firc_config_t g_scgFircConfig = {.enableMode = kSCG_FircEnable,
+                                           .div1 = kSCG_AsyncClkDisable,
+                                           .div2 = kSCG_AsyncClkDisable,
+                                           .div3 = kSCG_AsyncClkDisable,
+                                           .range = kSCG_FircRange48M,
+                                           .trimConfig = NULL};
+
+/*
+ * SYSPLL clock setting.
+ * SYSPLL clock PFD0      : 480 * 18 / 15 = 576MHz
+ * SYSPLLDIV1_CLK output  : 0MHz (async platform clock)
+ * SYSPLLDIV2_CLK output  : 0MHz (async bus clock)
+ * SYSPLLDIV3_CLK output  : 0MHz (async slow clock)
+ * PLL main clock as sync system clock
+ */
+const scg_spll_config_t g_scgSysPllConfig = {.enableMode = kSCG_SysPllEnable,
+                                             .div1 = kSCG_AsyncClkDisable,
+                                             .div2 = kSCG_AsyncClkDisable,
+                                             .div3 = kSCG_AsyncClkDisable,
+                                             .src = kSCG_SysPllSrcSysOsc,
+                                             .isPfdSelected = true,
+                                             .prediv = 0U,
+                                             .pfdClkout = kSCG_SysPllPfd0Clk,
+                                             .mult = 3U}; /* x20 */
+
+/*
+ * AUXPLL clock setting.
+ * AUXPLL clock           : 540.672MHz / 44 = 12.288MHz
+ * AUXPLLDIV1_CLK output  : 12.288MHz (async platform clock)
+ * AUXPLLDIV2_CLK output  : 12.288MHz (async bus clock)
+ * AUXPLLDIV3_CLK output  : 0MHz     (async slow clock)
+ */
+const scg_apll_config_t g_scgAuxPllConfig = {.enableMode = kSCG_AuxPllEnable,
+                                             .div1 = kSCG_AsyncClkDivBy1,
+                                             .div2 = kSCG_AsyncClkDivBy1,
+                                             .div3 = kSCG_AsyncClkDisable,
+                                             .src = kSCG_AuxPllSrcSysOsc,
+                                             .isPfdSelected = false,
+                                             .prediv = 0U,
+                                             .pfdClkout = kSCG_AuxPllPfd0Clk,
+                                             .mult = 22U,
+                                             .pllPostdiv1 = kSCG_SysClkDivBy11,
+                                             .pllPostdiv2 = kSCG_SysClkDivBy4,
+                                             .num = 528000U,
+                                             .denom = 1000000U}; /* 24 x 22.528 = 540.672MHz */
+
+/*
+ * Select SIRC as system clock source, before configuring other clock sources.
+ * Clock source   : SIRC
+ * Core clock     : 16MHz
+ * Platform clock : 16MHz
+ * Bus clock      : 16MHz
+ * Slow clock     : 8MHz
+ */
+const scg_sys_clk_config_t g_sysClkConfigSircSource = {
+    .divCore = kSCG_SysClkDivBy1, /* Core clock divider. */
+    .divPlat = kSCG_SysClkDivBy1, /* Platform clock divider. */
+    .divBus = kSCG_SysClkDivBy1,  /* Bus clock divider. */
+    .divSlow = kSCG_SysClkDivBy2, /* Slow clock divider. */
+    .src = kSCG_SysClkSrcSirc     /* System clock source. */
+};
+
+/*
+ * System clock source and divider in Normal RUN mode.
+ *
+ * Clock source   : SYSPLL main clock 576MHz
+ * Core clock     : 115.2MHz
+ * Platform clock : 115.2MHz
+ * Bus clock      : 57.6MHz
+ * Slow clock     : 19.2MHz
+ */
+const scg_sys_clk_config_t g_sysClkConfigNormalRun = {
+    .divCore = kSCG_SysClkDivBy5, /* Core clock divider. */
+    .divPlat = kSCG_SysClkDivBy1, /* Platform clock divider. */
+    .divBus = kSCG_SysClkDivBy2,  /* Bus clock divider. */
+    .divSlow = kSCG_SysClkDivBy6, /* Slow clock divider. */
+    .src = kSCG_SysClkSrcSysPll   /* System clock source. */
+};
+
+/*
+ * System clock source and divider for RUN mode, it is used to prepare for switch to HSRUN mode，to make sure HSRUN
+ * switch frequency range
+ * is not bigger than x2.
+ * Clock source   : SYSPLL main clock 576MHz
+ * Core clock     : 96MHz
+ * Platform clock : 192MHz
+ * Bus clock      : 48MHz
+ * Slow clock     : 24MHz
+ */
+const scg_sys_clk_config_t g_sysClkConfigRunToHsrun = {
+    .divCore = kSCG_SysClkDivBy6, /* Core clock divider. */
+    .divPlat = kSCG_SysClkDivBy1, /* Platform clock divider. */
+    .divBus = kSCG_SysClkDivBy4,  /* Bus clock divider. */
+    .divSlow = kSCG_SysClkDivBy8, /* Slow clock divider. */
+    .src = kSCG_SysClkSrcSysPll   /* System clock source. */
+};
+
+/*
+ * System clock source and divider in HSRUN mode.
+ * Clock source   : SYSPLL main clock 576MHz
+ * Core clock     : 192MHz
+ * Platform clock : 192MHz
+ * Bus clock      : 96MHz
+ * Slow clock     : 24MHz
+ */
+const scg_sys_clk_config_t g_sysClkConfigHsrun = {
+    .divCore = kSCG_SysClkDivBy3, /* Core clock divider. */
+    .divPlat = kSCG_SysClkDivBy1, /* Platform clock divider. */
+    .divBus = kSCG_SysClkDivBy2,  /* Bus clock divider. */
+    .divSlow = kSCG_SysClkDivBy8, /* Slow clock divider. */
+    .src = kSCG_SysClkSrcSysPll   /* System clock source. */
+};
+
+/*
+ * System clock source and divider in VLPR mode.
+ * Clock source   : SIRC
+ * Core clock     : 16MHz
+ * Platform clock : 16MHz
+ * Bus clock      : 16MHz
+ * Slow clock     : 8MHz
+ */
+const scg_sys_clk_config_t g_sysClkConfigVlpr = {
+    .divCore = kSCG_SysClkDivBy1, /* Core clock divider. */
+    .divPlat = kSCG_SysClkDivBy1, /* Platform clock divider. */
+    .divBus = kSCG_SysClkDivBy1,  /* Bus clock divider. */
+    .divSlow = kSCG_SysClkDivBy2, /* Slow clock divider. */
+    .src = kSCG_SysClkSrcSirc     /* System clock source. */
+};
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+AT_QUICKACCESS_SECTION_CODE(void BOARD_SetRunMode(
+    SCG_Type *scg, uint32_t scgRunConfig, QuadSPI_Type *qspi, clock_ip_name_t qspiClock, uint32_t qspiClockConfig))
+{
+    int32_t i;
+
+    if (qspi)
+    {
+        volatile uint32_t *pcc = (volatile uint32_t *)qspiClock;
+
+        /* Make sure QSPI clock is enabled */
+        *pcc |= PCC1_PCC_QSPI_OTFAD_CGC_MASK;
+        /* Wait until QSPI is not busy */
+        while (qspi->SR & QuadSPI_SR_BUSY_MASK)
+        {
+        }
+        /* Make sure module is enabled when reset */
+        qspi->MCR &= ~QuadSPI_MCR_MDIS_MASK;
+        qspi->MCR |= QuadSPI_MCR_SWRSTHD_MASK | QuadSPI_MCR_SWRSTSD_MASK;
+        /* Wait enough cycles until the ahb domain and serial flash domain are reset */
+        for (i = 0; i < 200; i++)
+        {
+            qspi->SR;
+        }
+        /* Disable module during the reset procedure */
+        qspi->MCR |= QuadSPI_MCR_MDIS_MASK;
+        /* Clear the reset bits. */
+        qspi->MCR &= ~(QuadSPI_MCR_SWRSTHD_MASK | QuadSPI_MCR_SWRSTSD_MASK);
+
+        *pcc = 0; /* Disable clock before changing clock source */
+
+        /* Update system clock. */
+        scg->RCCR = scgRunConfig;
+
+        /* Wait for clock source switch finished. */
+        while ((scg->CSR & SCG_CSR_SCS_MASK) != (scgRunConfig & SCG_CSR_SCS_MASK))
+        {
+        }
+
+        /* Configure QSPI clock again. */
+        *pcc = qspiClockConfig;
+        /* Re-enable QSPI module */
+        qspi->MCR &= ~QuadSPI_MCR_MDIS_MASK;
+    }
+    else
+    {
+        scg->RCCR = scgRunConfig;
+
+        /* Wait for clock source switch finished. */
+        while ((scg->CSR & SCG_CSR_SCS_MASK) != (scgRunConfig & SCG_CSR_SCS_MASK))
+        {
+        }
+    }
+}
+
+bool BOARD_IsRunOnQSPI(void)
+{
+    if (((uint32_t)BOARD_BootClockRUN >= 0x04000000U) && ((uint32_t)BOARD_BootClockRUN < 0x0C000000U))
+    {
+        return true;
+    }
+    return false;
+}
+
+static void BOARD_InitClock(void)
+{
+    /* First initialize same clock settings as ROM does. It's necessary for debugging
+       in case ROM doesn't initialize well. */
+    if (!CLOCK_IsSircValid())
+    {
+        CLOCK_InitSirc(&g_scgSircConfig);
+    }
+
+    if (!CLOCK_IsFircValid())
+    {
+        CLOCK_InitFirc(&g_scgFircConfig);
+    }
+
+    if (!CLOCK_IsSysOscValid())
+    {
+        CLOCK_InitSysOsc(&g_scgSysOscConfig);
+    }
+
+    CLOCK_SetXtal0Freq(BOARD_XTAL0_CLK_HZ);
+
+    /* SOSC, FIRC and SIRC needed by Cortex-A core when M4 runs into VLPR or STOP */
+    SCG0->SOSCCSR |= SCG_SOSCCSR_SOSCLPEN_MASK | SCG_SOSCCSR_SOSCSTEN_MASK;
+    SCG0->FIRCCSR |= SCG_FIRCCSR_FIRCLPEN_MASK | SCG_FIRCCSR_FIRCSTEN_MASK;
+    SCG0->SIRCCSR |= SCG_SIRCCSR_SIRCLPEN_MASK | SCG_SIRCCSR_SIRCSTEN_MASK;
+
+    /* Then set SOSC, FIRC and SIRC DIV needed by application */
+    CLOCK_SetSysOscAsyncClkDiv(kSCG_AsyncDiv1Clk, kSCG_AsyncClkDivBy1);
+    CLOCK_SetSysOscAsyncClkDiv(kSCG_AsyncDiv2Clk, kSCG_AsyncClkDivBy1);
+
+    CLOCK_SetFircAsyncClkDiv(kSCG_AsyncDiv1Clk, kSCG_AsyncClkDivBy1);
+    CLOCK_SetFircAsyncClkDiv(kSCG_AsyncDiv2Clk, kSCG_AsyncClkDivBy1);
+
+    CLOCK_SetSircAsyncClkDiv(kSCG_AsyncDiv1Clk, kSCG_AsyncClkDivBy1);
+    CLOCK_SetSircAsyncClkDiv(kSCG_AsyncDiv2Clk, kSCG_AsyncClkDivBy1);
+}
+
+/*
+ * Clock in VLPR mode:
+ * SYSOSC  : Enable (shared by CA7)
+ * SIRC    : Enable (shared by CA7)
+ * FIRC    : Enable (shared by CA7)
+ * SYSPLL  : Disable
+ * AUXPLL  : Disable
+ */
+void BOARD_BootClockVLPR(void)
+{
+    uint32_t *config = (uint32_t *)(&g_sysClkConfigVlpr);
+    scg_sys_clk_config_t curConfig;
+    QuadSPI_Type *qspi = BOARD_IsRunOnQSPI() ? QuadSPI0 : NULL;
+
+    BOARD_InitClock();
+
+    /* Change to use SIRC as RUN system clock source */
+    /* BOARD_SetRunMode is running in TCM to avoid clock change issue on QSPI memory */
+    BOARD_SetRunMode(SCG0, *config, qspi, kCLOCK_Qspi,
+                     PCC1_PCC_QSPI_OTFAD_CGC_MASK | PCC1_PCC_QSPI_OTFAD_PCS(2)); /* QSPI source: 16M SIRC Async */
+
+    /* Change to use SIRC as VLPR system clock source */
+    CLOCK_SetVlprModeSysClkConfig(&g_sysClkConfigVlpr);
+
+    /* Switch running mode to VLPR */
+    SMC_SetPowerModeProtection(MSMC0, kSMC_AllowPowerModeAll);
+    SMC_SetPowerModeVlpr(MSMC0);
+    while (SMC_GetPowerModeState(MSMC0) != kSMC_PowerStateVlpr)
+    {
+    }
+
+    /* Wait for clock source switch finished. */
+    do
+    {
+        CLOCK_GetCurSysClkConfig(&curConfig);
+    } while (curConfig.src != g_sysClkConfigVlpr.src);
+
+    CLOCK_DeinitSysPll();
+    CLOCK_DeinitAuxPll();
+
+    SystemCoreClockUpdate();
+}
+
+/*
+ * Clock in RUN mode:
+ * SYSOSC  : Enable
+ * SIRC    : Enable
+ * FIRC    : Enable
+ * SYSPLL  : Enable
+ * AUXPLL  : Enable
+ */
+void BOARD_BootClockRUN(void)
+{
+    uint32_t *config = (uint32_t *)(&g_sysClkConfigVlpr);
+    QuadSPI_Type *qspi = BOARD_IsRunOnQSPI() ? QuadSPI0 : NULL;
+
+    BOARD_InitClock();
+
+    /* Change to use SIRC as system clock source to prepare to initialize other clock sources */
+    /* BOARD_SetRunMode is running in TCM to avoid clock change issue on QSPI memory */
+    BOARD_SetRunMode(SCG0, *config, qspi, kCLOCK_Qspi,
+                     PCC1_PCC_QSPI_OTFAD_CGC_MASK | PCC1_PCC_QSPI_OTFAD_PCS(2)); /* QSPI source: 16M SIRC Async */
+
+    /* Initialize SysPll 480MHz */
+    CLOCK_InitSysPll(&g_scgSysPllConfig);
+
+    /* Enable SysPll Pfd0 576MHz */
+    CLOCK_EnableSysPllPfdClkout(kSCG_SysPllPfd0Clk, 15U);
+    /* Enable SysPll Pfd3 480MHz (same as SysPll main clock) */
+    CLOCK_EnableSysPllPfdClkout(kSCG_SysPllPfd3Clk, 18U);
+
+    /* Initialize AuxPll */
+    CLOCK_InitAuxPll(&g_scgAuxPllConfig);
+    /* Enable AuxPll Pfd0 540.672MHz (same as AuxPll before postdiv) */
+    CLOCK_EnableAuxPllPfdClkout(kSCG_AuxPllPfd0Clk, 18U);
+
+    config = (uint32_t *)(&g_sysClkConfigNormalRun);
+    BOARD_SetRunMode(SCG0, *config, qspi, kCLOCK_Qspi,
+                     PCC1_PCC_QSPI_OTFAD_CGC_MASK | PCC1_PCC_QSPI_OTFAD_PCS(3)); /* QSPI source: 48M FIRC Async */
+
+    SystemCoreClockUpdate();
+}
+
+/*
+ * Clock in HSRUN mode:
+ * SYSOSC  : Enable
+ * SIRC    : Enable
+ * FIRC    : Enable
+ * SYSPLL  : Enable
+ * AUXPLL  : Enable
+ * NOTE: MAKE SURE PMC0 HSRUN VOLTAGE IS PROPERLY SET BEFORE CALLING THIS FUNCTION.
+ */
+void BOARD_BootClockHSRUN(void)
+{
+    /* In HSRUN mode, the maximum allowable change in frequency of the system/bus/core/flash is
+    * restricted to x2, to follow this restriction, enter HSRUN mode should follow:
+ * 1.set the run mode to a safe configurations.
+    * 2.set the PLL or FLL output target frequency for HSRUN mode.
+    * 3.switch RUN mode configuration.
+    * 4.switch to HSRUN mode.
+    * 5.switch to HSRUN mode target requency value.
+    */
+
+    scg_sys_clk_config_t curConfig;
+
+    uint32_t *config = (uint32_t *)(&g_sysClkConfigVlpr);
+    QuadSPI_Type *qspi = BOARD_IsRunOnQSPI() ? QuadSPI0 : NULL;
+
+    BOARD_InitClock();
+
+    /* Change to use SIRC as system clock source to prepare to initialize other clock sources */
+    /* BOARD_SetRunMode is running in TCM to avoid clock change issue on QSPI memory */
+    BOARD_SetRunMode(SCG0, *config, qspi, kCLOCK_Qspi,
+                     PCC1_PCC_QSPI_OTFAD_CGC_MASK | PCC1_PCC_QSPI_OTFAD_PCS(2)); /* QSPI source: 16M SIRC Async */
+
+    /* Initialize SysPll 480MHz */
+    CLOCK_InitSysPll(&g_scgSysPllConfig);
+
+    /* Enable SysPll Pfd0 576MHz */
+    CLOCK_EnableSysPllPfdClkout(kSCG_SysPllPfd0Clk, 15U);
+    /* Enable SysPll Pfd3 480MHz (same as SysPll main clock) */
+    CLOCK_EnableSysPllPfdClkout(kSCG_SysPllPfd3Clk, 18U);
+
+    /* Initialize AuxPll */
+    CLOCK_InitAuxPll(&g_scgAuxPllConfig);
+    /* Enable AuxPll Pfd0 540.672MHz (same as AuxPll before postdiv) */
+    CLOCK_EnableAuxPllPfdClkout(kSCG_AuxPllPfd0Clk, 18U);
+
+    config = (uint32_t *)(&g_sysClkConfigRunToHsrun);
+
+    BOARD_SetRunMode(SCG0, *config, qspi, kCLOCK_Qspi,
+                     PCC1_PCC_QSPI_OTFAD_CGC_MASK | PCC1_PCC_QSPI_OTFAD_PCS(3)); /* QSPI source: 48M FIRC Async */
+
+    /* Switch running mode to HSRUN */
+    SMC_SetPowerModeProtection(MSMC0, kSMC_AllowPowerModeAll);
+    SMC_SetPowerModeHsrun(MSMC0);
+    while (SMC_GetPowerModeState(MSMC0) != kSMC_PowerStateHsrun)
+    {
+    }
+
+    /* Change to use SysPll as system clock source */
+    CLOCK_SetHsrunModeSysClkConfig(&g_sysClkConfigHsrun);
+    /* Wait for clock source switch finished. */
+    do
+    {
+        CLOCK_GetCurSysClkConfig(&curConfig);
+    } while (curConfig.src != g_sysClkConfigHsrun.src);
+
+    SystemCoreClockUpdate();
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_config.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_config.h
new file mode 100644
index 0000000..4611c62
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_config.h
@@ -0,0 +1,37 @@
+/*
+ * Copyright (c) 2016, Freescale Semiconductor, Inc.
+ * Copyright 2016-2017 NXP
+ * All rights reserved.
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+#ifndef _CLOCK_CONFIG_H_
+#define _CLOCK_CONFIG_H_
+
+#include "fsl_common.h"
+
+/*******************************************************************************
+ * DEFINITION
+ ******************************************************************************/
+#define BOARD_XTAL0_CLK_HZ   24000000U
+#define BOARD_XTAL32K_CLK_HZ 32768U
+
+typedef void (*BOARD_SetRunModeFunc)(SCG_Type *scg, uint32_t scgRunConfig, QuadSPI_Type *qspi,
+                                     clock_ip_name_t qspiClock, uint32_t qspiClockConfig);
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#if defined(__cplusplus)
+extern "C" {
+#endif /* __cplusplus*/
+
+void BOARD_BootClockVLPR(void);
+void BOARD_BootClockRUN(void);
+void BOARD_BootClockHSRUN(void);
+
+#if defined(__cplusplus)
+}
+#endif /* __cplusplus*/
+
+#endif /* _CLOCK_CONFIG_H_ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_scg.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_scg.c
new file mode 100644
index 0000000..7918b88
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/clock_scg.c
@@ -0,0 +1,75 @@
+/*
+ * Copyright (c) 2016, Freescale Semiconductor, Inc.
+ * Copyright 2016-2018 NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include "clock_config.h"
+#include <assert.h>
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+AT_QUICKACCESS_SECTION_CODE(extern void BOARD_SetRunMode(
+    SCG_Type *scg, uint32_t scgRunConfig, QuadSPI_Type *qspi, clock_ip_name_t qspiClock, uint32_t qspiClockConfig));
+extern const scg_sys_clk_config_t g_sysClkConfigNormalRun;
+extern const scg_sys_clk_config_t g_sysClkConfigVlpr;
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+extern bool BOARD_IsRunOnQSPI(void);
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+/*
+ * Set the clock configuration for HSRUN mode.
+ */
+void APP_SetClockHsrun(void)
+{
+}
+
+/*
+ * Set the clock configuration for RUN mode from HSRUN mode.
+ */
+void APP_SetClockRunFromHsrun(void)
+{
+}
+
+/*
+ * Set the clock configuration for RUN mode from VLPR mode.
+ */
+void APP_SetClockRunFromVlpr(void)
+{
+    QuadSPI_Type *qspi = BOARD_IsRunOnQSPI() ? QuadSPI0 : NULL;
+    uint32_t *config = (uint32_t *)(&g_sysClkConfigNormalRun);
+
+    /* Recover SPLL */
+    SCG0->SPLLCSR |= SCG_SPLLCSR_SPLLEN_MASK;
+    while (!CLOCK_IsSysPllValid())
+    {
+    }
+
+    /* When switching from VLPR to RUN, switch RUN clock source back to RUN source */
+    BOARD_SetRunMode(SCG0, *config, qspi, kCLOCK_Qspi,
+                     PCC1_PCC_QSPI_OTFAD_CGC_MASK | PCC1_PCC_QSPI_OTFAD_PCS(3)); /* QSPI source: 48M FIRC Async */
+}
+
+/*
+ * Set the clock configuration for VLPR mode.
+ */
+void APP_SetClockVlpr(void)
+{
+    QuadSPI_Type *qspi = BOARD_IsRunOnQSPI() ? QuadSPI0 : NULL;
+    uint32_t *config = (uint32_t *)(&g_sysClkConfigVlpr);
+
+    /* When switching from RUN to VLPR, first switch RUN clock source to VLPR source */
+    BOARD_SetRunMode(SCG0, *config, qspi, kCLOCK_Qspi,
+                     PCC1_PCC_QSPI_OTFAD_CGC_MASK | PCC1_PCC_QSPI_OTFAD_PCS(2)); /* QSPI source: 16M SIRC Async */
+
+    /* Disable SPLL to work around hardware issue */
+    SCG0->SPLLCSR &= ~SCG_SPLLCSR_SPLLEN_MASK;
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/fsl_iomuxc.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/fsl_iomuxc.h
new file mode 100644
index 0000000..d72d916
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/fsl_iomuxc.h
@@ -0,0 +1,1068 @@
+/*
+ * Copyright 2016 Freescale Semiconductor, Inc.
+ * Copyright 2016-2018 NXP
+ * All rights reserved.
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef _FSL_IOMUXC_H_
+#define _FSL_IOMUXC_H_
+
+#include "fsl_common.h"
+
+/*!
+ * @addtogroup iomuxc_driver
+ * @{
+*/
+
+/*! @file */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+
+/*! @name Driver version */
+/*@{*/
+/*! @brief IOMUXC driver version 2.0.0. */
+#define FSL_IOMUXC_DRIVER_VERSION (MAKE_VERSION(2, 0, 0))
+/*@}*/
+
+/*! @name Pin function ID */
+/*@{*/
+/*! @brief The pin function ID is a tuple of <muxRegister muxMode inputRegister inputDaisy configRegister> */
+#define IOMUXC_PTA0_CMP0_IN1_3V                                0x4103D000, 0x0, 0x00000000, 0x0, 0x4103D000
+#define IOMUXC_PTA0_PTA0                                       0x4103D000, 0x1, 0x00000000, 0x0, 0x4103D000
+#define IOMUXC_PTA0_LPSPI0_PCS1                                0x4103D000, 0x3, 0x4103D104, 0x2, 0x4103D000
+#define IOMUXC_PTA0_LPUART0_CTS_B                              0x4103D000, 0x4, 0x4103D1F8, 0x2, 0x4103D000
+#define IOMUXC_PTA0_LPI2C0_SCL                                 0x4103D000, 0x5, 0x4103D17C, 0x2, 0x4103D000
+#define IOMUXC_PTA0_TPM0_CLKIN                                 0x4103D000, 0x6, 0x4103D1A8, 0x2, 0x4103D000
+#define IOMUXC_PTA0_I2S0_RX_BCLK                               0x4103D000, 0x7, 0x4103D1B8, 0x2, 0x4103D000
+#define IOMUXC_PTA0_LLWU0_P0                                   0x4103D000, 0xD, 0x00000000, 0x0, 0x4103D000
+#define IOMUXC_PTA1_CMP0_IN2_3V                                0x4103D004, 0x0, 0x00000000, 0x0, 0x4103D004
+#define IOMUXC_PTA1_PTA1                                       0x4103D004, 0x1, 0x00000000, 0x0, 0x4103D004
+#define IOMUXC_PTA1_LPSPI0_PCS2                                0x4103D004, 0x3, 0x4103D108, 0x1, 0x4103D004
+#define IOMUXC_PTA1_LPUART0_RTS_B                              0x4103D004, 0x4, 0x00000000, 0x0, 0x4103D004
+#define IOMUXC_PTA1_LPI2C0_SDA                                 0x4103D004, 0x5, 0x4103D180, 0x1, 0x4103D004
+#define IOMUXC_PTA1_TPM0_CH0                                   0x4103D004, 0x6, 0x4103D138, 0x1, 0x4103D004
+#define IOMUXC_PTA1_I2S0_RX_FS                                 0x4103D004, 0x7, 0x4103D1BC, 0x1, 0x4103D004
+#define IOMUXC_PTA2_CMP1_IN2_3V                                0x4103D008, 0x0, 0x00000000, 0x0, 0x4103D008
+#define IOMUXC_PTA2_PTA2                                       0x4103D008, 0x1, 0x00000000, 0x0, 0x4103D008
+#define IOMUXC_PTA2_LPSPI0_PCS3                                0x4103D008, 0x3, 0x4103D10C, 0x1, 0x4103D008
+#define IOMUXC_PTA2_LPUART0_TX                                 0x4103D008, 0x4, 0x4103D200, 0x1, 0x4103D008
+#define IOMUXC_PTA2_LPI2C0_HREQ                                0x4103D008, 0x5, 0x4103D178, 0x1, 0x4103D008
+#define IOMUXC_PTA2_TPM0_CH1                                   0x4103D008, 0x6, 0x4103D13C, 0x1, 0x4103D008
+#define IOMUXC_PTA2_I2S0_RXD0                                  0x4103D008, 0x7, 0x4103D1DC, 0x1, 0x4103D008
+#define IOMUXC_PTA3_CMP1_IN4_3V                                0x4103D00C, 0x0, 0x00000000, 0x0, 0x4103D00C
+#define IOMUXC_PTA3_PTA3                                       0x4103D00C, 0x1, 0x00000000, 0x0, 0x4103D00C
+#define IOMUXC_PTA3_LPSPI0_PCS0                                0x4103D00C, 0x3, 0x4103D100, 0x1, 0x4103D00C
+#define IOMUXC_PTA3_LPUART0_RX                                 0x4103D00C, 0x4, 0x4103D1FC, 0x1, 0x4103D00C
+#define IOMUXC_PTA3_TPM0_CH2                                   0x4103D00C, 0x6, 0x4103D140, 0x1, 0x4103D00C
+#define IOMUXC_PTA3_I2S0_RXD1                                  0x4103D00C, 0x7, 0x4103D1E0, 0x1, 0x4103D00C
+#define IOMUXC_PTA3_CMP0_OUT                                   0x4103D00C, 0xB, 0x00000000, 0x0, 0x4103D00C
+#define IOMUXC_PTA3_LLWU0_P1                                   0x4103D00C, 0xD, 0x00000000, 0x0, 0x4103D00C
+#define IOMUXC_PTA4_ADC1_CH3A                                  0x4103D010, 0x0, 0x00000000, 0x0, 0x4103D010
+#define IOMUXC_PTA4_PTA4                                       0x4103D010, 0x1, 0x00000000, 0x0, 0x4103D010
+#define IOMUXC_PTA4_LPSPI0_SIN                                 0x4103D010, 0x3, 0x4103D114, 0x1, 0x4103D010
+#define IOMUXC_PTA4_LPUART1_CTS_B                              0x4103D010, 0x4, 0x4103D204, 0x1, 0x4103D010
+#define IOMUXC_PTA4_LPI2C1_SCL                                 0x4103D010, 0x5, 0x4103D188, 0x1, 0x4103D010
+#define IOMUXC_PTA4_TPM0_CH3                                   0x4103D010, 0x6, 0x4103D144, 0x1, 0x4103D010
+#define IOMUXC_PTA4_I2S0_MCLK                                  0x4103D010, 0x7, 0x4103D1B4, 0x1, 0x4103D010
+#define IOMUXC_PTA5_ADC1_CH3B                                  0x4103D014, 0x0, 0x00000000, 0x0, 0x4103D014
+#define IOMUXC_PTA5_PTA5                                       0x4103D014, 0x1, 0x00000000, 0x0, 0x4103D014
+#define IOMUXC_PTA5_LPSPI0_SOUT                                0x4103D014, 0x3, 0x4103D118, 0x1, 0x4103D014
+#define IOMUXC_PTA5_LPUART1_RTS_B                              0x4103D014, 0x4, 0x00000000, 0x0, 0x4103D014
+#define IOMUXC_PTA5_LPI2C1_SDA                                 0x4103D014, 0x5, 0x4103D18C, 0x1, 0x4103D014
+#define IOMUXC_PTA5_TPM0_CH4                                   0x4103D014, 0x6, 0x4103D148, 0x1, 0x4103D014
+#define IOMUXC_PTA5_I2S0_TX_BCLK                               0x4103D014, 0x7, 0x4103D1C0, 0x1, 0x4103D014
+#define IOMUXC_PTA6_ADC1_CH4A                                  0x4103D018, 0x0, 0x00000000, 0x0, 0x4103D018
+#define IOMUXC_PTA6_PTA6                                       0x4103D018, 0x1, 0x00000000, 0x0, 0x4103D018
+#define IOMUXC_PTA6_LPSPI0_SCK                                 0x4103D018, 0x3, 0x4103D110, 0x1, 0x4103D018
+#define IOMUXC_PTA6_LPUART1_TX                                 0x4103D018, 0x4, 0x4103D20C, 0x1, 0x4103D018
+#define IOMUXC_PTA6_LPI2C1_HREQ                                0x4103D018, 0x5, 0x4103D184, 0x1, 0x4103D018
+#define IOMUXC_PTA6_TPM0_CH5                                   0x4103D018, 0x6, 0x4103D14C, 0x1, 0x4103D018
+#define IOMUXC_PTA6_I2S0_TX_FS                                 0x4103D018, 0x7, 0x4103D1C4, 0x1, 0x4103D018
+#define IOMUXC_PTA7_ADC1_CH4B                                  0x4103D01C, 0x0, 0x00000000, 0x0, 0x4103D01C
+#define IOMUXC_PTA7_PTA7                                       0x4103D01C, 0x1, 0x00000000, 0x0, 0x4103D01C
+#define IOMUXC_PTA7_LPUART1_RX                                 0x4103D01C, 0x4, 0x4103D208, 0x1, 0x4103D01C
+#define IOMUXC_PTA7_TPM1_CH1                                   0x4103D01C, 0x6, 0x4103D154, 0x1, 0x4103D01C
+#define IOMUXC_PTA7_I2S0_TXD0                                  0x4103D01C, 0x7, 0x00000000, 0x0, 0x4103D01C
+#define IOMUXC_PTA8_ADC1_CH5A                                  0x4103D020, 0x0, 0x00000000, 0x0, 0x4103D020
+#define IOMUXC_PTA8_PTA8                                       0x4103D020, 0x1, 0x00000000, 0x0, 0x4103D020
+#define IOMUXC_PTA8_LPSPI1_PCS1                                0x4103D020, 0x3, 0x4103D120, 0x1, 0x4103D020
+#define IOMUXC_PTA8_LPUART2_CTS_B                              0x4103D020, 0x4, 0x4103D210, 0x1, 0x4103D020
+#define IOMUXC_PTA8_LPI2C2_SCL                                 0x4103D020, 0x5, 0x4103D194, 0x1, 0x4103D020
+#define IOMUXC_PTA8_TPM1_CLKIN                                 0x4103D020, 0x6, 0x4103D1AC, 0x1, 0x4103D020
+#define IOMUXC_PTA8_I2S0_TXD1                                  0x4103D020, 0x7, 0x00000000, 0x0, 0x4103D020
+#define IOMUXC_PTA9_ADC1_CH5B                                  0x4103D024, 0x0, 0x00000000, 0x0, 0x4103D024
+#define IOMUXC_PTA9_PTA9                                       0x4103D024, 0x1, 0x00000000, 0x0, 0x4103D024
+#define IOMUXC_PTA9_LPSPI1_PCS2                                0x4103D024, 0x3, 0x4103D124, 0x1, 0x4103D024
+#define IOMUXC_PTA9_LPUART2_RTS_B                              0x4103D024, 0x4, 0x00000000, 0x0, 0x4103D024
+#define IOMUXC_PTA9_LPI2C2_SDA                                 0x4103D024, 0x5, 0x4103D198, 0x1, 0x4103D024
+#define IOMUXC_PTA9_TPM1_CH0                                   0x4103D024, 0x6, 0x4103D150, 0x1, 0x4103D024
+#define IOMUXC_PTA9_NMI0_B                                     0x4103D024, 0xB, 0x00000000, 0x0, 0x4103D024
+#define IOMUXC_PTA10_ADC1_CH6A                                 0x4103D028, 0x0, 0x00000000, 0x0, 0x4103D028
+#define IOMUXC_PTA10_PTA10                                     0x4103D028, 0x1, 0x00000000, 0x0, 0x4103D028
+#define IOMUXC_PTA10_LPSPI1_PCS3                               0x4103D028, 0x3, 0x4103D128, 0x1, 0x4103D028
+#define IOMUXC_PTA10_LPUART2_TX                                0x4103D028, 0x4, 0x4103D218, 0x1, 0x4103D028
+#define IOMUXC_PTA10_LPI2C2_HREQ                               0x4103D028, 0x5, 0x4103D190, 0x1, 0x4103D028
+#define IOMUXC_PTA10_TPM2_CLKIN                                0x4103D028, 0x6, 0x4103D1F4, 0x1, 0x4103D028
+#define IOMUXC_PTA10_I2S0_RX_BCLK                              0x4103D028, 0x7, 0x4103D1B8, 0x1, 0x4103D028
+#define IOMUXC_PTA11_ADC1_CH6B                                 0x4103D02C, 0x0, 0x00000000, 0x0, 0x4103D02C
+#define IOMUXC_PTA11_PTA11                                     0x4103D02C, 0x1, 0x00000000, 0x0, 0x4103D02C
+#define IOMUXC_PTA11_LPUART2_RX                                0x4103D02C, 0x4, 0x4103D214, 0x1, 0x4103D02C
+#define IOMUXC_PTA11_TPM2_CH0                                  0x4103D02C, 0x6, 0x4103D158, 0x1, 0x4103D02C
+#define IOMUXC_PTA11_I2S0_RX_FS                                0x4103D02C, 0x7, 0x4103D1BC, 0x2, 0x4103D02C
+#define IOMUXC_PTA12_ADC1_CH7A                                 0x4103D030, 0x0, 0x00000000, 0x0, 0x4103D030
+#define IOMUXC_PTA12_PTA12                                     0x4103D030, 0x1, 0x00000000, 0x0, 0x4103D030
+#define IOMUXC_PTA12_LPSPI1_SIN                                0x4103D030, 0x3, 0x4103D130, 0x1, 0x4103D030
+#define IOMUXC_PTA12_LPUART3_CTS_B                             0x4103D030, 0x4, 0x4103D21C, 0x1, 0x4103D030
+#define IOMUXC_PTA12_LPI2C3_SCL                                0x4103D030, 0x5, 0x4103D1A0, 0x1, 0x4103D030
+#define IOMUXC_PTA12_TPM2_CH1                                  0x4103D030, 0x6, 0x4103D15C, 0x1, 0x4103D030
+#define IOMUXC_PTA12_I2S0_RXD0                                 0x4103D030, 0x7, 0x4103D1DC, 0x2, 0x4103D030
+#define IOMUXC_PTA13_ADC1_CH7B                                 0x4103D034, 0x0, 0x00000000, 0x0, 0x4103D034
+#define IOMUXC_PTA13_PTA13                                     0x4103D034, 0x1, 0x00000000, 0x0, 0x4103D034
+#define IOMUXC_PTA13_LPSPI1_SOUT                               0x4103D034, 0x3, 0x4103D134, 0x2, 0x4103D034
+#define IOMUXC_PTA13_LPUART3_RTS_B                             0x4103D034, 0x4, 0x00000000, 0x0, 0x4103D034
+#define IOMUXC_PTA13_LPI2C3_SDA                                0x4103D034, 0x5, 0x4103D1A4, 0x2, 0x4103D034
+#define IOMUXC_PTA13_TPM3_CLKIN                                0x4103D034, 0x6, 0x4103D1B0, 0x1, 0x4103D034
+#define IOMUXC_PTA13_I2S0_RXD1                                 0x4103D034, 0x7, 0x4103D1E0, 0x2, 0x4103D034
+#define IOMUXC_PTA13_CMP0_OUT                                  0x4103D034, 0xB, 0x00000000, 0x0, 0x4103D034
+#define IOMUXC_PTA13_LLWU0_P2                                  0x4103D034, 0xD, 0x00000000, 0x0, 0x4103D034
+#define IOMUXC_PTA14_ADC1_CH8A                                 0x4103D038, 0x0, 0x00000000, 0x0, 0x4103D038
+#define IOMUXC_PTA14_PTA14                                     0x4103D038, 0x1, 0x00000000, 0x0, 0x4103D038
+#define IOMUXC_PTA14_LPSPI1_SCK                                0x4103D038, 0x3, 0x4103D12C, 0x2, 0x4103D038
+#define IOMUXC_PTA14_LPUART3_TX                                0x4103D038, 0x4, 0x4103D224, 0x2, 0x4103D038
+#define IOMUXC_PTA14_LPI2C3_HREQ                               0x4103D038, 0x5, 0x4103D19C, 0x2, 0x4103D038
+#define IOMUXC_PTA14_TPM3_CH0                                  0x4103D038, 0x6, 0x4103D160, 0x1, 0x4103D038
+#define IOMUXC_PTA14_I2S0_MCLK                                 0x4103D038, 0x7, 0x4103D1B4, 0x2, 0x4103D038
+#define IOMUXC_PTA14_LLWU0_P3                                  0x4103D038, 0xD, 0x00000000, 0x0, 0x4103D038
+#define IOMUXC_PTA15_ADC1_CH8B                                 0x4103D03C, 0x0, 0x00000000, 0x0, 0x4103D03C
+#define IOMUXC_PTA15_PTA15                                     0x4103D03C, 0x1, 0x00000000, 0x0, 0x4103D03C
+#define IOMUXC_PTA15_LPSPI1_PCS0                               0x4103D03C, 0x3, 0x4103D11C, 0x1, 0x4103D03C
+#define IOMUXC_PTA15_LPUART3_RX                                0x4103D03C, 0x4, 0x4103D220, 0x1, 0x4103D03C
+#define IOMUXC_PTA15_TPM3_CH1                                  0x4103D03C, 0x6, 0x4103D164, 0x1, 0x4103D03C
+#define IOMUXC_PTA15_I2S0_TX_BCLK                              0x4103D03C, 0x7, 0x4103D1C0, 0x2, 0x4103D03C
+#define IOMUXC_PTA16_CMP1_IN5_3V                               0x4103D040, 0x0, 0x00000000, 0x0, 0x4103D040
+#define IOMUXC_PTA16_PTA16                                     0x4103D040, 0x1, 0x00000000, 0x0, 0x4103D040
+#define IOMUXC_PTA16_FXIO0_D0                                  0x4103D040, 0x2, 0x00000000, 0x0, 0x4103D040
+#define IOMUXC_PTA16_LPSPI0_SOUT                               0x4103D040, 0x3, 0x4103D118, 0x2, 0x4103D040
+#define IOMUXC_PTA16_LPUART0_CTS_B                             0x4103D040, 0x4, 0x4103D1F8, 0x1, 0x4103D040
+#define IOMUXC_PTA16_LPI2C0_SCL                                0x4103D040, 0x5, 0x4103D17C, 0x1, 0x4103D040
+#define IOMUXC_PTA16_TPM3_CH2                                  0x4103D040, 0x6, 0x4103D168, 0x1, 0x4103D040
+#define IOMUXC_PTA16_I2S0_TX_FS                                0x4103D040, 0x7, 0x4103D1C4, 0x2, 0x4103D040
+#define IOMUXC_PTA17_CMP1_IN6_3V                               0x4103D044, 0x0, 0x00000000, 0x0, 0x4103D044
+#define IOMUXC_PTA17_PTA17                                     0x4103D044, 0x1, 0x00000000, 0x0, 0x4103D044
+#define IOMUXC_PTA17_FXIO0_D1                                  0x4103D044, 0x2, 0x00000000, 0x0, 0x4103D044
+#define IOMUXC_PTA17_LPSPI0_SCK                                0x4103D044, 0x3, 0x4103D110, 0x2, 0x4103D044
+#define IOMUXC_PTA17_LPUART0_RTS_B                             0x4103D044, 0x4, 0x00000000, 0x0, 0x4103D044
+#define IOMUXC_PTA17_LPI2C0_SDA                                0x4103D044, 0x5, 0x4103D180, 0x2, 0x4103D044
+#define IOMUXC_PTA17_TPM3_CH3                                  0x4103D044, 0x6, 0x4103D16C, 0x1, 0x4103D044
+#define IOMUXC_PTA17_I2S0_TXD0                                 0x4103D044, 0x7, 0x00000000, 0x0, 0x4103D044
+#define IOMUXC_PTA18_CMP1_IN1_3V                               0x4103D048, 0x0, 0x00000000, 0x0, 0x4103D048
+#define IOMUXC_PTA18_PTA18                                     0x4103D048, 0x1, 0x00000000, 0x0, 0x4103D048
+#define IOMUXC_PTA18_FXIO0_D2                                  0x4103D048, 0x2, 0x00000000, 0x0, 0x4103D048
+#define IOMUXC_PTA18_LPSPI0_PCS0                               0x4103D048, 0x3, 0x4103D100, 0x2, 0x4103D048
+#define IOMUXC_PTA18_LPUART0_TX                                0x4103D048, 0x4, 0x4103D200, 0x2, 0x4103D048
+#define IOMUXC_PTA18_LPI2C0_HREQ                               0x4103D048, 0x5, 0x4103D178, 0x2, 0x4103D048
+#define IOMUXC_PTA18_TPM3_CH4                                  0x4103D048, 0x6, 0x4103D170, 0x1, 0x4103D048
+#define IOMUXC_PTA18_I2S0_TXD1                                 0x4103D048, 0x7, 0x00000000, 0x0, 0x4103D048
+#define IOMUXC_PTA18_LLWU0_P4                                  0x4103D048, 0xD, 0x00000000, 0x0, 0x4103D048
+#define IOMUXC_PTA19_CMP1_IN3_3V                               0x4103D04C, 0x0, 0x00000000, 0x0, 0x4103D04C
+#define IOMUXC_PTA19_PTA19                                     0x4103D04C, 0x1, 0x00000000, 0x0, 0x4103D04C
+#define IOMUXC_PTA19_FXIO0_D3                                  0x4103D04C, 0x2, 0x00000000, 0x0, 0x4103D04C
+#define IOMUXC_PTA19_LPUART0_RX                                0x4103D04C, 0x4, 0x4103D1FC, 0x2, 0x4103D04C
+#define IOMUXC_PTA19_TPM3_CH5                                  0x4103D04C, 0x6, 0x4103D174, 0x1, 0x4103D04C
+#define IOMUXC_PTA19_I2S1_RX_BCLK                              0x4103D04C, 0x7, 0x4103D1CC, 0x1, 0x4103D04C
+#define IOMUXC_PTA19_LPTMR0_ALT3                               0x4103D04C, 0xB, 0x00000000, 0x0, 0x4103D04C
+#define IOMUXC_PTA19_LLWU0_P5                                  0x4103D04C, 0xD, 0x00000000, 0x0, 0x4103D04C
+#define IOMUXC_PTA20_ADC0_CH10A                                0x4103D050, 0x0, 0x00000000, 0x0, 0x4103D050
+#define IOMUXC_PTA20_PTA20                                     0x4103D050, 0x1, 0x00000000, 0x0, 0x4103D050
+#define IOMUXC_PTA20_FXIO0_D4                                  0x4103D050, 0x2, 0x00000000, 0x0, 0x4103D050
+#define IOMUXC_PTA20_LPSPI0_SIN                                0x4103D050, 0x3, 0x4103D114, 0x2, 0x4103D050
+#define IOMUXC_PTA20_LPUART1_CTS_B                             0x4103D050, 0x4, 0x4103D204, 0x2, 0x4103D050
+#define IOMUXC_PTA20_LPI2C1_SCL                                0x4103D050, 0x5, 0x4103D188, 0x2, 0x4103D050
+#define IOMUXC_PTA20_TPM0_CLKIN                                0x4103D050, 0x6, 0x4103D1A8, 0x1, 0x4103D050
+#define IOMUXC_PTA20_I2S1_RX_FS                                0x4103D050, 0x7, 0x4103D1D0, 0x1, 0x4103D050
+#define IOMUXC_PTA21_ADC0_CH10B                                0x4103D054, 0x0, 0x00000000, 0x0, 0x4103D054
+#define IOMUXC_PTA21_PTA21                                     0x4103D054, 0x1, 0x00000000, 0x0, 0x4103D054
+#define IOMUXC_PTA21_FXIO0_D5                                  0x4103D054, 0x2, 0x00000000, 0x0, 0x4103D054
+#define IOMUXC_PTA21_LPSPI0_PCS1                               0x4103D054, 0x3, 0x4103D104, 0x1, 0x4103D054
+#define IOMUXC_PTA21_LPUART1_RTS_B                             0x4103D054, 0x4, 0x00000000, 0x0, 0x4103D054
+#define IOMUXC_PTA21_LPI2C1_SDA                                0x4103D054, 0x5, 0x4103D18C, 0x2, 0x4103D054
+#define IOMUXC_PTA21_TPM0_CH0                                  0x4103D054, 0x6, 0x4103D138, 0x2, 0x4103D054
+#define IOMUXC_PTA21_I2S1_RXD0                                 0x4103D054, 0x7, 0x4103D1E4, 0x1, 0x4103D054
+#define IOMUXC_PTA22_ADC0_CH9A                                 0x4103D058, 0x0, 0x00000000, 0x0, 0x4103D058
+#define IOMUXC_PTA22_PTA22                                     0x4103D058, 0x1, 0x00000000, 0x0, 0x4103D058
+#define IOMUXC_PTA22_FXIO0_D6                                  0x4103D058, 0x2, 0x00000000, 0x0, 0x4103D058
+#define IOMUXC_PTA22_LPSPI0_PCS2                               0x4103D058, 0x3, 0x4103D108, 0x2, 0x4103D058
+#define IOMUXC_PTA22_LPUART1_TX                                0x4103D058, 0x4, 0x4103D20C, 0x2, 0x4103D058
+#define IOMUXC_PTA22_LPI2C1_HREQ                               0x4103D058, 0x5, 0x4103D184, 0x2, 0x4103D058
+#define IOMUXC_PTA22_TPM0_CH1                                  0x4103D058, 0x6, 0x4103D13C, 0x2, 0x4103D058
+#define IOMUXC_PTA22_I2S1_RXD1                                 0x4103D058, 0x7, 0x4103D1E8, 0x1, 0x4103D058
+#define IOMUXC_PTA22_LPTMR0_ALT2                               0x4103D058, 0xB, 0x00000000, 0x0, 0x4103D058
+#define IOMUXC_PTA22_EWM_OUT_B                                 0x4103D058, 0xC, 0x00000000, 0x0, 0x4103D058
+#define IOMUXC_PTA23_ADC0_CH9B                                 0x4103D05C, 0x0, 0x00000000, 0x0, 0x4103D05C
+#define IOMUXC_PTA23_PTA23                                     0x4103D05C, 0x1, 0x00000000, 0x0, 0x4103D05C
+#define IOMUXC_PTA23_FXIO0_D7                                  0x4103D05C, 0x2, 0x00000000, 0x0, 0x4103D05C
+#define IOMUXC_PTA23_LPSPI0_PCS3                               0x4103D05C, 0x3, 0x4103D10C, 0x2, 0x4103D05C
+#define IOMUXC_PTA23_LPUART1_RX                                0x4103D05C, 0x4, 0x4103D208, 0x2, 0x4103D05C
+#define IOMUXC_PTA23_TPM0_CH2                                  0x4103D05C, 0x6, 0x4103D140, 0x2, 0x4103D05C
+#define IOMUXC_PTA23_I2S1_MCLK                                 0x4103D05C, 0x7, 0x4103D1C8, 0x1, 0x4103D05C
+#define IOMUXC_PTA23_LLWU0_P6                                  0x4103D05C, 0xD, 0x00000000, 0x0, 0x4103D05C
+#define IOMUXC_PTA24_ADC0_CH8A                                 0x4103D060, 0x0, 0x00000000, 0x0, 0x4103D060
+#define IOMUXC_PTA24_PTA24                                     0x4103D060, 0x1, 0x00000000, 0x0, 0x4103D060
+#define IOMUXC_PTA24_FXIO0_D8                                  0x4103D060, 0x2, 0x00000000, 0x0, 0x4103D060
+#define IOMUXC_PTA24_LPSPI1_PCS1                               0x4103D060, 0x3, 0x4103D120, 0x2, 0x4103D060
+#define IOMUXC_PTA24_LPUART2_CTS_B                             0x4103D060, 0x4, 0x4103D210, 0x2, 0x4103D060
+#define IOMUXC_PTA24_LPI2C2_SCL                                0x4103D060, 0x5, 0x4103D194, 0x2, 0x4103D060
+#define IOMUXC_PTA24_TPM0_CH3                                  0x4103D060, 0x6, 0x4103D144, 0x2, 0x4103D060
+#define IOMUXC_PTA24_I2S1_TX_BCLK                              0x4103D060, 0x7, 0x4103D1D4, 0x1, 0x4103D060
+#define IOMUXC_PTA25_ADC0_CH8B                                 0x4103D064, 0x0, 0x00000000, 0x0, 0x4103D064
+#define IOMUXC_PTA25_PTA25                                     0x4103D064, 0x1, 0x00000000, 0x0, 0x4103D064
+#define IOMUXC_PTA25_FXIO0_D9                                  0x4103D064, 0x2, 0x00000000, 0x0, 0x4103D064
+#define IOMUXC_PTA25_LPSPI1_PCS2                               0x4103D064, 0x3, 0x4103D124, 0x2, 0x4103D064
+#define IOMUXC_PTA25_LPUART2_RTS_B                             0x4103D064, 0x4, 0x00000000, 0x0, 0x4103D064
+#define IOMUXC_PTA25_LPI2C2_SDA                                0x4103D064, 0x5, 0x4103D198, 0x2, 0x4103D064
+#define IOMUXC_PTA25_TPM0_CH4                                  0x4103D064, 0x6, 0x4103D148, 0x2, 0x4103D064
+#define IOMUXC_PTA25_I2S1_TX_FS                                0x4103D064, 0x7, 0x4103D1D8, 0x1, 0x4103D064
+#define IOMUXC_PTA26_PTA26                                     0x4103D068, 0x1, 0x00000000, 0x0, 0x4103D068
+#define IOMUXC_PTA26_JTAG_TMS_SWD_DIO                          0x4103D068, 0xA, 0x00000000, 0x0, 0x4103D068
+#define IOMUXC_PTA26_FXIO0_D10                                 0x4103D068, 0x2, 0x00000000, 0x0, 0x4103D068
+#define IOMUXC_PTA26_LPSPI1_PCS3                               0x4103D068, 0x3, 0x4103D128, 0x2, 0x4103D068
+#define IOMUXC_PTA26_LPUART2_TX                                0x4103D068, 0x4, 0x4103D218, 0x2, 0x4103D068
+#define IOMUXC_PTA26_LPI2C2_HREQ                               0x4103D068, 0x5, 0x4103D190, 0x2, 0x4103D068
+#define IOMUXC_PTA26_TPM0_CH5                                  0x4103D068, 0x6, 0x4103D14C, 0x2, 0x4103D068
+#define IOMUXC_PTA26_I2S1_RXD2                                 0x4103D068, 0x7, 0x4103D1EC, 0x1, 0x4103D068
+#define IOMUXC_PTA27_PTA27                                     0x4103D06C, 0x1, 0x00000000, 0x0, 0x4103D06C
+#define IOMUXC_PTA27_JTAG_TDO                                  0x4103D06C, 0xA, 0x00000000, 0x0, 0x4103D06C
+#define IOMUXC_PTA27_FXIO0_D11                                 0x4103D06C, 0x2, 0x00000000, 0x0, 0x4103D06C
+#define IOMUXC_PTA27_LPUART2_RX                                0x4103D06C, 0x4, 0x4103D214, 0x2, 0x4103D06C
+#define IOMUXC_PTA27_TPM1_CH1                                  0x4103D06C, 0x6, 0x4103D154, 0x2, 0x4103D06C
+#define IOMUXC_PTA27_I2S1_RXD3                                 0x4103D06C, 0x7, 0x4103D1F0, 0x1, 0x4103D06C
+#define IOMUXC_PTA28_PTA28                                     0x4103D070, 0x1, 0x00000000, 0x0, 0x4103D070
+#define IOMUXC_PTA28_JTAG_TDI                                  0x4103D070, 0xA, 0x00000000, 0x0, 0x4103D070
+#define IOMUXC_PTA28_FXIO0_D12                                 0x4103D070, 0x2, 0x00000000, 0x0, 0x4103D070
+#define IOMUXC_PTA28_LPSPI1_SIN                                0x4103D070, 0x3, 0x4103D130, 0x2, 0x4103D070
+#define IOMUXC_PTA28_LPUART3_CTS_B                             0x4103D070, 0x4, 0x4103D21C, 0x2, 0x4103D070
+#define IOMUXC_PTA28_LPI2C3_SCL                                0x4103D070, 0x5, 0x4103D1A0, 0x2, 0x4103D070
+#define IOMUXC_PTA28_TPM1_CLKIN                                0x4103D070, 0x6, 0x4103D1AC, 0x2, 0x4103D070
+#define IOMUXC_PTA28_I2S1_TXD2                                 0x4103D070, 0x7, 0x00000000, 0x0, 0x4103D070
+#define IOMUXC_PTA29_PTA29                                     0x4103D074, 0x1, 0x00000000, 0x0, 0x4103D074
+#define IOMUXC_PTA29_JTAG_TCLK_SWD_CLK                         0x4103D074, 0xA, 0x00000000, 0x0, 0x4103D074
+#define IOMUXC_PTA29_FXIO0_D13                                 0x4103D074, 0x2, 0x00000000, 0x0, 0x4103D074
+#define IOMUXC_PTA29_LPSPI1_SOUT                               0x4103D074, 0x3, 0x4103D134, 0x1, 0x4103D074
+#define IOMUXC_PTA29_LPUART3_RTS_B                             0x4103D074, 0x4, 0x00000000, 0x0, 0x4103D074
+#define IOMUXC_PTA29_LPI2C3_SDA                                0x4103D074, 0x5, 0x4103D1A4, 0x1, 0x4103D074
+#define IOMUXC_PTA29_TPM1_CH0                                  0x4103D074, 0x6, 0x4103D150, 0x2, 0x4103D074
+#define IOMUXC_PTA29_I2S1_TXD3                                 0x4103D074, 0x7, 0x00000000, 0x0, 0x4103D074
+#define IOMUXC_PTA30_ADC0_CH1A                                 0x4103D078, 0x0, 0x00000000, 0x0, 0x4103D078
+#define IOMUXC_PTA30_PTA30                                     0x4103D078, 0x1, 0x00000000, 0x0, 0x4103D078
+#define IOMUXC_PTA30_FXIO0_D14                                 0x4103D078, 0x2, 0x00000000, 0x0, 0x4103D078
+#define IOMUXC_PTA30_LPSPI1_SCK                                0x4103D078, 0x3, 0x4103D12C, 0x1, 0x4103D078
+#define IOMUXC_PTA30_LPUART3_TX                                0x4103D078, 0x4, 0x4103D224, 0x1, 0x4103D078
+#define IOMUXC_PTA30_LPI2C3_HREQ                               0x4103D078, 0x5, 0x4103D19C, 0x1, 0x4103D078
+#define IOMUXC_PTA30_TPM2_CLKIN                                0x4103D078, 0x6, 0x4103D1F4, 0x2, 0x4103D078
+#define IOMUXC_PTA30_I2S1_TXD0                                 0x4103D078, 0x7, 0x00000000, 0x0, 0x4103D078
+#define IOMUXC_PTA30_JTAG_TRST_B                               0x4103D078, 0xA, 0x00000000, 0x0, 0x4103D078
+#define IOMUXC_PTA31_ADC0_CH1B                                 0x4103D07C, 0x0, 0x00000000, 0x0, 0x4103D07C
+#define IOMUXC_PTA31_PTA31                                     0x4103D07C, 0x1, 0x00000000, 0x0, 0x4103D07C
+#define IOMUXC_PTA31_FXIO0_D15                                 0x4103D07C, 0x2, 0x00000000, 0x0, 0x4103D07C
+#define IOMUXC_PTA31_LPSPI1_PCS0                               0x4103D07C, 0x3, 0x4103D11C, 0x2, 0x4103D07C
+#define IOMUXC_PTA31_LPUART3_RX                                0x4103D07C, 0x4, 0x4103D220, 0x2, 0x4103D07C
+#define IOMUXC_PTA31_TPM2_CH0                                  0x4103D07C, 0x6, 0x4103D158, 0x2, 0x4103D07C
+#define IOMUXC_PTA31_I2S1_TXD1                                 0x4103D07C, 0x7, 0x00000000, 0x0, 0x4103D07C
+#define IOMUXC_PTA31_LPTMR0_ALT1                               0x4103D07C, 0xB, 0x00000000, 0x0, 0x4103D07C
+#define IOMUXC_PTA31_EWM_IN                                    0x4103D07C, 0xC, 0x4103D228, 0x1, 0x4103D07C
+#define IOMUXC_PTA31_LLWU0_P7                                  0x4103D07C, 0xD, 0x00000000, 0x0, 0x4103D07C
+#define IOMUXC_PTB0_ADC0_CH0A                                  0x4103D080, 0x0, 0x00000000, 0x0, 0x4103D080
+#define IOMUXC_PTB0_PTB0                                       0x4103D080, 0x1, 0x00000000, 0x0, 0x4103D080
+#define IOMUXC_PTB0_FXIO0_D16                                  0x4103D080, 0x2, 0x00000000, 0x0, 0x4103D080
+#define IOMUXC_PTB0_LPSPI0_SIN                                 0x4103D080, 0x3, 0x4103D114, 0x3, 0x4103D080
+#define IOMUXC_PTB0_LPUART0_TX                                 0x4103D080, 0x4, 0x4103D200, 0x3, 0x4103D080
+#define IOMUXC_PTB0_TPM2_CH1                                   0x4103D080, 0x6, 0x4103D15C, 0x2, 0x4103D080
+#define IOMUXC_PTB0_CLKOUT0                                    0x4103D080, 0x9, 0x00000000, 0x0, 0x4103D080
+#define IOMUXC_PTB0_CMP1_OUT                                   0x4103D080, 0xB, 0x00000000, 0x0, 0x4103D080
+#define IOMUXC_PTB0_EWM_OUT_B                                  0x4103D080, 0xC, 0x00000000, 0x0, 0x4103D080
+#define IOMUXC_PTB1_ADC0_CH0B                                  0x4103D084, 0x0, 0x00000000, 0x0, 0x4103D084
+#define IOMUXC_PTB1_PTB1                                       0x4103D084, 0x1, 0x00000000, 0x0, 0x4103D084
+#define IOMUXC_PTB1_FXIO0_D17                                  0x4103D084, 0x2, 0x00000000, 0x0, 0x4103D084
+#define IOMUXC_PTB1_LPSPI0_SOUT                                0x4103D084, 0x3, 0x4103D118, 0x3, 0x4103D084
+#define IOMUXC_PTB1_LPUART0_RX                                 0x4103D084, 0x4, 0x4103D1FC, 0x3, 0x4103D084
+#define IOMUXC_PTB1_TPM3_CLKIN                                 0x4103D084, 0x6, 0x4103D1B0, 0x3, 0x4103D084
+#define IOMUXC_PTB1_I2S1_TX_BCLK                               0x4103D084, 0x7, 0x4103D1D4, 0x2, 0x4103D084
+#define IOMUXC_PTB1_RTC_CLKOUT                                 0x4103D084, 0xB, 0x00000000, 0x0, 0x4103D084
+#define IOMUXC_PTB1_EWM_IN                                     0x4103D084, 0xC, 0x4103D228, 0x2, 0x4103D084
+#define IOMUXC_PTB1_LLWU0_P8                                   0x4103D084, 0xD, 0x00000000, 0x0, 0x4103D084
+#define IOMUXC_PTB2_ADC0_CH6A                                  0x4103D088, 0x0, 0x00000000, 0x0, 0x4103D088
+#define IOMUXC_PTB2_PTB2                                       0x4103D088, 0x1, 0x00000000, 0x0, 0x4103D088
+#define IOMUXC_PTB2_FXIO0_D18                                  0x4103D088, 0x2, 0x00000000, 0x0, 0x4103D088
+#define IOMUXC_PTB2_LPSPI0_SCK                                 0x4103D088, 0x3, 0x4103D110, 0x3, 0x4103D088
+#define IOMUXC_PTB2_LPUART1_TX                                 0x4103D088, 0x4, 0x4103D20C, 0x3, 0x4103D088
+#define IOMUXC_PTB2_TPM3_CH0                                   0x4103D088, 0x6, 0x4103D160, 0x2, 0x4103D088
+#define IOMUXC_PTB2_I2S1_TX_FS                                 0x4103D088, 0x7, 0x4103D1D8, 0x2, 0x4103D088
+#define IOMUXC_PTB2_TRACE_CLKOUT                               0x4103D088, 0xA, 0x00000000, 0x0, 0x4103D088
+#define IOMUXC_PTB3_ADC0_CH6B                                  0x4103D08C, 0x0, 0x00000000, 0x0, 0x4103D08C
+#define IOMUXC_PTB3_PTB3                                       0x4103D08C, 0x1, 0x00000000, 0x0, 0x4103D08C
+#define IOMUXC_PTB3_FXIO0_D19                                  0x4103D08C, 0x2, 0x00000000, 0x0, 0x4103D08C
+#define IOMUXC_PTB3_LPSPI0_PCS0                                0x4103D08C, 0x3, 0x4103D100, 0x3, 0x4103D08C
+#define IOMUXC_PTB3_LPUART1_RX                                 0x4103D08C, 0x4, 0x4103D208, 0x3, 0x4103D08C
+#define IOMUXC_PTB3_TPM3_CH1                                   0x4103D08C, 0x6, 0x4103D164, 0x2, 0x4103D08C
+#define IOMUXC_PTB3_I2S1_TXD0                                  0x4103D08C, 0x7, 0x00000000, 0x0, 0x4103D08C
+#define IOMUXC_PTB3_TRACE_D0                                   0x4103D08C, 0xA, 0x00000000, 0x0, 0x4103D08C
+#define IOMUXC_PTB3_LPTMR1_ALT2                                0x4103D08C, 0xB, 0x00000000, 0x0, 0x4103D08C
+#define IOMUXC_PTB3_LLWU0_P9                                   0x4103D08C, 0xD, 0x00000000, 0x0, 0x4103D08C
+#define IOMUXC_PTB4_PTB4                                       0x4103D090, 0x1, 0x00000000, 0x0, 0x4103D090
+#define IOMUXC_PTB4_FXIO0_D20                                  0x4103D090, 0x2, 0x00000000, 0x0, 0x4103D090
+#define IOMUXC_PTB4_LPSPI0_PCS1                                0x4103D090, 0x3, 0x4103D104, 0x3, 0x4103D090
+#define IOMUXC_PTB4_LPUART2_TX                                 0x4103D090, 0x4, 0x4103D218, 0x3, 0x4103D090
+#define IOMUXC_PTB4_LPI2C0_HREQ                                0x4103D090, 0x5, 0x4103D178, 0x3, 0x4103D090
+#define IOMUXC_PTB4_TPM3_CH2                                   0x4103D090, 0x6, 0x4103D168, 0x2, 0x4103D090
+#define IOMUXC_PTB4_I2S1_TXD1                                  0x4103D090, 0x7, 0x00000000, 0x0, 0x4103D090
+#define IOMUXC_PTB4_QSPIA_DATA7                                0x4103D090, 0x8, 0x00000000, 0x0, 0x4103D090
+#define IOMUXC_PTB4_TRACE_D1                                   0x4103D090, 0xA, 0x00000000, 0x0, 0x4103D090
+#define IOMUXC_PTB4_SEC_VIO_B                                  0x4103D090, 0xB, 0x00000000, 0x0, 0x4103D090
+#define IOMUXC_PTB5_PTB5                                       0x4103D094, 0x1, 0x00000000, 0x0, 0x4103D094
+#define IOMUXC_PTB5_FXIO0_D21                                  0x4103D094, 0x2, 0x00000000, 0x0, 0x4103D094
+#define IOMUXC_PTB5_LPSPI0_PCS2                                0x4103D094, 0x3, 0x4103D108, 0x3, 0x4103D094
+#define IOMUXC_PTB5_LPUART2_RX                                 0x4103D094, 0x4, 0x4103D214, 0x3, 0x4103D094
+#define IOMUXC_PTB5_LPI2C1_HREQ                                0x4103D094, 0x5, 0x4103D184, 0x3, 0x4103D094
+#define IOMUXC_PTB5_TPM3_CH3                                   0x4103D094, 0x6, 0x4103D16C, 0x2, 0x4103D094
+#define IOMUXC_PTB5_I2S1_TXD2                                  0x4103D094, 0x7, 0x00000000, 0x0, 0x4103D094
+#define IOMUXC_PTB5_QSPIA_DATA6                                0x4103D094, 0x8, 0x00000000, 0x0, 0x4103D094
+#define IOMUXC_PTB5_TRACE_D2                                   0x4103D094, 0xA, 0x00000000, 0x0, 0x4103D094
+#define IOMUXC_PTB5_RTC_CLKOUT                                 0x4103D094, 0xB, 0x00000000, 0x0, 0x4103D094
+#define IOMUXC_PTB6_ADC1_CH1A                                  0x4103D098, 0x0, 0x00000000, 0x0, 0x4103D098
+#define IOMUXC_PTB6_PTB6                                       0x4103D098, 0x1, 0x00000000, 0x0, 0x4103D098
+#define IOMUXC_PTB6_FXIO0_D22                                  0x4103D098, 0x2, 0x00000000, 0x0, 0x4103D098
+#define IOMUXC_PTB6_LPSPI0_PCS3                                0x4103D098, 0x3, 0x4103D10C, 0x3, 0x4103D098
+#define IOMUXC_PTB6_LPUART3_TX                                 0x4103D098, 0x4, 0x4103D224, 0x3, 0x4103D098
+#define IOMUXC_PTB6_LPI2C0_SCL                                 0x4103D098, 0x5, 0x4103D17C, 0x3, 0x4103D098
+#define IOMUXC_PTB6_TPM3_CH4                                   0x4103D098, 0x6, 0x4103D170, 0x2, 0x4103D098
+#define IOMUXC_PTB6_I2S1_TXD3                                  0x4103D098, 0x7, 0x00000000, 0x0, 0x4103D098
+#define IOMUXC_PTB6_QSPIA_DATA5                                0x4103D098, 0x8, 0x00000000, 0x0, 0x4103D098
+#define IOMUXC_PTB6_TRACE_D3                                   0x4103D098, 0xA, 0x00000000, 0x0, 0x4103D098
+#define IOMUXC_PTB6_LPTMR1_ALT3                                0x4103D098, 0xB, 0x00000000, 0x0, 0x4103D098
+#define IOMUXC_PTB6_LLWU0_P10                                  0x4103D098, 0xD, 0x00000000, 0x0, 0x4103D098
+#define IOMUXC_PTB7_ADC1_CH1B                                  0x4103D09C, 0x0, 0x00000000, 0x0, 0x4103D09C
+#define IOMUXC_PTB7_PTB7                                       0x4103D09C, 0x1, 0x00000000, 0x0, 0x4103D09C
+#define IOMUXC_PTB7_FXIO0_D23                                  0x4103D09C, 0x2, 0x00000000, 0x0, 0x4103D09C
+#define IOMUXC_PTB7_LPSPI1_SIN                                 0x4103D09C, 0x3, 0x4103D130, 0x3, 0x4103D09C
+#define IOMUXC_PTB7_LPUART3_RX                                 0x4103D09C, 0x4, 0x4103D220, 0x3, 0x4103D09C
+#define IOMUXC_PTB7_LPI2C0_SDA                                 0x4103D09C, 0x5, 0x4103D180, 0x3, 0x4103D09C
+#define IOMUXC_PTB7_TPM3_CH5                                   0x4103D09C, 0x6, 0x4103D174, 0x2, 0x4103D09C
+#define IOMUXC_PTB7_I2S1_MCLK                                  0x4103D09C, 0x7, 0x4103D1C8, 0x2, 0x4103D09C
+#define IOMUXC_PTB7_QSPIA_SS1_B                                0x4103D09C, 0x8, 0x00000000, 0x0, 0x4103D09C
+#define IOMUXC_PTB7_CMP1_OUT                                   0x4103D09C, 0xB, 0x00000000, 0x0, 0x4103D09C
+#define IOMUXC_PTB7_LLWU0_P11                                  0x4103D09C, 0xD, 0x00000000, 0x0, 0x4103D09C
+#define IOMUXC_PTB8_ADC0_CH14A_CMP0_IN0                        0x4103D0A0, 0x0, 0x00000000, 0x0, 0x4103D0A0
+#define IOMUXC_PTB8_PTB8                                       0x4103D0A0, 0x1, 0x00000000, 0x0, 0x4103D0A0
+#define IOMUXC_PTB8_FXIO0_D24                                  0x4103D0A0, 0x2, 0x00000000, 0x0, 0x4103D0A0
+#define IOMUXC_PTB8_LPSPI1_SOUT                                0x4103D0A0, 0x3, 0x4103D134, 0x3, 0x4103D0A0
+#define IOMUXC_PTB8_LPI2C1_SCL                                 0x4103D0A0, 0x5, 0x4103D188, 0x3, 0x4103D0A0
+#define IOMUXC_PTB8_TPM0_CLKIN                                 0x4103D0A0, 0x6, 0x4103D1A8, 0x3, 0x4103D0A0
+#define IOMUXC_PTB8_I2S1_RX_BCLK                               0x4103D0A0, 0x7, 0x4103D1CC, 0x2, 0x4103D0A0
+#define IOMUXC_PTB8_QSPIA_SS0_B                                0x4103D0A0, 0x8, 0x00000000, 0x0, 0x4103D0A0
+#define IOMUXC_PTB8_RTC_CLKOUT                                 0x4103D0A0, 0xB, 0x00000000, 0x0, 0x4103D0A0
+#define IOMUXC_PTB9_ADC0_CH14B_CMP0_IN2                        0x4103D0A4, 0x0, 0x00000000, 0x0, 0x4103D0A4
+#define IOMUXC_PTB9_PTB9                                       0x4103D0A4, 0x1, 0x00000000, 0x0, 0x4103D0A4
+#define IOMUXC_PTB9_FXIO0_D25                                  0x4103D0A4, 0x2, 0x00000000, 0x0, 0x4103D0A4
+#define IOMUXC_PTB9_LPSPI1_SCK                                 0x4103D0A4, 0x3, 0x4103D12C, 0x3, 0x4103D0A4
+#define IOMUXC_PTB9_LPI2C1_SDA                                 0x4103D0A4, 0x5, 0x4103D18C, 0x3, 0x4103D0A4
+#define IOMUXC_PTB9_TPM0_CH0                                   0x4103D0A4, 0x6, 0x4103D138, 0x3, 0x4103D0A4
+#define IOMUXC_PTB9_I2S1_RX_FS                                 0x4103D0A4, 0x7, 0x4103D1D0, 0x2, 0x4103D0A4
+#define IOMUXC_PTB9_QSPIA_DQS                                  0x4103D0A4, 0x8, 0x00000000, 0x0, 0x4103D0A4
+#define IOMUXC_PTB9_LLWU0_P12                                  0x4103D0A4, 0xD, 0x00000000, 0x0, 0x4103D0A4
+#define IOMUXC_PTB10_CMP0_IN1                                  0x4103D0A8, 0x0, 0x00000000, 0x0, 0x4103D0A8
+#define IOMUXC_PTB10_PTB10                                     0x4103D0A8, 0x1, 0x00000000, 0x0, 0x4103D0A8
+#define IOMUXC_PTB10_FXIO0_D26                                 0x4103D0A8, 0x2, 0x00000000, 0x0, 0x4103D0A8
+#define IOMUXC_PTB10_LPSPI1_PCS0                               0x4103D0A8, 0x3, 0x4103D11C, 0x3, 0x4103D0A8
+#define IOMUXC_PTB10_LPI2C2_SCL                                0x4103D0A8, 0x5, 0x4103D194, 0x3, 0x4103D0A8
+#define IOMUXC_PTB10_TPM0_CH1                                  0x4103D0A8, 0x6, 0x4103D13C, 0x3, 0x4103D0A8
+#define IOMUXC_PTB10_I2S1_RXD0                                 0x4103D0A8, 0x7, 0x4103D1E4, 0x2, 0x4103D0A8
+#define IOMUXC_PTB10_TRACE_D4                                  0x4103D0A8, 0xA, 0x00000000, 0x0, 0x4103D0A8
+#define IOMUXC_PTB11_CMP0_IN3                                  0x4103D0AC, 0x0, 0x00000000, 0x0, 0x4103D0AC
+#define IOMUXC_PTB11_PTB11                                     0x4103D0AC, 0x1, 0x00000000, 0x0, 0x4103D0AC
+#define IOMUXC_PTB11_FXIO0_D27                                 0x4103D0AC, 0x2, 0x00000000, 0x0, 0x4103D0AC
+#define IOMUXC_PTB11_LPSPI1_PCS1                               0x4103D0AC, 0x3, 0x4103D120, 0x3, 0x4103D0AC
+#define IOMUXC_PTB11_LPI2C2_SDA                                0x4103D0AC, 0x5, 0x4103D198, 0x3, 0x4103D0AC
+#define IOMUXC_PTB11_TPM1_CLKIN                                0x4103D0AC, 0x6, 0x4103D1AC, 0x3, 0x4103D0AC
+#define IOMUXC_PTB11_I2S1_RXD1                                 0x4103D0AC, 0x7, 0x4103D1E8, 0x2, 0x4103D0AC
+#define IOMUXC_PTB11_TRACE_D5                                  0x4103D0AC, 0xA, 0x00000000, 0x0, 0x4103D0AC
+#define IOMUXC_PTB12_ADC1_CH13A_CMP1_IN0                       0x4103D0B0, 0x0, 0x00000000, 0x0, 0x4103D0B0
+#define IOMUXC_PTB12_PTB12                                     0x4103D0B0, 0x1, 0x00000000, 0x0, 0x4103D0B0
+#define IOMUXC_PTB12_FXIO0_D28                                 0x4103D0B0, 0x2, 0x00000000, 0x0, 0x4103D0B0
+#define IOMUXC_PTB12_LPSPI1_PCS2                               0x4103D0B0, 0x3, 0x4103D124, 0x3, 0x4103D0B0
+#define IOMUXC_PTB12_LPUART2_TX                                0x4103D0B0, 0x4, 0x4103D218, 0x4, 0x4103D0B0
+#define IOMUXC_PTB12_LPI2C3_SCL                                0x4103D0B0, 0x5, 0x4103D1A0, 0x3, 0x4103D0B0
+#define IOMUXC_PTB12_TPM1_CH0                                  0x4103D0B0, 0x6, 0x4103D150, 0x3, 0x4103D0B0
+#define IOMUXC_PTB12_I2S1_RXD2                                 0x4103D0B0, 0x7, 0x4103D1EC, 0x2, 0x4103D0B0
+#define IOMUXC_PTB12_TRACE_D6                                  0x4103D0B0, 0xA, 0x00000000, 0x0, 0x4103D0B0
+#define IOMUXC_PTB13_ADC1_CH13B_CMP1_IN1                       0x4103D0B4, 0x0, 0x00000000, 0x0, 0x4103D0B4
+#define IOMUXC_PTB13_PTB13                                     0x4103D0B4, 0x1, 0x00000000, 0x0, 0x4103D0B4
+#define IOMUXC_PTB13_FXIO0_D29                                 0x4103D0B4, 0x2, 0x00000000, 0x0, 0x4103D0B4
+#define IOMUXC_PTB13_LPSPI1_PCS3                               0x4103D0B4, 0x3, 0x4103D128, 0x3, 0x4103D0B4
+#define IOMUXC_PTB13_LPUART2_RX                                0x4103D0B4, 0x4, 0x4103D214, 0x4, 0x4103D0B4
+#define IOMUXC_PTB13_LPI2C3_SDA                                0x4103D0B4, 0x5, 0x4103D1A4, 0x3, 0x4103D0B4
+#define IOMUXC_PTB13_TPM1_CH1                                  0x4103D0B4, 0x6, 0x4103D154, 0x3, 0x4103D0B4
+#define IOMUXC_PTB13_I2S1_RXD3                                 0x4103D0B4, 0x7, 0x4103D1F0, 0x2, 0x4103D0B4
+#define IOMUXC_PTB13_QSPIA_DATA4                               0x4103D0B4, 0x8, 0x00000000, 0x0, 0x4103D0B4
+#define IOMUXC_PTB13_TRACE_D7                                  0x4103D0B4, 0xA, 0x00000000, 0x0, 0x4103D0B4
+#define IOMUXC_PTB14_ADC1_CH2A                                 0x4103D0B8, 0x0, 0x00000000, 0x0, 0x4103D0B8
+#define IOMUXC_PTB14_PTB14                                     0x4103D0B8, 0x1, 0x00000000, 0x0, 0x4103D0B8
+#define IOMUXC_PTB14_FXIO0_D30                                 0x4103D0B8, 0x2, 0x00000000, 0x0, 0x4103D0B8
+#define IOMUXC_PTB14_LPI2C2_HREQ                               0x4103D0B8, 0x5, 0x4103D190, 0x3, 0x4103D0B8
+#define IOMUXC_PTB14_TPM2_CLKIN                                0x4103D0B8, 0x6, 0x4103D1F4, 0x3, 0x4103D0B8
+#define IOMUXC_PTB14_QSPIA_SS1_B                               0x4103D0B8, 0x8, 0x00000000, 0x0, 0x4103D0B8
+#define IOMUXC_PTB14_QSPIA_SCLK_B                              0x4103D0B8, 0x9, 0x00000000, 0x0, 0x4103D0B8
+#define IOMUXC_PTB14_RTC_CLKOUT                                0x4103D0B8, 0xB, 0x00000000, 0x0, 0x4103D0B8
+#define IOMUXC_PTB14_LLWU0_P13                                 0x4103D0B8, 0xD, 0x00000000, 0x0, 0x4103D0B8
+#define IOMUXC_PTB15_ADC1_CH2B                                 0x4103D0BC, 0x0, 0x00000000, 0x0, 0x4103D0BC
+#define IOMUXC_PTB15_PTB15                                     0x4103D0BC, 0x1, 0x00000000, 0x0, 0x4103D0BC
+#define IOMUXC_PTB15_FXIO0_D31                                 0x4103D0BC, 0x2, 0x00000000, 0x0, 0x4103D0BC
+#define IOMUXC_PTB15_LPI2C3_HREQ                               0x4103D0BC, 0x5, 0x4103D19C, 0x3, 0x4103D0BC
+#define IOMUXC_PTB15_TPM2_CH0                                  0x4103D0BC, 0x6, 0x4103D158, 0x3, 0x4103D0BC
+#define IOMUXC_PTB15_QSPIA_SCLK                                0x4103D0BC, 0x8, 0x00000000, 0x0, 0x4103D0BC
+#define IOMUXC_PTB16_ADC0_CH4A                                 0x4103D0C0, 0x0, 0x00000000, 0x0, 0x4103D0C0
+#define IOMUXC_PTB16_PTB16                                     0x4103D0C0, 0x1, 0x00000000, 0x0, 0x4103D0C0
+#define IOMUXC_PTB16_TPM2_CH1                                  0x4103D0C0, 0x6, 0x4103D15C, 0x3, 0x4103D0C0
+#define IOMUXC_PTB16_QSPIA_DATA3                               0x4103D0C0, 0x8, 0x00000000, 0x0, 0x4103D0C0
+#define IOMUXC_PTB16_LLWU0_P14                                 0x4103D0C0, 0xD, 0x00000000, 0x0, 0x4103D0C0
+#define IOMUXC_PTB17_ADC0_CH4B                                 0x4103D0C4, 0x0, 0x00000000, 0x0, 0x4103D0C4
+#define IOMUXC_PTB17_PTB17                                     0x4103D0C4, 0x1, 0x00000000, 0x0, 0x4103D0C4
+#define IOMUXC_PTB17_TPM3_CLKIN                                0x4103D0C4, 0x6, 0x4103D1B0, 0x2, 0x4103D0C4
+#define IOMUXC_PTB17_QSPIA_DATA2                               0x4103D0C4, 0x8, 0x00000000, 0x0, 0x4103D0C4
+#define IOMUXC_PTB18_ADC0_CH5A                                 0x4103D0C8, 0x0, 0x00000000, 0x0, 0x4103D0C8
+#define IOMUXC_PTB18_PTB18                                     0x4103D0C8, 0x1, 0x00000000, 0x0, 0x4103D0C8
+#define IOMUXC_PTB18_TPM3_CH0                                  0x4103D0C8, 0x6, 0x4103D160, 0x3, 0x4103D0C8
+#define IOMUXC_PTB18_QSPIA_DATA1                               0x4103D0C8, 0x8, 0x00000000, 0x0, 0x4103D0C8
+#define IOMUXC_PTB19_ADC0_CH5B                                 0x4103D0CC, 0x0, 0x00000000, 0x0, 0x4103D0CC
+#define IOMUXC_PTB19_PTB19                                     0x4103D0CC, 0x1, 0x00000000, 0x0, 0x4103D0CC
+#define IOMUXC_PTB19_TPM3_CH1                                  0x4103D0CC, 0x6, 0x4103D164, 0x3, 0x4103D0CC
+#define IOMUXC_PTB19_QSPIA_DATA0                               0x4103D0CC, 0x8, 0x00000000, 0x0, 0x4103D0CC
+#define IOMUXC_PTB19_USB0_ID                                   0x4103D0CC, 0xA, 0x40AC0338, 0x0, 0x4103D0CC
+#define IOMUXC_PTB19_LLWU0_P15                                 0x4103D0CC, 0xD, 0x00000000, 0x0, 0x4103D0CC
+#define IOMUXC_PTC0_PTC0                                       0x40AC0000, 0x1, 0x00000000, 0x0, 0x40AC0000
+#define IOMUXC_PTC0_LPUART4_CTS_B                              0x40AC0000, 0x4, 0x40AC0244, 0x1, 0x40AC0000
+#define IOMUXC_PTC0_LPI2C4_SCL                                 0x40AC0000, 0x5, 0x40AC0278, 0x1, 0x40AC0000
+#define IOMUXC_PTC0_TPM4_CLKIN                                 0x40AC0000, 0x6, 0x40AC0298, 0x1, 0x40AC0000
+#define IOMUXC_PTC0_FB_AD0                                     0x40AC0000, 0x9, 0x00000000, 0x0, 0x40AC0000
+#define IOMUXC_PTC0_TRACE_D15                                  0x40AC0000, 0xA, 0x00000000, 0x0, 0x40AC0000
+#define IOMUXC_PTC1_PTC1                                       0x40AC0004, 0x1, 0x00000000, 0x0, 0x40AC0004
+#define IOMUXC_PTC1_LPUART4_RTS_B                              0x40AC0004, 0x4, 0x00000000, 0x0, 0x40AC0004
+#define IOMUXC_PTC1_LPI2C4_SDA                                 0x40AC0004, 0x5, 0x40AC027C, 0x1, 0x40AC0004
+#define IOMUXC_PTC1_TPM4_CH0                                   0x40AC0004, 0x6, 0x40AC0280, 0x1, 0x40AC0004
+#define IOMUXC_PTC1_FB_AD1                                     0x40AC0004, 0x9, 0x00000000, 0x0, 0x40AC0004
+#define IOMUXC_PTC1_TRACE_D14                                  0x40AC0004, 0xA, 0x00000000, 0x0, 0x40AC0004
+#define IOMUXC_PTC2_PTC2                                       0x40AC0008, 0x1, 0x00000000, 0x0, 0x40AC0008
+#define IOMUXC_PTC2_LPUART4_TX                                 0x40AC0008, 0x4, 0x40AC024C, 0x1, 0x40AC0008
+#define IOMUXC_PTC2_LPI2C4_HREQ                                0x40AC0008, 0x5, 0x40AC0274, 0x1, 0x40AC0008
+#define IOMUXC_PTC2_TPM4_CH1                                   0x40AC0008, 0x6, 0x40AC0284, 0x1, 0x40AC0008
+#define IOMUXC_PTC2_FB_AD2                                     0x40AC0008, 0x9, 0x00000000, 0x0, 0x40AC0008
+#define IOMUXC_PTC2_TRACE_D13                                  0x40AC0008, 0xA, 0x00000000, 0x0, 0x40AC0008
+#define IOMUXC_PTC3_PTC3                                       0x40AC000C, 0x1, 0x00000000, 0x0, 0x40AC000C
+#define IOMUXC_PTC3_LPUART4_RX                                 0x40AC000C, 0x4, 0x40AC0248, 0x1, 0x40AC000C
+#define IOMUXC_PTC3_TPM4_CH2                                   0x40AC000C, 0x6, 0x40AC0288, 0x1, 0x40AC000C
+#define IOMUXC_PTC3_FB_AD3                                     0x40AC000C, 0x9, 0x00000000, 0x0, 0x40AC000C
+#define IOMUXC_PTC3_TRACE_D12                                  0x40AC000C, 0xA, 0x00000000, 0x0, 0x40AC000C
+#define IOMUXC_PTC4_PTC4                                       0x40AC0010, 0x1, 0x00000000, 0x0, 0x40AC0010
+#define IOMUXC_PTC4_FXIO1_D0                                   0x40AC0010, 0x2, 0x40AC0204, 0x1, 0x40AC0010
+#define IOMUXC_PTC4_LPSPI2_PCS1                                0x40AC0010, 0x3, 0x40AC02A0, 0x1, 0x40AC0010
+#define IOMUXC_PTC4_LPUART5_CTS_B                              0x40AC0010, 0x4, 0x40AC0250, 0x1, 0x40AC0010
+#define IOMUXC_PTC4_LPI2C5_SCL                                 0x40AC0010, 0x5, 0x40AC02BC, 0x1, 0x40AC0010
+#define IOMUXC_PTC4_TPM4_CH3                                   0x40AC0010, 0x6, 0x40AC028C, 0x1, 0x40AC0010
+#define IOMUXC_PTC4_FB_AD4                                     0x40AC0010, 0x9, 0x00000000, 0x0, 0x40AC0010
+#define IOMUXC_PTC4_TRACE_D11                                  0x40AC0010, 0xA, 0x00000000, 0x0, 0x40AC0010
+#define IOMUXC_PTC5_PTC5                                       0x40AC0014, 0x1, 0x00000000, 0x0, 0x40AC0014
+#define IOMUXC_PTC5_FXIO1_D1                                   0x40AC0014, 0x2, 0x40AC0208, 0x1, 0x40AC0014
+#define IOMUXC_PTC5_LPSPI2_PCS2                                0x40AC0014, 0x3, 0x40AC02A4, 0x1, 0x40AC0014
+#define IOMUXC_PTC5_LPUART5_RTS_B                              0x40AC0014, 0x4, 0x00000000, 0x0, 0x40AC0014
+#define IOMUXC_PTC5_LPI2C5_SDA                                 0x40AC0014, 0x5, 0x40AC02C0, 0x1, 0x40AC0014
+#define IOMUXC_PTC5_TPM4_CH4                                   0x40AC0014, 0x6, 0x40AC0290, 0x1, 0x40AC0014
+#define IOMUXC_PTC5_FB_AD5                                     0x40AC0014, 0x9, 0x00000000, 0x0, 0x40AC0014
+#define IOMUXC_PTC5_TRACE_D10                                  0x40AC0014, 0xA, 0x00000000, 0x0, 0x40AC0014
+#define IOMUXC_PTC6_PTC6                                       0x40AC0018, 0x1, 0x00000000, 0x0, 0x40AC0018
+#define IOMUXC_PTC6_FXIO1_D2                                   0x40AC0018, 0x2, 0x40AC020C, 0x1, 0x40AC0018
+#define IOMUXC_PTC6_LPSPI2_PCS3                                0x40AC0018, 0x3, 0x40AC02A8, 0x1, 0x40AC0018
+#define IOMUXC_PTC6_LPUART5_TX                                 0x40AC0018, 0x4, 0x40AC0258, 0x1, 0x40AC0018
+#define IOMUXC_PTC6_LPI2C5_HREQ                                0x40AC0018, 0x5, 0x40AC02B8, 0x1, 0x40AC0018
+#define IOMUXC_PTC6_TPM4_CH5                                   0x40AC0018, 0x6, 0x40AC0294, 0x1, 0x40AC0018
+#define IOMUXC_PTC6_FB_AD6                                     0x40AC0018, 0x9, 0x00000000, 0x0, 0x40AC0018
+#define IOMUXC_PTC6_TRACE_D9                                   0x40AC0018, 0xA, 0x00000000, 0x0, 0x40AC0018
+#define IOMUXC_PTC7_PTC7                                       0x40AC001C, 0x1, 0x00000000, 0x0, 0x40AC001C
+#define IOMUXC_PTC7_FXIO1_D3                                   0x40AC001C, 0x2, 0x40AC0210, 0x1, 0x40AC001C
+#define IOMUXC_PTC7_LPUART5_RX                                 0x40AC001C, 0x4, 0x40AC0254, 0x1, 0x40AC001C
+#define IOMUXC_PTC7_TPM5_CH1                                   0x40AC001C, 0x6, 0x40AC02C8, 0x1, 0x40AC001C
+#define IOMUXC_PTC7_FB_AD7                                     0x40AC001C, 0x9, 0x00000000, 0x0, 0x40AC001C
+#define IOMUXC_PTC7_TRACE_D8                                   0x40AC001C, 0xA, 0x00000000, 0x0, 0x40AC001C
+#define IOMUXC_PTC8_PTC8                                       0x40AC0020, 0x1, 0x00000000, 0x0, 0x40AC0020
+#define IOMUXC_PTC8_FXIO1_D4                                   0x40AC0020, 0x2, 0x40AC0214, 0x1, 0x40AC0020
+#define IOMUXC_PTC8_LPSPI2_SIN                                 0x40AC0020, 0x3, 0x40AC02B0, 0x1, 0x40AC0020
+#define IOMUXC_PTC8_LPUART6_CTS_B                              0x40AC0020, 0x4, 0x40AC025C, 0x1, 0x40AC0020
+#define IOMUXC_PTC8_LPI2C6_SCL                                 0x40AC0020, 0x5, 0x40AC02FC, 0x1, 0x40AC0020
+#define IOMUXC_PTC8_TPM5_CLKIN                                 0x40AC0020, 0x6, 0x40AC02CC, 0x1, 0x40AC0020
+#define IOMUXC_PTC8_FB_AD8                                     0x40AC0020, 0x9, 0x00000000, 0x0, 0x40AC0020
+#define IOMUXC_PTC8_TRACE_D7                                   0x40AC0020, 0xA, 0x00000000, 0x0, 0x40AC0020
+#define IOMUXC_PTC9_PTC9                                       0x40AC0024, 0x1, 0x00000000, 0x0, 0x40AC0024
+#define IOMUXC_PTC9_FXIO1_D5                                   0x40AC0024, 0x2, 0x40AC0218, 0x1, 0x40AC0024
+#define IOMUXC_PTC9_LPSPI2_SOUT                                0x40AC0024, 0x3, 0x40AC02B4, 0x1, 0x40AC0024
+#define IOMUXC_PTC9_LPUART6_RTS_B                              0x40AC0024, 0x4, 0x00000000, 0x0, 0x40AC0024
+#define IOMUXC_PTC9_LPI2C6_SDA                                 0x40AC0024, 0x5, 0x40AC0300, 0x1, 0x40AC0024
+#define IOMUXC_PTC9_TPM5_CH0                                   0x40AC0024, 0x6, 0x40AC02C4, 0x1, 0x40AC0024
+#define IOMUXC_PTC9_FB_AD9                                     0x40AC0024, 0x9, 0x00000000, 0x0, 0x40AC0024
+#define IOMUXC_PTC9_TRACE_D6                                   0x40AC0024, 0xA, 0x00000000, 0x0, 0x40AC0024
+#define IOMUXC_PTC10_PTC10                                     0x40AC0028, 0x1, 0x00000000, 0x0, 0x40AC0028
+#define IOMUXC_PTC10_FXIO1_D6                                  0x40AC0028, 0x2, 0x40AC021C, 0x1, 0x40AC0028
+#define IOMUXC_PTC10_LPSPI2_SCK                                0x40AC0028, 0x3, 0x40AC02AC, 0x1, 0x40AC0028
+#define IOMUXC_PTC10_LPUART6_TX                                0x40AC0028, 0x4, 0x40AC0264, 0x1, 0x40AC0028
+#define IOMUXC_PTC10_LPI2C6_HREQ                               0x40AC0028, 0x5, 0x40AC02F8, 0x1, 0x40AC0028
+#define IOMUXC_PTC10_TPM7_CH3                                  0x40AC0028, 0x6, 0x40AC02E8, 0x1, 0x40AC0028
+#define IOMUXC_PTC10_FB_AD10                                   0x40AC0028, 0x9, 0x00000000, 0x0, 0x40AC0028
+#define IOMUXC_PTC10_TRACE_D5                                  0x40AC0028, 0xA, 0x00000000, 0x0, 0x40AC0028
+#define IOMUXC_PTC11_PTC11                                     0x40AC002C, 0x1, 0x00000000, 0x0, 0x40AC002C
+#define IOMUXC_PTC11_FXIO1_D7                                  0x40AC002C, 0x2, 0x40AC0220, 0x1, 0x40AC002C
+#define IOMUXC_PTC11_LPSPI2_PCS0                               0x40AC002C, 0x3, 0x40AC029C, 0x1, 0x40AC002C
+#define IOMUXC_PTC11_LPUART6_RX                                0x40AC002C, 0x4, 0x40AC0260, 0x1, 0x40AC002C
+#define IOMUXC_PTC11_TPM7_CH4                                  0x40AC002C, 0x6, 0x40AC02EC, 0x1, 0x40AC002C
+#define IOMUXC_PTC11_FB_AD11                                   0x40AC002C, 0x9, 0x00000000, 0x0, 0x40AC002C
+#define IOMUXC_PTC11_TRACE_D4                                  0x40AC002C, 0xA, 0x00000000, 0x0, 0x40AC002C
+#define IOMUXC_PTC12_PTC12                                     0x40AC0030, 0x1, 0x00000000, 0x0, 0x40AC0030
+#define IOMUXC_PTC12_FXIO1_D8                                  0x40AC0030, 0x2, 0x40AC0224, 0x1, 0x40AC0030
+#define IOMUXC_PTC12_LPSPI3_PCS1                               0x40AC0030, 0x3, 0x40AC0314, 0x1, 0x40AC0030
+#define IOMUXC_PTC12_LPUART7_CTS_B                             0x40AC0030, 0x4, 0x40AC0268, 0x1, 0x40AC0030
+#define IOMUXC_PTC12_LPI2C7_SCL                                0x40AC0030, 0x5, 0x40AC0308, 0x1, 0x40AC0030
+#define IOMUXC_PTC12_TPM7_CH5                                  0x40AC0030, 0x6, 0x40AC02F0, 0x1, 0x40AC0030
+#define IOMUXC_PTC12_FB_AD12                                   0x40AC0030, 0x9, 0x00000000, 0x0, 0x40AC0030
+#define IOMUXC_PTC12_TRACE_D3                                  0x40AC0030, 0xA, 0x00000000, 0x0, 0x40AC0030
+#define IOMUXC_PTC13_PTC13                                     0x40AC0034, 0x1, 0x00000000, 0x0, 0x40AC0034
+#define IOMUXC_PTC13_FXIO1_D9                                  0x40AC0034, 0x2, 0x40AC0228, 0x1, 0x40AC0034
+#define IOMUXC_PTC13_LPSPI3_PCS2                               0x40AC0034, 0x3, 0x40AC0318, 0x1, 0x40AC0034
+#define IOMUXC_PTC13_LPUART7_RTS_B                             0x40AC0034, 0x4, 0x00000000, 0x0, 0x40AC0034
+#define IOMUXC_PTC13_LPI2C7_SDA                                0x40AC0034, 0x5, 0x40AC030C, 0x1, 0x40AC0034
+#define IOMUXC_PTC13_TPM7_CLKIN                                0x40AC0034, 0x6, 0x40AC02F4, 0x1, 0x40AC0034
+#define IOMUXC_PTC13_FB_AD13                                   0x40AC0034, 0x9, 0x00000000, 0x0, 0x40AC0034
+#define IOMUXC_PTC13_TRACE_D2                                  0x40AC0034, 0xA, 0x00000000, 0x0, 0x40AC0034
+#define IOMUXC_PTC13_USB0_ID                                   0x40AC0034, 0xB, 0x40AC0338, 0x1, 0x40AC0034
+#define IOMUXC_PTC14_PTC14                                     0x40AC0038, 0x1, 0x00000000, 0x0, 0x40AC0038
+#define IOMUXC_PTC14_FXIO1_D10                                 0x40AC0038, 0x2, 0x40AC022C, 0x1, 0x40AC0038
+#define IOMUXC_PTC14_LPSPI3_PCS3                               0x40AC0038, 0x3, 0x40AC031C, 0x1, 0x40AC0038
+#define IOMUXC_PTC14_LPUART7_TX                                0x40AC0038, 0x4, 0x40AC0270, 0x1, 0x40AC0038
+#define IOMUXC_PTC14_LPI2C7_HREQ                               0x40AC0038, 0x5, 0x40AC0304, 0x1, 0x40AC0038
+#define IOMUXC_PTC14_TPM7_CH0                                  0x40AC0038, 0x6, 0x40AC02DC, 0x1, 0x40AC0038
+#define IOMUXC_PTC14_FB_AD14                                   0x40AC0038, 0x9, 0x00000000, 0x0, 0x40AC0038
+#define IOMUXC_PTC14_TRACE_D1                                  0x40AC0038, 0xA, 0x00000000, 0x0, 0x40AC0038
+#define IOMUXC_PTC15_PTC15                                     0x40AC003C, 0x1, 0x00000000, 0x0, 0x40AC003C
+#define IOMUXC_PTC15_FXIO1_D11                                 0x40AC003C, 0x2, 0x40AC0230, 0x1, 0x40AC003C
+#define IOMUXC_PTC15_LPUART7_RX                                0x40AC003C, 0x4, 0x40AC026C, 0x1, 0x40AC003C
+#define IOMUXC_PTC15_TPM7_CH1                                  0x40AC003C, 0x6, 0x40AC02E0, 0x1, 0x40AC003C
+#define IOMUXC_PTC15_FB_AD15                                   0x40AC003C, 0x9, 0x00000000, 0x0, 0x40AC003C
+#define IOMUXC_PTC15_TRACE_D0                                  0x40AC003C, 0xA, 0x00000000, 0x0, 0x40AC003C
+#define IOMUXC_PTC16_PTC16                                     0x40AC0040, 0x1, 0x00000000, 0x0, 0x40AC0040
+#define IOMUXC_PTC16_FXIO1_D12                                 0x40AC0040, 0x2, 0x40AC0234, 0x1, 0x40AC0040
+#define IOMUXC_PTC16_LPSPI3_SIN                                0x40AC0040, 0x3, 0x40AC0324, 0x1, 0x40AC0040
+#define IOMUXC_PTC16_TPM7_CH2                                  0x40AC0040, 0x6, 0x40AC02E4, 0x1, 0x40AC0040
+#define IOMUXC_PTC16_FB_ALE_FB_CS1_B_FB_TS_B                   0x40AC0040, 0x9, 0x00000000, 0x0, 0x40AC0040
+#define IOMUXC_PTC16_TRACE_CLKOUT                              0x40AC0040, 0xA, 0x00000000, 0x0, 0x40AC0040
+#define IOMUXC_PTC16_USB1_OC2                                  0x40AC0040, 0xB, 0x40AC0334, 0x1, 0x40AC0040
+#define IOMUXC_PTC17_PTC17                                     0x40AC0044, 0x1, 0x00000000, 0x0, 0x40AC0044
+#define IOMUXC_PTC17_FXIO1_D13                                 0x40AC0044, 0x2, 0x40AC0238, 0x1, 0x40AC0044
+#define IOMUXC_PTC17_LPSPI3_SOUT                               0x40AC0044, 0x3, 0x40AC0328, 0x1, 0x40AC0044
+#define IOMUXC_PTC17_TPM6_CLKIN                                0x40AC0044, 0x6, 0x40AC02D8, 0x1, 0x40AC0044
+#define IOMUXC_PTC17_FB_CS0_B                                  0x40AC0044, 0x9, 0x00000000, 0x0, 0x40AC0044
+#define IOMUXC_PTC18_PTC18                                     0x40AC0048, 0x1, 0x00000000, 0x0, 0x40AC0048
+#define IOMUXC_PTC18_FXIO1_D14                                 0x40AC0048, 0x2, 0x40AC023C, 0x1, 0x40AC0048
+#define IOMUXC_PTC18_LPSPI3_SCK                                0x40AC0048, 0x3, 0x40AC0320, 0x1, 0x40AC0048
+#define IOMUXC_PTC18_TPM6_CH0                                  0x40AC0048, 0x6, 0x40AC02D0, 0x1, 0x40AC0048
+#define IOMUXC_PTC18_FB_OE_B                                   0x40AC0048, 0x9, 0x00000000, 0x0, 0x40AC0048
+#define IOMUXC_PTC18_USB0_ID                                   0x40AC0048, 0xB, 0x40AC0338, 0x2, 0x40AC0048
+#define IOMUXC_PTC18_VIU_DE                                    0x40AC0048, 0xC, 0x40AC033C, 0x1, 0x40AC0048
+#define IOMUXC_PTC19_PTC19                                     0x40AC004C, 0x1, 0x00000000, 0x0, 0x40AC004C
+#define IOMUXC_PTC19_FXIO1_D15                                 0x40AC004C, 0x2, 0x40AC0240, 0x1, 0x40AC004C
+#define IOMUXC_PTC19_LPSPI3_PCS0                               0x40AC004C, 0x3, 0x40AC0310, 0x1, 0x40AC004C
+#define IOMUXC_PTC19_TPM6_CH1                                  0x40AC004C, 0x6, 0x40AC02D4, 0x1, 0x40AC004C
+#define IOMUXC_PTC19_FB_A16                                    0x40AC004C, 0x9, 0x00000000, 0x0, 0x40AC004C
+#define IOMUXC_PTC19_USB0_ID                                   0x40AC004C, 0xA, 0x40AC0338, 0x3, 0x40AC004C
+#define IOMUXC_PTC19_USB1_PWR2                                 0x40AC004C, 0xB, 0x00000000, 0x0, 0x40AC004C
+#define IOMUXC_PTC19_VIU_DE                                    0x40AC004C, 0xC, 0x40AC033C, 0x3, 0x40AC004C
+#define IOMUXC_PTD0_PTD0                                       0x40AC0080, 0x1, 0x00000000, 0x0, 0x40AC0080
+#define IOMUXC_PTD0_SDHC0_RESET_B                              0x40AC0080, 0x8, 0x00000000, 0x0, 0x40AC0080
+#define IOMUXC_PTD1_PTD1                                       0x40AC0084, 0x1, 0x00000000, 0x0, 0x40AC0084
+#define IOMUXC_PTD1_SDHC0_CMD                                  0x40AC0084, 0x8, 0x00000000, 0x0, 0x40AC0084
+#define IOMUXC_PTD2_PTD2                                       0x40AC0088, 0x1, 0x00000000, 0x0, 0x40AC0088
+#define IOMUXC_PTD2_SDHC0_CLK                                  0x40AC0088, 0x8, 0x00000000, 0x0, 0x40AC0088
+#define IOMUXC_PTD3_PTD3                                       0x40AC008C, 0x1, 0x00000000, 0x0, 0x40AC008C
+#define IOMUXC_PTD3_SDHC0_D7                                   0x40AC008C, 0x8, 0x00000000, 0x0, 0x40AC008C
+#define IOMUXC_PTD4_PTD4                                       0x40AC0090, 0x1, 0x00000000, 0x0, 0x40AC0090
+#define IOMUXC_PTD4_SDHC0_D6                                   0x40AC0090, 0x8, 0x00000000, 0x0, 0x40AC0090
+#define IOMUXC_PTD5_PTD5                                       0x40AC0094, 0x1, 0x00000000, 0x0, 0x40AC0094
+#define IOMUXC_PTD5_SDHC0_D5                                   0x40AC0094, 0x8, 0x00000000, 0x0, 0x40AC0094
+#define IOMUXC_PTD6_PTD6                                       0x40AC0098, 0x1, 0x00000000, 0x0, 0x40AC0098
+#define IOMUXC_PTD6_SDHC0_D4                                   0x40AC0098, 0x8, 0x00000000, 0x0, 0x40AC0098
+#define IOMUXC_PTD7_PTD7                                       0x40AC009C, 0x1, 0x00000000, 0x0, 0x40AC009C
+#define IOMUXC_PTD7_SDHC0_D3                                   0x40AC009C, 0x8, 0x00000000, 0x0, 0x40AC009C
+#define IOMUXC_PTD8_PTD8                                       0x40AC00A0, 0x1, 0x00000000, 0x0, 0x40AC00A0
+#define IOMUXC_PTD8_TPM4_CLKIN                                 0x40AC00A0, 0x6, 0x40AC0298, 0x2, 0x40AC00A0
+#define IOMUXC_PTD8_SDHC0_D2                                   0x40AC00A0, 0x8, 0x00000000, 0x0, 0x40AC00A0
+#define IOMUXC_PTD9_PTD9                                       0x40AC00A4, 0x1, 0x00000000, 0x0, 0x40AC00A4
+#define IOMUXC_PTD9_TPM4_CH0                                   0x40AC00A4, 0x6, 0x40AC0280, 0x2, 0x40AC00A4
+#define IOMUXC_PTD9_SDHC0_D1                                   0x40AC00A4, 0x8, 0x00000000, 0x0, 0x40AC00A4
+#define IOMUXC_PTD10_PTD10                                     0x40AC00A8, 0x1, 0x00000000, 0x0, 0x40AC00A8
+#define IOMUXC_PTD10_TPM4_CH1                                  0x40AC00A8, 0x6, 0x40AC0284, 0x2, 0x40AC00A8
+#define IOMUXC_PTD10_SDHC0_D0                                  0x40AC00A8, 0x8, 0x00000000, 0x0, 0x40AC00A8
+#define IOMUXC_PTD11_PTD11                                     0x40AC00AC, 0x1, 0x00000000, 0x0, 0x40AC00AC
+#define IOMUXC_PTD11_TPM4_CH2                                  0x40AC00AC, 0x6, 0x40AC0288, 0x2, 0x40AC00AC
+#define IOMUXC_PTD11_SDHC0_DQS                                 0x40AC00AC, 0x8, 0x00000000, 0x0, 0x40AC00AC
+#define IOMUXC_PTE0_PTE0                                       0x40AC0100, 0x1, 0x00000000, 0x0, 0x40AC0100
+#define IOMUXC_PTE0_FXIO1_D31                                  0x40AC0100, 0x2, 0x00000000, 0x0, 0x40AC0100
+#define IOMUXC_PTE0_LPSPI2_PCS1                                0x40AC0100, 0x3, 0x40AC02A0, 0x2, 0x40AC0100
+#define IOMUXC_PTE0_LPUART4_CTS_B                              0x40AC0100, 0x4, 0x40AC0244, 0x2, 0x40AC0100
+#define IOMUXC_PTE0_LPI2C4_SCL                                 0x40AC0100, 0x5, 0x40AC0278, 0x2, 0x40AC0100
+#define IOMUXC_PTE0_SDHC1_D1                                   0x40AC0100, 0x8, 0x00000000, 0x0, 0x40AC0100
+#define IOMUXC_PTE0_FB_A25                                     0x40AC0100, 0x9, 0x00000000, 0x0, 0x40AC0100
+#define IOMUXC_PTE1_PTE1                                       0x40AC0104, 0x1, 0x00000000, 0x0, 0x40AC0104
+#define IOMUXC_PTE1_FXIO1_D30                                  0x40AC0104, 0x2, 0x00000000, 0x0, 0x40AC0104
+#define IOMUXC_PTE1_LPSPI2_PCS2                                0x40AC0104, 0x3, 0x40AC02A4, 0x2, 0x40AC0104
+#define IOMUXC_PTE1_LPUART4_RTS_B                              0x40AC0104, 0x4, 0x00000000, 0x0, 0x40AC0104
+#define IOMUXC_PTE1_LPI2C4_SDA                                 0x40AC0104, 0x5, 0x40AC027C, 0x2, 0x40AC0104
+#define IOMUXC_PTE1_SDHC1_D0                                   0x40AC0104, 0x8, 0x00000000, 0x0, 0x40AC0104
+#define IOMUXC_PTE1_FB_A26                                     0x40AC0104, 0x9, 0x00000000, 0x0, 0x40AC0104
+#define IOMUXC_PTE2_PTE2                                       0x40AC0108, 0x1, 0x00000000, 0x0, 0x40AC0108
+#define IOMUXC_PTE2_FXIO1_D29                                  0x40AC0108, 0x2, 0x00000000, 0x0, 0x40AC0108
+#define IOMUXC_PTE2_LPSPI2_PCS3                                0x40AC0108, 0x3, 0x40AC02A8, 0x2, 0x40AC0108
+#define IOMUXC_PTE2_LPUART4_TX                                 0x40AC0108, 0x4, 0x40AC024C, 0x2, 0x40AC0108
+#define IOMUXC_PTE2_LPI2C4_HREQ                                0x40AC0108, 0x5, 0x40AC0274, 0x2, 0x40AC0108
+#define IOMUXC_PTE2_SDHC1_CLK                                  0x40AC0108, 0x8, 0x00000000, 0x0, 0x40AC0108
+#define IOMUXC_PTE3_PTE3                                       0x40AC010C, 0x1, 0x00000000, 0x0, 0x40AC010C
+#define IOMUXC_PTE3_FXIO1_D28                                  0x40AC010C, 0x2, 0x00000000, 0x0, 0x40AC010C
+#define IOMUXC_PTE3_LPUART4_RX                                 0x40AC010C, 0x4, 0x40AC0248, 0x2, 0x40AC010C
+#define IOMUXC_PTE3_TPM5_CH1                                   0x40AC010C, 0x6, 0x40AC02C8, 0x2, 0x40AC010C
+#define IOMUXC_PTE3_SDHC1_CMD                                  0x40AC010C, 0x8, 0x00000000, 0x0, 0x40AC010C
+#define IOMUXC_PTE4_PTE4                                       0x40AC0110, 0x1, 0x00000000, 0x0, 0x40AC0110
+#define IOMUXC_PTE4_FXIO1_D27                                  0x40AC0110, 0x2, 0x00000000, 0x0, 0x40AC0110
+#define IOMUXC_PTE4_LPSPI2_SIN                                 0x40AC0110, 0x3, 0x40AC02B0, 0x2, 0x40AC0110
+#define IOMUXC_PTE4_LPUART5_CTS_B                              0x40AC0110, 0x4, 0x40AC0250, 0x2, 0x40AC0110
+#define IOMUXC_PTE4_LPI2C5_SCL                                 0x40AC0110, 0x5, 0x40AC02BC, 0x2, 0x40AC0110
+#define IOMUXC_PTE4_TPM5_CLKIN                                 0x40AC0110, 0x6, 0x40AC02CC, 0x2, 0x40AC0110
+#define IOMUXC_PTE4_SDHC1_D3                                   0x40AC0110, 0x8, 0x00000000, 0x0, 0x40AC0110
+#define IOMUXC_PTE5_PTE5                                       0x40AC0114, 0x1, 0x00000000, 0x0, 0x40AC0114
+#define IOMUXC_PTE5_FXIO1_D26                                  0x40AC0114, 0x2, 0x00000000, 0x0, 0x40AC0114
+#define IOMUXC_PTE5_LPSPI2_SOUT                                0x40AC0114, 0x3, 0x40AC02B4, 0x2, 0x40AC0114
+#define IOMUXC_PTE5_LPUART5_RTS_B                              0x40AC0114, 0x4, 0x00000000, 0x0, 0x40AC0114
+#define IOMUXC_PTE5_LPI2C5_SDA                                 0x40AC0114, 0x5, 0x40AC02C0, 0x2, 0x40AC0114
+#define IOMUXC_PTE5_TPM5_CH0                                   0x40AC0114, 0x6, 0x40AC02C4, 0x2, 0x40AC0114
+#define IOMUXC_PTE5_SDHC1_D2                                   0x40AC0114, 0x8, 0x00000000, 0x0, 0x40AC0114
+#define IOMUXC_PTE5_VIU_DE                                     0x40AC0114, 0xC, 0x40AC033C, 0x2, 0x40AC0114
+#define IOMUXC_PTE6_PTE6                                       0x40AC0118, 0x1, 0x00000000, 0x0, 0x40AC0118
+#define IOMUXC_PTE6_FXIO1_D25                                  0x40AC0118, 0x2, 0x00000000, 0x0, 0x40AC0118
+#define IOMUXC_PTE6_LPSPI2_SCK                                 0x40AC0118, 0x3, 0x40AC02AC, 0x2, 0x40AC0118
+#define IOMUXC_PTE6_LPUART5_TX                                 0x40AC0118, 0x4, 0x40AC0258, 0x2, 0x40AC0118
+#define IOMUXC_PTE6_LPI2C5_HREQ                                0x40AC0118, 0x5, 0x40AC02B8, 0x2, 0x40AC0118
+#define IOMUXC_PTE6_TPM7_CH3                                   0x40AC0118, 0x6, 0x40AC02E8, 0x2, 0x40AC0118
+#define IOMUXC_PTE6_SDHC1_D4                                   0x40AC0118, 0x8, 0x00000000, 0x0, 0x40AC0118
+#define IOMUXC_PTE6_FB_A17                                     0x40AC0118, 0x9, 0x00000000, 0x0, 0x40AC0118
+#define IOMUXC_PTE6_USB0_OC                                    0x40AC0118, 0xB, 0x40AC0330, 0x1, 0x40AC0118
+#define IOMUXC_PTE7_PTE7                                       0x40AC011C, 0x1, 0x00000000, 0x0, 0x40AC011C
+#define IOMUXC_PTE7_FXIO1_D24                                  0x40AC011C, 0x2, 0x00000000, 0x0, 0x40AC011C
+#define IOMUXC_PTE7_LPSPI2_PCS0                                0x40AC011C, 0x3, 0x40AC029C, 0x2, 0x40AC011C
+#define IOMUXC_PTE7_LPUART5_RX                                 0x40AC011C, 0x4, 0x40AC0254, 0x2, 0x40AC011C
+#define IOMUXC_PTE7_TPM7_CH4                                   0x40AC011C, 0x6, 0x40AC02EC, 0x2, 0x40AC011C
+#define IOMUXC_PTE7_SDHC1_D5                                   0x40AC011C, 0x8, 0x00000000, 0x0, 0x40AC011C
+#define IOMUXC_PTE7_FB_A18                                     0x40AC011C, 0x9, 0x00000000, 0x0, 0x40AC011C
+#define IOMUXC_PTE7_TRACE_D7                                   0x40AC011C, 0xA, 0x00000000, 0x0, 0x40AC011C
+#define IOMUXC_PTE7_USB0_PWR                                   0x40AC011C, 0xB, 0x00000000, 0x0, 0x40AC011C
+#define IOMUXC_PTE7_VIU_FID                                    0x40AC011C, 0xC, 0x00000000, 0x0, 0x40AC011C
+#define IOMUXC_PTE8_PTE8                                       0x40AC0120, 0x1, 0x00000000, 0x0, 0x40AC0120
+#define IOMUXC_PTE8_TRACE_D6                                   0x40AC0120, 0xA, 0x00000000, 0x0, 0x40AC0120
+#define IOMUXC_PTE8_VIU_D16                                    0x40AC0120, 0xC, 0x00000000, 0x0, 0x40AC0120
+#define IOMUXC_PTE8_FXIO1_D23                                  0x40AC0120, 0x2, 0x00000000, 0x0, 0x40AC0120
+#define IOMUXC_PTE8_LPSPI3_PCS1                                0x40AC0120, 0x3, 0x40AC0314, 0x2, 0x40AC0120
+#define IOMUXC_PTE8_LPUART6_CTS_B                              0x40AC0120, 0x4, 0x40AC025C, 0x2, 0x40AC0120
+#define IOMUXC_PTE8_LPI2C6_SCL                                 0x40AC0120, 0x5, 0x40AC02FC, 0x2, 0x40AC0120
+#define IOMUXC_PTE8_TPM7_CH5                                   0x40AC0120, 0x6, 0x40AC02F0, 0x2, 0x40AC0120
+#define IOMUXC_PTE8_SDHC1_WP                                   0x40AC0120, 0x7, 0x40AC0200, 0x1, 0x40AC0120
+#define IOMUXC_PTE8_SDHC1_D6                                   0x40AC0120, 0x8, 0x00000000, 0x0, 0x40AC0120
+#define IOMUXC_PTE8_FB_CS3_B_FB_BE7_0_BLS31_24_B               0x40AC0120, 0x9, 0x00000000, 0x0, 0x40AC0120
+#define IOMUXC_PTE9_PTE9                                       0x40AC0124, 0x1, 0x00000000, 0x0, 0x40AC0124
+#define IOMUXC_PTE9_TRACE_D5                                   0x40AC0124, 0xA, 0x00000000, 0x0, 0x40AC0124
+#define IOMUXC_PTE9_VIU_D17                                    0x40AC0124, 0xC, 0x00000000, 0x0, 0x40AC0124
+#define IOMUXC_PTE9_FXIO1_D22                                  0x40AC0124, 0x2, 0x00000000, 0x0, 0x40AC0124
+#define IOMUXC_PTE9_LPSPI3_PCS2                                0x40AC0124, 0x3, 0x40AC0318, 0x2, 0x40AC0124
+#define IOMUXC_PTE9_LPUART6_RTS_B                              0x40AC0124, 0x4, 0x00000000, 0x0, 0x40AC0124
+#define IOMUXC_PTE9_LPI2C6_SDA                                 0x40AC0124, 0x5, 0x40AC0300, 0x2, 0x40AC0124
+#define IOMUXC_PTE9_TPM7_CLKIN                                 0x40AC0124, 0x6, 0x40AC02F4, 0x2, 0x40AC0124
+#define IOMUXC_PTE9_SDHC1_CD                                   0x40AC0124, 0x7, 0x40AC032C, 0x1, 0x40AC0124
+#define IOMUXC_PTE9_SDHC1_D7                                   0x40AC0124, 0x8, 0x00000000, 0x0, 0x40AC0124
+#define IOMUXC_PTE9_FB_TBST_B_FB_CS2_B_FB_BE15_8_BLS23_16_B    0x40AC0124, 0x9, 0x00000000, 0x0, 0x40AC0124
+#define IOMUXC_PTE10_PTE10                                     0x40AC0128, 0x1, 0x00000000, 0x0, 0x40AC0128
+#define IOMUXC_PTE10_TRACE_D4                                  0x40AC0128, 0xA, 0x00000000, 0x0, 0x40AC0128
+#define IOMUXC_PTE10_VIU_D18                                   0x40AC0128, 0xC, 0x00000000, 0x0, 0x40AC0128
+#define IOMUXC_PTE10_FXIO1_D21                                 0x40AC0128, 0x2, 0x00000000, 0x0, 0x40AC0128
+#define IOMUXC_PTE10_LPSPI3_PCS3                               0x40AC0128, 0x3, 0x40AC031C, 0x2, 0x40AC0128
+#define IOMUXC_PTE10_LPUART6_TX                                0x40AC0128, 0x4, 0x40AC0264, 0x2, 0x40AC0128
+#define IOMUXC_PTE10_LPI2C6_HREQ                               0x40AC0128, 0x5, 0x40AC02F8, 0x2, 0x40AC0128
+#define IOMUXC_PTE10_TPM7_CH0                                  0x40AC0128, 0x6, 0x40AC02DC, 0x2, 0x40AC0128
+#define IOMUXC_PTE10_SDHC1_VS                                  0x40AC0128, 0x7, 0x00000000, 0x0, 0x40AC0128
+#define IOMUXC_PTE10_SDHC1_DQS                                 0x40AC0128, 0x8, 0x00000000, 0x0, 0x40AC0128
+#define IOMUXC_PTE10_FB_A19                                    0x40AC0128, 0x9, 0x00000000, 0x0, 0x40AC0128
+#define IOMUXC_PTE11_PTE11                                     0x40AC012C, 0x1, 0x00000000, 0x0, 0x40AC012C
+#define IOMUXC_PTE11_TRACE_D3                                  0x40AC012C, 0xA, 0x00000000, 0x0, 0x40AC012C
+#define IOMUXC_PTE11_VIU_D19                                   0x40AC012C, 0xC, 0x00000000, 0x0, 0x40AC012C
+#define IOMUXC_PTE11_FXIO1_D20                                 0x40AC012C, 0x2, 0x00000000, 0x0, 0x40AC012C
+#define IOMUXC_PTE11_LPUART6_RX                                0x40AC012C, 0x4, 0x40AC0260, 0x2, 0x40AC012C
+#define IOMUXC_PTE11_TPM7_CH1                                  0x40AC012C, 0x6, 0x40AC02E0, 0x2, 0x40AC012C
+#define IOMUXC_PTE11_SDHC1_RESET_B                             0x40AC012C, 0x8, 0x00000000, 0x0, 0x40AC012C
+#define IOMUXC_PTE11_FB_A20                                    0x40AC012C, 0x9, 0x00000000, 0x0, 0x40AC012C
+#define IOMUXC_PTE12_PTE12                                     0x40AC0130, 0x1, 0x00000000, 0x0, 0x40AC0130
+#define IOMUXC_PTE12_FXIO1_D19                                 0x40AC0130, 0x2, 0x00000000, 0x0, 0x40AC0130
+#define IOMUXC_PTE12_LPSPI3_SIN                                0x40AC0130, 0x3, 0x40AC0324, 0x2, 0x40AC0130
+#define IOMUXC_PTE12_LPUART7_CTS_B                             0x40AC0130, 0x4, 0x40AC0268, 0x2, 0x40AC0130
+#define IOMUXC_PTE12_LPI2C7_SCL                                0x40AC0130, 0x5, 0x40AC0308, 0x2, 0x40AC0130
+#define IOMUXC_PTE12_TPM7_CH2                                  0x40AC0130, 0x6, 0x40AC02E4, 0x2, 0x40AC0130
+#define IOMUXC_PTE12_SDHC1_WP                                  0x40AC0130, 0x8, 0x40AC0200, 0x2, 0x40AC0130
+#define IOMUXC_PTE12_FB_A21                                    0x40AC0130, 0x9, 0x00000000, 0x0, 0x40AC0130
+#define IOMUXC_PTE12_TRACE_D2                                  0x40AC0130, 0xA, 0x00000000, 0x0, 0x40AC0130
+#define IOMUXC_PTE12_USB1_OC2                                  0x40AC0130, 0xB, 0x40AC0334, 0x2, 0x40AC0130
+#define IOMUXC_PTE12_VIU_D20                                   0x40AC0130, 0xC, 0x00000000, 0x0, 0x40AC0130
+#define IOMUXC_PTE13_PTE13                                     0x40AC0134, 0x1, 0x00000000, 0x0, 0x40AC0134
+#define IOMUXC_PTE13_FXIO1_D18                                 0x40AC0134, 0x2, 0x00000000, 0x0, 0x40AC0134
+#define IOMUXC_PTE13_LPSPI3_SOUT                               0x40AC0134, 0x3, 0x40AC0328, 0x2, 0x40AC0134
+#define IOMUXC_PTE13_LPUART7_RTS_B                             0x40AC0134, 0x4, 0x00000000, 0x0, 0x40AC0134
+#define IOMUXC_PTE13_LPI2C7_SDA                                0x40AC0134, 0x5, 0x40AC030C, 0x2, 0x40AC0134
+#define IOMUXC_PTE13_TPM6_CLKIN                                0x40AC0134, 0x6, 0x40AC02D8, 0x2, 0x40AC0134
+#define IOMUXC_PTE13_SDHC1_CD                                  0x40AC0134, 0x8, 0x40AC032C, 0x2, 0x40AC0134
+#define IOMUXC_PTE13_FB_A22                                    0x40AC0134, 0x9, 0x00000000, 0x0, 0x40AC0134
+#define IOMUXC_PTE13_TRACE_D1                                  0x40AC0134, 0xA, 0x00000000, 0x0, 0x40AC0134
+#define IOMUXC_PTE13_USB1_PWR2                                 0x40AC0134, 0xB, 0x00000000, 0x0, 0x40AC0134
+#define IOMUXC_PTE13_VIU_D21                                   0x40AC0134, 0xC, 0x00000000, 0x0, 0x40AC0134
+#define IOMUXC_PTE14_PTE14                                     0x40AC0138, 0x1, 0x00000000, 0x0, 0x40AC0138
+#define IOMUXC_PTE14_FXIO1_D17                                 0x40AC0138, 0x2, 0x00000000, 0x0, 0x40AC0138
+#define IOMUXC_PTE14_LPSPI3_SCK                                0x40AC0138, 0x3, 0x40AC0320, 0x2, 0x40AC0138
+#define IOMUXC_PTE14_LPUART7_TX                                0x40AC0138, 0x4, 0x40AC0270, 0x2, 0x40AC0138
+#define IOMUXC_PTE14_LPI2C7_HREQ                               0x40AC0138, 0x5, 0x40AC0304, 0x2, 0x40AC0138
+#define IOMUXC_PTE14_TPM6_CH0                                  0x40AC0138, 0x6, 0x40AC02D0, 0x2, 0x40AC0138
+#define IOMUXC_PTE14_SDHC1_VS                                  0x40AC0138, 0x8, 0x00000000, 0x0, 0x40AC0138
+#define IOMUXC_PTE14_FB_A23                                    0x40AC0138, 0x9, 0x00000000, 0x0, 0x40AC0138
+#define IOMUXC_PTE14_TRACE_D0                                  0x40AC0138, 0xA, 0x00000000, 0x0, 0x40AC0138
+#define IOMUXC_PTE14_USB0_OC                                   0x40AC0138, 0xB, 0x40AC0330, 0x2, 0x40AC0138
+#define IOMUXC_PTE14_VIU_D22                                   0x40AC0138, 0xC, 0x00000000, 0x0, 0x40AC0138
+#define IOMUXC_PTE15_PTE15                                     0x40AC013C, 0x1, 0x00000000, 0x0, 0x40AC013C
+#define IOMUXC_PTE15_FXIO1_D16                                 0x40AC013C, 0x2, 0x00000000, 0x0, 0x40AC013C
+#define IOMUXC_PTE15_LPSPI3_PCS0                               0x40AC013C, 0x3, 0x40AC0310, 0x2, 0x40AC013C
+#define IOMUXC_PTE15_LPUART7_RX                                0x40AC013C, 0x4, 0x40AC026C, 0x2, 0x40AC013C
+#define IOMUXC_PTE15_TPM6_CH1                                  0x40AC013C, 0x6, 0x40AC02D4, 0x2, 0x40AC013C
+#define IOMUXC_PTE15_FB_A24                                    0x40AC013C, 0x9, 0x00000000, 0x0, 0x40AC013C
+#define IOMUXC_PTE15_TRACE_CLKOUT                              0x40AC013C, 0xA, 0x00000000, 0x0, 0x40AC013C
+#define IOMUXC_PTE15_USB0_PWR                                  0x40AC013C, 0xB, 0x00000000, 0x0, 0x40AC013C
+#define IOMUXC_PTE15_VIU_D23                                   0x40AC013C, 0xC, 0x00000000, 0x0, 0x40AC013C
+#define IOMUXC_PTF0_PTF0                                       0x40AC0180, 0x1, 0x00000000, 0x0, 0x40AC0180
+#define IOMUXC_PTF0_LPUART4_CTS_B                              0x40AC0180, 0x4, 0x40AC0244, 0x3, 0x40AC0180
+#define IOMUXC_PTF0_LPI2C4_SCL                                 0x40AC0180, 0x5, 0x40AC0278, 0x3, 0x40AC0180
+#define IOMUXC_PTF0_TPM4_CLKIN                                 0x40AC0180, 0x6, 0x40AC0298, 0x3, 0x40AC0180
+#define IOMUXC_PTF0_FB_RW_B                                    0x40AC0180, 0x9, 0x00000000, 0x0, 0x40AC0180
+#define IOMUXC_PTF0_VIU_DE                                     0x40AC0180, 0xC, 0x40AC033C, 0x0, 0x40AC0180
+#define IOMUXC_PTF1_PTF1                                       0x40AC0184, 0x1, 0x00000000, 0x0, 0x40AC0184
+#define IOMUXC_PTF1_LPUART4_RTS_B                              0x40AC0184, 0x4, 0x00000000, 0x0, 0x40AC0184
+#define IOMUXC_PTF1_LPI2C4_SDA                                 0x40AC0184, 0x5, 0x40AC027C, 0x3, 0x40AC0184
+#define IOMUXC_PTF1_TPM4_CH0                                   0x40AC0184, 0x6, 0x40AC0280, 0x3, 0x40AC0184
+#define IOMUXC_PTF1_CLKOUT                                     0x40AC0184, 0x9, 0x00000000, 0x0, 0x40AC0184
+#define IOMUXC_PTF1_VIU_HSYNC                                  0x40AC0184, 0xC, 0x00000000, 0x0, 0x40AC0184
+#define IOMUXC_PTF2_PTF2                                       0x40AC0188, 0x1, 0x00000000, 0x0, 0x40AC0188
+#define IOMUXC_PTF2_LPUART4_TX                                 0x40AC0188, 0x4, 0x40AC024C, 0x3, 0x40AC0188
+#define IOMUXC_PTF2_LPI2C4_HREQ                                0x40AC0188, 0x5, 0x40AC0274, 0x3, 0x40AC0188
+#define IOMUXC_PTF2_TPM4_CH1                                   0x40AC0188, 0x6, 0x40AC0284, 0x3, 0x40AC0188
+#define IOMUXC_PTF2_FB_TSIZ1_FB_CS5_B_FB_BE23_16_BLS15_8_B     0x40AC0188, 0x9, 0x00000000, 0x0, 0x40AC0188
+#define IOMUXC_PTF2_VIU_VSYNC                                  0x40AC0188, 0xC, 0x00000000, 0x0, 0x40AC0188
+#define IOMUXC_PTF3_PTF3                                       0x40AC018C, 0x1, 0x00000000, 0x0, 0x40AC018C
+#define IOMUXC_PTF3_LPUART4_RX                                 0x40AC018C, 0x4, 0x40AC0248, 0x3, 0x40AC018C
+#define IOMUXC_PTF3_TPM4_CH2                                   0x40AC018C, 0x6, 0x40AC0288, 0x3, 0x40AC018C
+#define IOMUXC_PTF3_FB_AD16                                    0x40AC018C, 0x9, 0x00000000, 0x0, 0x40AC018C
+#define IOMUXC_PTF3_VIU_PCLK                                   0x40AC018C, 0xC, 0x00000000, 0x0, 0x40AC018C
+#define IOMUXC_PTF4_PTF4                                       0x40AC0190, 0x1, 0x00000000, 0x0, 0x40AC0190
+#define IOMUXC_PTF4_FXIO1_D0                                   0x40AC0190, 0x2, 0x40AC0204, 0x2, 0x40AC0190
+#define IOMUXC_PTF4_LPSPI2_PCS1                                0x40AC0190, 0x3, 0x40AC02A0, 0x3, 0x40AC0190
+#define IOMUXC_PTF4_LPUART5_CTS_B                              0x40AC0190, 0x4, 0x40AC0250, 0x3, 0x40AC0190
+#define IOMUXC_PTF4_LPI2C5_SCL                                 0x40AC0190, 0x5, 0x40AC02BC, 0x3, 0x40AC0190
+#define IOMUXC_PTF4_TPM4_CH3                                   0x40AC0190, 0x6, 0x40AC028C, 0x2, 0x40AC0190
+#define IOMUXC_PTF4_FB_AD17                                    0x40AC0190, 0x9, 0x00000000, 0x0, 0x40AC0190
+#define IOMUXC_PTF4_VIU_D0                                     0x40AC0190, 0xC, 0x00000000, 0x0, 0x40AC0190
+#define IOMUXC_PTF5_PTF5                                       0x40AC0194, 0x1, 0x00000000, 0x0, 0x40AC0194
+#define IOMUXC_PTF5_FXIO1_D1                                   0x40AC0194, 0x2, 0x40AC0208, 0x2, 0x40AC0194
+#define IOMUXC_PTF5_LPSPI2_PCS2                                0x40AC0194, 0x3, 0x40AC02A4, 0x3, 0x40AC0194
+#define IOMUXC_PTF5_LPUART5_RTS_B                              0x40AC0194, 0x4, 0x00000000, 0x0, 0x40AC0194
+#define IOMUXC_PTF5_LPI2C5_SDA                                 0x40AC0194, 0x5, 0x40AC02C0, 0x3, 0x40AC0194
+#define IOMUXC_PTF5_TPM4_CH4                                   0x40AC0194, 0x6, 0x40AC0290, 0x2, 0x40AC0194
+#define IOMUXC_PTF5_FB_AD18                                    0x40AC0194, 0x9, 0x00000000, 0x0, 0x40AC0194
+#define IOMUXC_PTF5_VIU_D1                                     0x40AC0194, 0xC, 0x00000000, 0x0, 0x40AC0194
+#define IOMUXC_PTF6_PTF6                                       0x40AC0198, 0x1, 0x00000000, 0x0, 0x40AC0198
+#define IOMUXC_PTF6_FXIO1_D2                                   0x40AC0198, 0x2, 0x40AC020C, 0x2, 0x40AC0198
+#define IOMUXC_PTF6_LPSPI2_PCS3                                0x40AC0198, 0x3, 0x40AC02A8, 0x3, 0x40AC0198
+#define IOMUXC_PTF6_LPUART5_TX                                 0x40AC0198, 0x4, 0x40AC0258, 0x3, 0x40AC0198
+#define IOMUXC_PTF6_LPI2C5_HREQ                                0x40AC0198, 0x5, 0x40AC02B8, 0x3, 0x40AC0198
+#define IOMUXC_PTF6_TPM4_CH5                                   0x40AC0198, 0x6, 0x40AC0294, 0x2, 0x40AC0198
+#define IOMUXC_PTF6_FB_AD19                                    0x40AC0198, 0x9, 0x00000000, 0x0, 0x40AC0198
+#define IOMUXC_PTF6_VIU_D2                                     0x40AC0198, 0xC, 0x00000000, 0x0, 0x40AC0198
+#define IOMUXC_PTF7_PTF7                                       0x40AC019C, 0x1, 0x00000000, 0x0, 0x40AC019C
+#define IOMUXC_PTF7_FXIO1_D3                                   0x40AC019C, 0x2, 0x40AC0210, 0x2, 0x40AC019C
+#define IOMUXC_PTF7_LPUART5_RX                                 0x40AC019C, 0x4, 0x40AC0254, 0x3, 0x40AC019C
+#define IOMUXC_PTF7_TPM5_CH1                                   0x40AC019C, 0x6, 0x40AC02C8, 0x3, 0x40AC019C
+#define IOMUXC_PTF7_FB_AD20                                    0x40AC019C, 0x9, 0x00000000, 0x0, 0x40AC019C
+#define IOMUXC_PTF7_VIU_D3                                     0x40AC019C, 0xC, 0x00000000, 0x0, 0x40AC019C
+#define IOMUXC_PTF8_PTF8                                       0x40AC01A0, 0x1, 0x00000000, 0x0, 0x40AC01A0
+#define IOMUXC_PTF8_FXIO1_D4                                   0x40AC01A0, 0x2, 0x40AC0214, 0x2, 0x40AC01A0
+#define IOMUXC_PTF8_LPSPI2_SIN                                 0x40AC01A0, 0x3, 0x40AC02B0, 0x3, 0x40AC01A0
+#define IOMUXC_PTF8_LPUART6_CTS_B                              0x40AC01A0, 0x4, 0x40AC025C, 0x3, 0x40AC01A0
+#define IOMUXC_PTF8_LPI2C6_SCL                                 0x40AC01A0, 0x5, 0x40AC02FC, 0x3, 0x40AC01A0
+#define IOMUXC_PTF8_TPM5_CLKIN                                 0x40AC01A0, 0x6, 0x40AC02CC, 0x3, 0x40AC01A0
+#define IOMUXC_PTF8_FB_AD21                                    0x40AC01A0, 0x9, 0x00000000, 0x0, 0x40AC01A0
+#define IOMUXC_PTF8_USB1_CLK                                   0x40AC01A0, 0xB, 0x00000000, 0x0, 0x40AC01A0
+#define IOMUXC_PTF8_VIU_D4                                     0x40AC01A0, 0xC, 0x00000000, 0x0, 0x40AC01A0
+#define IOMUXC_PTF9_PTF9                                       0x40AC01A4, 0x1, 0x00000000, 0x0, 0x40AC01A4
+#define IOMUXC_PTF9_FXIO1_D5                                   0x40AC01A4, 0x2, 0x40AC0218, 0x2, 0x40AC01A4
+#define IOMUXC_PTF9_LPSPI2_SOUT                                0x40AC01A4, 0x3, 0x40AC02B4, 0x3, 0x40AC01A4
+#define IOMUXC_PTF9_LPUART6_RTS_B                              0x40AC01A4, 0x4, 0x00000000, 0x0, 0x40AC01A4
+#define IOMUXC_PTF9_LPI2C6_SDA                                 0x40AC01A4, 0x5, 0x40AC0300, 0x3, 0x40AC01A4
+#define IOMUXC_PTF9_TPM5_CH0                                   0x40AC01A4, 0x6, 0x40AC02C4, 0x3, 0x40AC01A4
+#define IOMUXC_PTF9_FB_AD22                                    0x40AC01A4, 0x9, 0x00000000, 0x0, 0x40AC01A4
+#define IOMUXC_PTF9_USB1_NXT                                   0x40AC01A4, 0xB, 0x00000000, 0x0, 0x40AC01A4
+#define IOMUXC_PTF9_VIU_D5                                     0x40AC01A4, 0xC, 0x00000000, 0x0, 0x40AC01A4
+#define IOMUXC_PTF10_PTF10                                     0x40AC01A8, 0x1, 0x00000000, 0x0, 0x40AC01A8
+#define IOMUXC_PTF10_FXIO1_D6                                  0x40AC01A8, 0x2, 0x40AC021C, 0x2, 0x40AC01A8
+#define IOMUXC_PTF10_LPSPI2_SCK                                0x40AC01A8, 0x3, 0x40AC02AC, 0x3, 0x40AC01A8
+#define IOMUXC_PTF10_LPUART6_TX                                0x40AC01A8, 0x4, 0x40AC0264, 0x3, 0x40AC01A8
+#define IOMUXC_PTF10_LPI2C6_HREQ                               0x40AC01A8, 0x5, 0x40AC02F8, 0x3, 0x40AC01A8
+#define IOMUXC_PTF10_TPM7_CH3                                  0x40AC01A8, 0x6, 0x40AC02E8, 0x3, 0x40AC01A8
+#define IOMUXC_PTF10_FB_AD23                                   0x40AC01A8, 0x9, 0x00000000, 0x0, 0x40AC01A8
+#define IOMUXC_PTF10_USB1_STP                                  0x40AC01A8, 0xB, 0x00000000, 0x0, 0x40AC01A8
+#define IOMUXC_PTF10_VIU_D6                                    0x40AC01A8, 0xC, 0x00000000, 0x0, 0x40AC01A8
+#define IOMUXC_PTF11_PTF11                                     0x40AC01AC, 0x1, 0x00000000, 0x0, 0x40AC01AC
+#define IOMUXC_PTF11_FXIO1_D7                                  0x40AC01AC, 0x2, 0x40AC0220, 0x2, 0x40AC01AC
+#define IOMUXC_PTF11_LPSPI2_PCS0                               0x40AC01AC, 0x3, 0x40AC029C, 0x3, 0x40AC01AC
+#define IOMUXC_PTF11_LPUART6_RX                                0x40AC01AC, 0x4, 0x40AC0260, 0x3, 0x40AC01AC
+#define IOMUXC_PTF11_TPM7_CH4                                  0x40AC01AC, 0x6, 0x40AC02EC, 0x3, 0x40AC01AC
+#define IOMUXC_PTF11_FB_CS4_B_FB_TSIZ0_FB_BE31_24_BLS7_0_B     0x40AC01AC, 0x9, 0x00000000, 0x0, 0x40AC01AC
+#define IOMUXC_PTF11_USB1_DIR                                  0x40AC01AC, 0xB, 0x00000000, 0x0, 0x40AC01AC
+#define IOMUXC_PTF11_VIU_D7                                    0x40AC01AC, 0xC, 0x00000000, 0x0, 0x40AC01AC
+#define IOMUXC_PTF12_PTF12                                     0x40AC01B0, 0x1, 0x00000000, 0x0, 0x40AC01B0
+#define IOMUXC_PTF12_FXIO1_D8                                  0x40AC01B0, 0x2, 0x40AC0224, 0x2, 0x40AC01B0
+#define IOMUXC_PTF12_LPSPI3_PCS1                               0x40AC01B0, 0x3, 0x40AC0314, 0x3, 0x40AC01B0
+#define IOMUXC_PTF12_LPUART7_CTS_B                             0x40AC01B0, 0x4, 0x40AC0268, 0x3, 0x40AC01B0
+#define IOMUXC_PTF12_LPI2C7_SCL                                0x40AC01B0, 0x5, 0x40AC0308, 0x3, 0x40AC01B0
+#define IOMUXC_PTF12_TPM7_CH5                                  0x40AC01B0, 0x6, 0x40AC02F0, 0x3, 0x40AC01B0
+#define IOMUXC_PTF12_FB_AD24                                   0x40AC01B0, 0x9, 0x00000000, 0x0, 0x40AC01B0
+#define IOMUXC_PTF12_USB1_DATA0                                0x40AC01B0, 0xB, 0x00000000, 0x0, 0x40AC01B0
+#define IOMUXC_PTF12_VIU_D8                                    0x40AC01B0, 0xC, 0x00000000, 0x0, 0x40AC01B0
+#define IOMUXC_PTF13_PTF13                                     0x40AC01B4, 0x1, 0x00000000, 0x0, 0x40AC01B4
+#define IOMUXC_PTF13_FXIO1_D9                                  0x40AC01B4, 0x2, 0x40AC0228, 0x2, 0x40AC01B4
+#define IOMUXC_PTF13_LPSPI3_PCS2                               0x40AC01B4, 0x3, 0x40AC0318, 0x3, 0x40AC01B4
+#define IOMUXC_PTF13_LPUART7_RTS_B                             0x40AC01B4, 0x4, 0x00000000, 0x0, 0x40AC01B4
+#define IOMUXC_PTF13_LPI2C7_SDA                                0x40AC01B4, 0x5, 0x40AC030C, 0x3, 0x40AC01B4
+#define IOMUXC_PTF13_TPM7_CLKIN                                0x40AC01B4, 0x6, 0x40AC02F4, 0x3, 0x40AC01B4
+#define IOMUXC_PTF13_FB_AD25                                   0x40AC01B4, 0x9, 0x00000000, 0x0, 0x40AC01B4
+#define IOMUXC_PTF13_USB1_DATA1                                0x40AC01B4, 0xB, 0x00000000, 0x0, 0x40AC01B4
+#define IOMUXC_PTF13_VIU_D9                                    0x40AC01B4, 0xC, 0x00000000, 0x0, 0x40AC01B4
+#define IOMUXC_PTF14_PTF14                                     0x40AC01B8, 0x1, 0x00000000, 0x0, 0x40AC01B8
+#define IOMUXC_PTF14_FXIO1_D10                                 0x40AC01B8, 0x2, 0x40AC022C, 0x2, 0x40AC01B8
+#define IOMUXC_PTF14_LPSPI3_PCS3                               0x40AC01B8, 0x3, 0x40AC031C, 0x3, 0x40AC01B8
+#define IOMUXC_PTF14_LPUART7_TX                                0x40AC01B8, 0x4, 0x40AC0270, 0x3, 0x40AC01B8
+#define IOMUXC_PTF14_LPI2C7_HREQ                               0x40AC01B8, 0x5, 0x40AC0304, 0x3, 0x40AC01B8
+#define IOMUXC_PTF14_TPM7_CH0                                  0x40AC01B8, 0x6, 0x40AC02DC, 0x3, 0x40AC01B8
+#define IOMUXC_PTF14_FB_AD26                                   0x40AC01B8, 0x9, 0x00000000, 0x0, 0x40AC01B8
+#define IOMUXC_PTF14_USB1_DATA2                                0x40AC01B8, 0xB, 0x00000000, 0x0, 0x40AC01B8
+#define IOMUXC_PTF14_VIU_D10                                   0x40AC01B8, 0xC, 0x00000000, 0x0, 0x40AC01B8
+#define IOMUXC_PTF15_PTF15                                     0x40AC01BC, 0x1, 0x00000000, 0x0, 0x40AC01BC
+#define IOMUXC_PTF15_FXIO1_D11                                 0x40AC01BC, 0x2, 0x40AC0230, 0x2, 0x40AC01BC
+#define IOMUXC_PTF15_LPUART7_RX                                0x40AC01BC, 0x4, 0x40AC026C, 0x3, 0x40AC01BC
+#define IOMUXC_PTF15_TPM7_CH1                                  0x40AC01BC, 0x6, 0x40AC02E0, 0x3, 0x40AC01BC
+#define IOMUXC_PTF15_FB_AD27                                   0x40AC01BC, 0x9, 0x00000000, 0x0, 0x40AC01BC
+#define IOMUXC_PTF15_USB1_DATA3                                0x40AC01BC, 0xB, 0x00000000, 0x0, 0x40AC01BC
+#define IOMUXC_PTF15_VIU_D11                                   0x40AC01BC, 0xC, 0x00000000, 0x0, 0x40AC01BC
+#define IOMUXC_PTF16_PTF16                                     0x40AC01C0, 0x1, 0x00000000, 0x0, 0x40AC01C0
+#define IOMUXC_PTF16_USB1_DATA4                                0x40AC01C0, 0xB, 0x00000000, 0x0, 0x40AC01C0
+#define IOMUXC_PTF16_VIU_D12                                   0x40AC01C0, 0xC, 0x00000000, 0x0, 0x40AC01C0
+#define IOMUXC_PTF16_FXIO1_D12                                 0x40AC01C0, 0x2, 0x40AC0234, 0x2, 0x40AC01C0
+#define IOMUXC_PTF16_LPSPI3_SIN                                0x40AC01C0, 0x3, 0x40AC0324, 0x3, 0x40AC01C0
+#define IOMUXC_PTF16_TPM7_CH2                                  0x40AC01C0, 0x6, 0x40AC02E4, 0x3, 0x40AC01C0
+#define IOMUXC_PTF16_FB_AD28                                   0x40AC01C0, 0x9, 0x00000000, 0x0, 0x40AC01C0
+#define IOMUXC_PTF17_PTF17                                     0x40AC01C4, 0x1, 0x00000000, 0x0, 0x40AC01C4
+#define IOMUXC_PTF17_USB1_DATA5                                0x40AC01C4, 0xB, 0x00000000, 0x0, 0x40AC01C4
+#define IOMUXC_PTF17_VIU_D13                                   0x40AC01C4, 0xC, 0x00000000, 0x0, 0x40AC01C4
+#define IOMUXC_PTF17_FXIO1_D13                                 0x40AC01C4, 0x2, 0x40AC0238, 0x2, 0x40AC01C4
+#define IOMUXC_PTF17_LPSPI3_SOUT                               0x40AC01C4, 0x3, 0x40AC0328, 0x3, 0x40AC01C4
+#define IOMUXC_PTF17_TPM6_CLKIN                                0x40AC01C4, 0x6, 0x40AC02D8, 0x3, 0x40AC01C4
+#define IOMUXC_PTF17_FB_AD29                                   0x40AC01C4, 0x9, 0x00000000, 0x0, 0x40AC01C4
+#define IOMUXC_PTF18_PTF18                                     0x40AC01C8, 0x1, 0x00000000, 0x0, 0x40AC01C8
+#define IOMUXC_PTF18_USB1_DATA6                                0x40AC01C8, 0xB, 0x00000000, 0x0, 0x40AC01C8
+#define IOMUXC_PTF18_VIU_D14                                   0x40AC01C8, 0xC, 0x00000000, 0x0, 0x40AC01C8
+#define IOMUXC_PTF18_FXIO1_D14                                 0x40AC01C8, 0x2, 0x40AC023C, 0x2, 0x40AC01C8
+#define IOMUXC_PTF18_LPSPI3_SCK                                0x40AC01C8, 0x3, 0x40AC0320, 0x3, 0x40AC01C8
+#define IOMUXC_PTF18_TPM6_CH0                                  0x40AC01C8, 0x6, 0x40AC02D0, 0x3, 0x40AC01C8
+#define IOMUXC_PTF18_FB_AD30                                   0x40AC01C8, 0x9, 0x00000000, 0x0, 0x40AC01C8
+#define IOMUXC_PTF19_PTF19                                     0x40AC01CC, 0x1, 0x00000000, 0x0, 0x40AC01CC
+#define IOMUXC_PTF19_USB1_DATA7                                0x40AC01CC, 0xB, 0x00000000, 0x0, 0x40AC01CC
+#define IOMUXC_PTF19_VIU_D15                                   0x40AC01CC, 0xC, 0x00000000, 0x0, 0x40AC01CC
+#define IOMUXC_PTF19_FXIO1_D15                                 0x40AC01CC, 0x2, 0x40AC0240, 0x2, 0x40AC01CC
+#define IOMUXC_PTF19_LPSPI3_PCS0                               0x40AC01CC, 0x3, 0x40AC0310, 0x3, 0x40AC01CC
+#define IOMUXC_PTF19_TPM6_CH1                                  0x40AC01CC, 0x6, 0x40AC02D4, 0x3, 0x40AC01CC
+#define IOMUXC_PTF19_FB_AD31                                   0x40AC01CC, 0x9, 0x00000000, 0x0, 0x40AC01CC
+#define IOMUXC_RESET0_b_RESET0_B                               0x4103D294, 0x0, 0x00000000, 0x0, 0x4103D294
+#define IOMUXC_RESET1_b_RESET1_B                               0x40AC039C, 0x0, 0x00000000, 0x0, 0x40AC039C
+#define IOMUXC_DDR_DQ0                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0000
+#define IOMUXC_DDR_DQ1                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0004
+#define IOMUXC_DDR_DQ2                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0008
+#define IOMUXC_DDR_DQ3                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD000C
+#define IOMUXC_DDR_DQ4                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0010
+#define IOMUXC_DDR_DQ5                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0014
+#define IOMUXC_DDR_DQ6                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0018
+#define IOMUXC_DDR_DQ7                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD001C
+#define IOMUXC_DDR_DQ8                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0020
+#define IOMUXC_DDR_DQ9                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0024
+#define IOMUXC_DDR_DQ10                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0028
+#define IOMUXC_DDR_DQ11                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD002C
+#define IOMUXC_DDR_DQ12                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0030
+#define IOMUXC_DDR_DQ13                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0034
+#define IOMUXC_DDR_DQ14                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0038
+#define IOMUXC_DDR_DQ15                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD003C
+#define IOMUXC_DDR_DQ16                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0040
+#define IOMUXC_DDR_DQ17                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0044
+#define IOMUXC_DDR_DQ18                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0048
+#define IOMUXC_DDR_DQ19                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD004C
+#define IOMUXC_DDR_DQ20                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0050
+#define IOMUXC_DDR_DQ21                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0054
+#define IOMUXC_DDR_DQ22                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0058
+#define IOMUXC_DDR_DQ23                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD005C
+#define IOMUXC_DDR_DQ24                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0060
+#define IOMUXC_DDR_DQ25                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0064
+#define IOMUXC_DDR_DQ26                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0068
+#define IOMUXC_DDR_DQ27                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD006C
+#define IOMUXC_DDR_DQ28                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0070
+#define IOMUXC_DDR_DQ29                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0074
+#define IOMUXC_DDR_DQ30                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0078
+#define IOMUXC_DDR_DQ31                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD007C
+#define IOMUXC_DDR_DQS0                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0080
+#define IOMUXC_DDR_DQS1                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0084
+#define IOMUXC_DDR_DQS2                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0088
+#define IOMUXC_DDR_DQS3                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD008C
+#define IOMUXC_DDR_DQM0                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0090
+#define IOMUXC_DDR_DQM1                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0094
+#define IOMUXC_DDR_DQM2                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD0098
+#define IOMUXC_DDR_DQM3                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD009C
+#define IOMUXC_DDR_CA0                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00A0
+#define IOMUXC_DDR_CA1                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00A4
+#define IOMUXC_DDR_CA2                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00A8
+#define IOMUXC_DDR_CA3                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00AC
+#define IOMUXC_DDR_CA4                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00B0
+#define IOMUXC_DDR_CA5                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00B4
+#define IOMUXC_DDR_CA6                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00B8
+#define IOMUXC_DDR_CA7                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00BC
+#define IOMUXC_DDR_CA8                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00C0
+#define IOMUXC_DDR_CA9                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00C4
+#define IOMUXC_DDR_CS0_B                                       0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00C8
+#define IOMUXC_DDR_CS1_B                                       0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00CC
+#define IOMUXC_DDR_CKE0                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00D0
+#define IOMUXC_DDR_CKE1                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00D4
+#define IOMUXC_DDR_CLK0                                        0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00D8
+#define IOMUXC_DDR_ODT                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00DC
+#define IOMUXC_DDR_ZQ0                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00E0
+#define IOMUXC_DDR_ZQ1                                         0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00E4
+#define IOMUXC_HSIC_DATA                                       0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00E8
+#define IOMUXC_HSIC_STROBE                                     0x00000000, 0x0, 0x00000000, 0x0, 0x40AD00EC
+/*@}*/
+
+#if defined(__cplusplus)
+extern "C" {
+#endif /*__cplusplus */
+
+/*! @name Configuration */
+/*@{*/
+
+/*!
+ * @brief Sets the IOMUXC pin mux mode.
+ * @note The first five parameters can be filled with the pin function ID macros.
+ *
+ * This is an example to set the PTA2 as the lpuart0_tx:
+ * @code
+ * IOMUXC_SetPinMux(IOMUXC_PTA2_LPUART0_TX, 0);
+ * @endcode
+ *
+ * This is an example to set the PTB6 as i2s1_txd3:
+ * @code
+ * IOMUXC_SetPinMux(IOMUXC_PTB6_I2S1_TXD3, 0);
+ * @endcode
+ *
+ * @param muxRegister    The pin mux register.
+ * @param muxMode        The pin mux mode.
+ * @param inputRegister  The select input register.
+ * @param inputDaisy     The input daisy.
+ * @param configRegister The config register.
+ * @param inputInv       The pad->module input inversion.
+ */
+static inline void IOMUXC_SetPinMux(uint32_t muxRegister,
+                                    uint32_t muxMode,
+                                    uint32_t inputRegister,
+                                    uint32_t inputDaisy,
+                                    uint32_t configRegister,
+                                    uint32_t inputInv)
+{
+    if (muxRegister)
+    {
+        *((volatile uint32_t*)muxRegister) = (*((volatile uint32_t*)muxRegister) & ~IOMUXC0_SW_MUX_CTL_PAD_MUX_MODE_MASK) |
+            IOMUXC0_SW_MUX_CTL_PAD_MUX_MODE(muxMode);
+    }
+
+    if (inputRegister)
+    {
+        *((volatile uint32_t*)inputRegister) = IOMUXC0_SELECT_INPUT_DAISY(inputDaisy) |
+            IOMUXC0_SELECT_INPUT_INVERSION(inputInv);
+    }
+}
+
+/*!
+ * @brief Sets the IOMUXC pin configuration.
+ * @note The previous five parameters can be filled with the pin function ID macros.
+ *
+ * This is an example to set pin configuration for IOMUXC_PTA7_LPUART1_RX:
+ * @code
+ *     IOMUXC_SetPinConfig(IOMUXC_PTA7_LPUART1_RX,
+ *                         IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+ *                         IOMUXC0_SW_MUX_CTL_PAD_PS_MASK)
+ * @endcode
+ *
+ * @param muxRegister    The pin mux register.
+ * @param muxMode        The pin mux mode.
+ * @param inputRegister  The select input register.
+ * @param inputDaisy     The input daisy.
+ * @param configRegister The config register.
+ * @param configValue    The pin config value.
+ */
+static inline void IOMUXC_SetPinConfig(uint32_t muxRegister,
+                                       uint32_t muxMode,
+                                       uint32_t inputRegister,
+                                       uint32_t inputDaisy,
+                                       uint32_t configRegister,
+                                       uint32_t configValue)
+{
+    if (muxRegister)
+    {
+        if (configRegister)
+        {
+            *((volatile uint32_t *)configRegister) = (*((volatile uint32_t *)configRegister) &
+                IOMUXC0_SW_MUX_CTL_PAD_MUX_MODE_MASK) | configValue;
+        }
+    }
+    else 
+    {
+        if (configRegister)
+        {
+            *((volatile uint32_t *)configRegister) = configValue;
+        }
+    }
+}
+/*@}*/
+
+#if defined(__cplusplus)
+}
+#endif /*__cplusplus */
+
+/*! @}*/
+
+#endif /* _FSL_IOMUXC_H_ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/MCIMX7U5xxxxx_cm4_lpm_flash.icf b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/MCIMX7U5xxxxx_cm4_lpm_flash.icf
new file mode 100644
index 0000000..27fd74d
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/MCIMX7U5xxxxx_cm4_lpm_flash.icf
@@ -0,0 +1,105 @@
+/*
+** ###################################################################
+**     Processors:          MCIMX7U5DVK08
+**                          MCIMX7U5DVP08
+**
+**     Compiler:            IAR ANSI C/C++ Compiler for ARM
+**     Reference manual:    i.MX7ULPRMV2, Rev. A, Dec. 2017
+**     Version:             rev. 5.0, 2017-12-22
+**     Build:               b171222
+**
+**     Abstract:
+**         Linker file for the IAR ANSI C/C++ Compiler for ARM
+**
+**     Copyright 2016 Freescale Semiconductor, Inc.
+**     Copyright 2016-2017 NXP
+**     All rights reserved.
+**
+**     SPDX-License-Identifier: BSD-3-Clause
+**
+**     http:                 www.nxp.com
+**     mail:                 support@nxp.com
+**
+** ###################################################################
+*/
+
+/* Memory region from [0x04000000-0x04001FFF] is reserved for ROM header */
+
+define symbol __ram_vector_table_size__ =  isdefinedsymbol(__ram_vector_table__) ? 0x00000240 : 0;
+define symbol __ram_vector_table_offset__ =  isdefinedsymbol(__ram_vector_table__) ? 0x0000023F : 0;
+
+define symbol m_interrupts_start       = 0x04002000;
+define symbol m_interrupts_end         = 0x0400223F;
+
+define symbol m_text_start             = 0x04002240;
+define symbol m_text_end               = 0x043FFFFF;
+
+define symbol m_m4_suspend_ram_start   = 0x1FFF8000;
+define symbol m_m4_suspend_ram_end     = 0x1FFFBFFF;
+
+define symbol m_a7_suspend_ram_start   = 0x1FFFC000;
+define symbol m_a7_suspend_ram_end     = 0x1FFFFFFF;
+
+define symbol m_interrupts_ram_start   = 0x1FFD2000;
+define symbol m_interrupts_ram_end     = 0x1FFD2000 + __ram_vector_table_offset__;
+
+define symbol m_data_start             = m_interrupts_ram_start + __ram_vector_table_size__;
+define symbol m_data_end               = 0x1FFF7FFF;
+
+/* 32KB RAM above 0x20008000 is used by ROM. In suspend/resume case, the RAM above 0x20008000
+ * will be corrupted by ROM. Application need to save data to somewhere safe, specifically,
+ * [0x20008000, 0x2000BFFF] to M4 suspend ram, and [0x2000C000, 0x2000DBFF] to
+ * ROM header area [0x1FFD0000-0x1FFD1BFF]. ROM header area [0x1FFD1C00-0x1FFD1FFF] is used
+ * for IOMUXC0/GPIOA/GPIOB recovery which must be done before pad isolation ack.
+ */
+define symbol m_data_2_start           = 0x20000000;
+define symbol m_data_2_end             = 0x2000DBFF;
+
+/* Sizes */
+if (isdefinedsymbol(__stack_size__)) {
+  define symbol __size_cstack__        = __stack_size__;
+} else {
+  define symbol __size_cstack__        = 0x400;
+}
+
+if (isdefinedsymbol(__heap_size__)) {
+  define symbol __size_heap__          = __heap_size__;
+} else {
+  define symbol __size_heap__          = 0x400;
+}
+
+define exported symbol __VECTOR_TABLE  = m_interrupts_start;
+define exported symbol __VECTOR_RAM    = isdefinedsymbol(__ram_vector_table__) ? m_interrupts_ram_start : m_interrupts_start;
+define exported symbol __RAM_VECTOR_TABLE_SIZE = __ram_vector_table_size__;
+
+define memory mem with size = 4G;
+define region TEXT_region = mem:[from m_interrupts_start to m_interrupts_end]
+                          | mem:[from m_text_start to m_text_end];
+define region DATA_region = mem:[from m_data_start to m_data_end]
+                          | mem:[from m_data_2_start to m_data_2_end];
+define region CSTACK_region = mem:[from m_data_2_end+1 to m_data_2_end+__size_cstack__];
+define region m_interrupts_ram_region = mem:[from m_interrupts_ram_start to m_interrupts_ram_end];
+define region M4_SUSPEND_region = mem:[from m_m4_suspend_ram_start to m_m4_suspend_ram_end];
+define region A7_SUSPEND_region = mem:[from m_a7_suspend_ram_start to m_a7_suspend_ram_end];
+
+define block CSTACK    with alignment = 8, size = __size_cstack__   { };
+define block HEAP      with alignment = 8, size = __size_heap__     { };
+define block RW        { readwrite };
+define block ZI        { zi };
+define block QACCESS_CODE_VAR   with alignment = 32 { section CodeQuickAccess };
+define block QACCESS_DATA_VAR   with alignment = 32 { section DataQuickAccess };
+
+initialize by copy { readwrite, section .textrw, section DataQuickAccess, section CodeQuickAccess };
+do not initialize  { section .noinit, section M4SuspendRam, section A7SuspendRam };
+
+place at address mem: m_interrupts_start    { readonly section .intvec };
+place in TEXT_region                        { readonly };
+place in DATA_region                        { block RW };
+place in DATA_region                        { block QACCESS_CODE_VAR };
+place in DATA_region                        { block QACCESS_DATA_VAR };
+place in DATA_region                        { block ZI };
+place in DATA_region                        { last block HEAP };
+place in CSTACK_region                      { block CSTACK };
+place in m_interrupts_ram_region            { section m_interrupts_ram };
+place in M4_SUSPEND_region                  { section M4SuspendRam };
+place in A7_SUSPEND_region                  { section A7SuspendRam };
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/MCIMX7U5xxxxx_cm4_lpm_ram.icf b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/MCIMX7U5xxxxx_cm4_lpm_ram.icf
new file mode 100644
index 0000000..35430dd
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/MCIMX7U5xxxxx_cm4_lpm_ram.icf
@@ -0,0 +1,97 @@
+/*
+** ###################################################################
+**     Processors:          MCIMX7U5DVK08
+**                          MCIMX7U5DVP08
+**
+**     Compiler:            IAR ANSI C/C++ Compiler for ARM
+**     Reference manual:    i.MX7ULPRMV2, Rev. A, Dec. 2017
+**     Version:             rev. 5.0, 2017-12-22
+**     Build:               b171222
+**
+**     Abstract:
+**         Linker file for the IAR ANSI C/C++ Compiler for ARM
+**
+**     Copyright 2016 Freescale Semiconductor, Inc.
+**     Copyright 2016-2017 NXP
+**     All rights reserved.
+**
+**     SPDX-License-Identifier: BSD-3-Clause
+**
+**     http:                 www.nxp.com
+**     mail:                 support@nxp.com
+**
+** ###################################################################
+*/
+
+/* Memory region from [0x1FFD0000-0x1FFD1FFF] is reserved for ROM header */
+
+define symbol __ram_vector_table_size__ =  isdefinedsymbol(__ram_vector_table__) ? 0x00000240 : 0;
+define symbol __ram_vector_table_offset__ =  isdefinedsymbol(__ram_vector_table__) ? 0x0000023F : 0;
+
+define symbol m_interrupts_start       = 0x1FFD2000;
+define symbol m_interrupts_end         = 0x1FFD223F;
+
+define symbol m_text_start             = 0x1FFD2240;
+define symbol m_text_end               = 0x1FFF7FFF;
+
+define symbol m_m4_suspend_ram_start   = 0x1FFF8000;
+define symbol m_m4_suspend_ram_end     = 0x1FFFBFFF;
+
+define symbol m_a7_suspend_ram_start   = 0x1FFFC000;
+define symbol m_a7_suspend_ram_end     = 0x1FFFFFFF;
+
+define symbol m_interrupts_ram_start   = 0x20000000;
+define symbol m_interrupts_ram_end     = 0x20000000 + __ram_vector_table_offset__;
+
+/* 32KB RAM above 0x20008000 is used by ROM. In suspend/resume case, the RAM above 0x20008000
+ * will be corrupted by ROM. Application need to save data to somewhere safe, specifically,
+ * [0x20008000, 0x2000BFFF] to M4 suspend ram, and [0x2000C000, 0x2000DBFF] to
+ * ROM header area [0x1FFD0000-0x1FFD1BFF]. ROM header area [0x1FFD1C00-0x1FFD1FFF] is used
+ * for IOMUXC0/GPIOA/GPIOB recovery which must be done before pad isolation ack.
+ */
+define symbol m_data_start             = m_interrupts_ram_start + __ram_vector_table_size__;
+define symbol m_data_end               = 0x2000DBFF;
+
+/* Sizes */
+if (isdefinedsymbol(__stack_size__)) {
+  define symbol __size_cstack__        = __stack_size__;
+} else {
+  define symbol __size_cstack__        = 0x400;
+}
+
+if (isdefinedsymbol(__heap_size__)) {
+  define symbol __size_heap__          = __heap_size__;
+} else {
+  define symbol __size_heap__          = 0x400;
+}
+
+define exported symbol __VECTOR_TABLE  = m_interrupts_start;
+define exported symbol __VECTOR_RAM    = isdefinedsymbol(__ram_vector_table__) ? m_interrupts_ram_start : m_interrupts_start;
+define exported symbol __RAM_VECTOR_TABLE_SIZE = __ram_vector_table_size__;
+
+define memory mem with size = 4G;
+define region TEXT_region = mem:[from m_interrupts_start to m_interrupts_end]
+                          | mem:[from m_text_start to m_text_end];
+define region DATA_region = mem:[from m_data_start to m_data_end];
+define region CSTACK_region = mem:[from m_data_end+1 to m_data_end+__size_cstack__];
+define region m_interrupts_ram_region = mem:[from m_interrupts_ram_start to m_interrupts_ram_end];
+define region M4_SUSPEND_region = mem:[from m_m4_suspend_ram_start to m_m4_suspend_ram_end];
+define region A7_SUSPEND_region = mem:[from m_a7_suspend_ram_start to m_a7_suspend_ram_end];
+
+define block CSTACK    with alignment = 8, size = __size_cstack__   { };
+define block HEAP      with alignment = 8, size = __size_heap__     { };
+define block RW        { readwrite };
+define block ZI        { zi };
+
+initialize by copy { readwrite, section .textrw };
+do not initialize  { section .noinit, section M4SuspendRam, section A7SuspendRam };
+
+place at address mem: m_interrupts_start    { readonly section .intvec };
+place in TEXT_region                        { readonly };
+place in DATA_region                        { block RW };
+place in DATA_region                        { block ZI };
+place in DATA_region                        { last block HEAP };
+place in CSTACK_region                      { block CSTACK };
+place in m_interrupts_ram_region            { section m_interrupts_ram };
+place in M4_SUSPEND_region                  { section M4SuspendRam };
+place in A7_SUSPEND_region                  { section A7SuspendRam };
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/lpm_asm.s b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/lpm_asm.s
new file mode 100644
index 0000000..b057495
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/lpm_asm.s
@@ -0,0 +1,186 @@
+/*
+ * Copyright (c) 2017-2018, NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+        PUBLIC  LPM_Suspend
+        PUBLIC  LPM_Resume
+#if FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE
+        SECTION CodeQuickAccess:CODE:REORDER:NOROOT(2)
+#else
+        SECTION .text:CODE:REORDER:NOROOT(2)
+#endif
+
+        EXTERN  __vector_table
+        EXTERN  SystemInit
+        EXTERN  LPM_NvicStateSave
+        EXTERN  LPM_NvicStateRestore
+        EXTERN  LPM_SystemSuspend
+        EXTERN  LPM_SystemResume
+
+        THUMB
+
+LPM_Suspend
+        ; Primask has been set before entering this function
+        PUSH    {R4-R11, LR}                 ; Save task return context
+        MRS     R0, CONTROL
+        PUSH    {R0}                         ; Save CONTROL register
+
+        ; Save NVIC
+        LDR     R1, =LPM_NvicStateSave
+        BLX     R1
+
+        LDR     R1, =0x1FFD1C00
+        ; Save IOMUXC0 MUX register
+        LDR     R2, =0x4103D000
+        LDR     R3, =0x4103D0D0
+LPM_S0:
+        CMP     R2, R3
+        ITTT    LT
+        LDRLT   R0, [R2], #4
+        STRLT   R0, [R1], #4
+        BLT     LPM_S0
+        ; Save IOMUXC0 SELECT INPUT register
+        LDR     R2, =0x4103D100
+        LDR     R3, =0x4103D22C
+LPM_S1:
+        CMP     R2, R3
+        ITTT    LT
+        LDRLT   R0, [R2], #4
+        STRLT   R0, [R1], #4
+        BLT     LPM_S1
+        ; Save GPIOA register
+        LDR     R2, =0x4100F000
+        LDR     R0, [R2, #0x0]  ; PDOR
+        STR     R0, [R1], #4
+        LDR     R0, [R2, #0x14] ; PDDR
+        STR     R0, [R1], #4
+        ; Save GPIOB register
+        LDR     R2, =0x4100F040
+        LDR     R0, [R2, #0x0]  ; PDOR
+        STR     R0, [R1], #4
+        LDR     R0, [R2, #0x14] ; PDDR
+        STR     R0, [R1], #4
+
+        MOV     R0, SP                       ; Set 1st param to SP
+        LDR     R1, =LPM_SystemSuspend
+        BLX     R1                           ; Won't return unless wakeup before suspend
+
+        MOV     R0, #0                       ; Set resume parameter to false
+        LDR     R1, =LPM_SystemResume
+        BLX     R1                           ; Suspend failed, resume system
+
+        ; NVIC didn't change in LPM_SystemSuspend, no recovery needed.
+
+        POP     {R0}                         ; CONTROL not changed, discard the data in stack.
+        POP     {R4-R11, LR}
+        MOV     R0, #0                       ; Return false means suspend failure.
+        BX      LR
+
+LPM_Resume
+        CPSID   I
+
+        ; Enable GPIO clock
+        LDR     R1, =0x40000000
+        LDR     R0, =0x41026000
+        STR     R1, [R0, #0x3C]  ; PCC0->RGPIO2P0 = PCC_CLKCFG_CGC_MASK;
+        STR     R1, [R0, #0xFC]  ; PCC0->PCTLA = PCC_CLKCFG_CGC_MASK;
+        STR     R1, [R0, #0x100] ; PCC0->PCTLB = PCC_CLKCFG_CGC_MASK;
+
+        LDR     R1, =0x1FFD1C00
+        ; Restore IOMUXC0 MUX register
+        LDR     R2, =0x4103D000
+        LDR     R3, =0x4103D0D0
+LPM_R0:
+        CMP     R2, R3
+        ITTT    LT
+        LDRLT   R0, [R1], #4
+        STRLT   R0, [R2], #4
+        BLT     LPM_R0
+        ; Restore IOMUXC0 SELECT INPUT register
+        LDR     R2, =0x4103D100
+        LDR     R3, =0x4103D22C
+LPM_R1:
+        CMP     R2, R3
+        ITTT    LT
+        LDRLT   R0, [R1], #4
+        STRLT   R0, [R2], #4
+        BLT     LPM_R1
+        ; Restore GPIOA register
+        LDR     R2, =0x4100F000
+        LDR     R0, [R1], #4
+        STR     R0, [R2, #0x0]  ; PDOR
+        LDR     R0, [R1], #4
+        STR     R0, [R2, #0x14] ; PDDR
+        ; Restore GPIOB register
+        LDR     R2, =0x4100F040
+        LDR     R0, [R1], #4
+        STR     R0, [R2, #0x0]  ; PDOR
+        LDR     R0, [R1], #4
+        STR     R0, [R2, #0x14] ; PDDR
+        ; Clear pad isolation
+        LDR     R0, =0x410A1028
+        LDR     R1, [R0]
+        ORR     R1, R1, #0x4000
+        STR     R1, [R0]
+
+        ; Judge if the code is running in QSPI flash region [0x04000000, 0x0C000000].
+        ; If so, need to initialize QSPI first.
+        LDR     R1, =SystemInit
+        LDR     R0, =0x04000000
+        CMP     R1, R0
+        BCC     LPM_MediaReady
+        LDR     R0, =0x0C000000
+        CMP     R1, R0
+        BCS     LPM_MediaReady
+
+        BL      LPM_InitQSPI
+
+LPM_MediaReady
+        LDR     R0, =0xE000ED08
+        LDR     R1, =__vector_table
+        STR     R1, [R0]
+        LDR     R2, [R1]                     ; Initialize resume stack, which is same as startup stack.
+        MSR     MSP, R2
+
+        LDR     R0, =SystemInit
+        BLX     R0                           ; Call SystemInit to initialize SoC
+        MOV     R0, #1                       ; Set resume parameter to true
+        LDR     R1, =LPM_SystemResume
+        BLX     R1                           ; Resume from VLLS, return PSP
+        MOV     R4, R0                       ; Save PSP to R4
+
+        LDR     R1, =LPM_NvicStateRestore
+        BLX     R1                           ; Restore NVIC
+
+        MOV     R0, R4
+        LDMIA   R0!, {R1, R4-R11, LR}        ; Restore core registers, R1 stores CONTROL value
+
+        ; Restore CONTROL and return
+        MSR     PSP, R0                      ; Recover PSP
+        MSR     CONTROL, R1                  ; Recover CONTROL
+        ISB
+        MOV     R0, #1                       ; Return true means suspend successfully.
+        BX      LR                           ; Primask will be cleared outside this function
+
+LPM_InitQSPI
+        LDR     R0, =0x41027304
+        MOV     R1, #0x1
+        STR     R1, [R0]                     ; Set FIRC async plat divider to 1
+
+        LDR     R0, =0x410B2094
+        LDR     R1, =0x43000000
+        STR     R1, [R0]                     ; Select QSPI clock to SOSC DIV1 and enable it
+
+        LDR     R0, =0x410A5000
+        LDR     R1, [R0]
+        BIC     R1, R1, #0x4000
+        STR     R1, [R0]                     ; MCR: QSPIA Enable
+
+        ISB
+        DSB
+        BX      LR
+
+        END
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.ewd b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.ewd
new file mode 100644
index 0000000..752ac24
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.ewd
@@ -0,0 +1,5812 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project>
+    <fileVersion>3</fileVersion>
+    <configuration>
+        <name>debug</name>
+        <toolchain>
+            <name>ARM</name>
+        </toolchain>
+        <debug>1</debug>
+        <settings>
+            <name>C-SPY</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>29</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CInput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CEndian</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCVariant</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>MemOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MemFile</name>
+                    <state>$TOOLKIT_DIR$\CONFIG\debugger\NXP\MCIMX7U5_M4.ddf</state>
+                </option>
+                <option>
+                    <name>RunToEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RunToName</name>
+                    <state>main</state>
+                </option>
+                <option>
+                    <name>CExtraOptionsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDDFArgumentProducer</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDownloadSuppressDownload</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDownloadVerifyAll</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCProductVersion</name>
+                    <state>6.50.6.4952</state>
+                </option>
+                <option>
+                    <name>OCDynDriverList</name>
+                    <state>JLINK_ID</state>
+                </option>
+                <option>
+                    <name>OCLastSavedByProductVersion</name>
+                    <state>8.22.2.15993</state>
+                </option>
+                <option>
+                    <name>UseFlashLoader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CLowLevel</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCBE8Slave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacFile2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CDevice</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>FlashLoadersV3</name>
+                    <state>$TOOLKIT_DIR$\config\flashloader\</state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck1</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck3</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath3</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OverrideDefFlashBoard</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesOffset1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesOffset2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesOffset3</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesUse1</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesUse2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesUse3</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDeviceConfigMacroFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDebuggerExtraOption</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCAllMTBOptions</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCMulticoreNrOfCores</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCMulticoreMaster</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCMulticorePort</name>
+                    <state>53461</state>
+                </option>
+                <option>
+                    <name>OCMulticoreWorkspace</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCMulticoreSlaveProject</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCMulticoreSlaveConfiguration</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDownloadExtraImage</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCAttachSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MassEraseBeforeFlashing</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>ARMSIM_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCSimDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCSimEnablePSP</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCSimPspOverrideConfig</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCSimPspConfigFile</name>
+                    <state></state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CADI_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCadiMemory</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>Fast Model</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCADILogFileCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCADILogFileEditB</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CMSISDAP_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>4</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CatchSFERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCIarProbeScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CMSISDAPResetList</name>
+                    <version>1</version>
+                    <state>5</state>
+                </option>
+                <option>
+                    <name>CMSISDAPHWResetDuration</name>
+                    <state>300</state>
+                </option>
+                <option>
+                    <name>CMSISDAPHWResetDelay</name>
+                    <state>200</state>
+                </option>
+                <option>
+                    <name>CMSISDAPDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CMSISDAPInterfaceRadio</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CMSISDAPInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiTargetEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPRestoreBreakpointsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPUpdateBreakpointsEdit</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>RDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCHKERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiCPUEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiCPUNumber</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeCfgOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeConfig</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CMSISDAPProbeConfigRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPSelectedCPUBehaviour</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>ICpuName</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCJetEmuParams</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCCMSISDAPUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCCMSISDAPUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>GDBSERVER_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TCPIP</name>
+                    <state>aaa.bbb.ccc.ddd</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCJTagBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJTagDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJTagUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>IJET_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>8</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CatchSFERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCIarProbeScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetResetList</name>
+                    <version>1</version>
+                    <state>10</state>
+                </option>
+                <option>
+                    <name>IjetHWResetDuration</name>
+                    <state>300</state>
+                </option>
+                <option>
+                    <name>IjetHWResetDelay</name>
+                    <state>200</state>
+                </option>
+                <option>
+                    <name>IjetPowerFromProbe</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetPowerRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>IjetInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiTargetEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetScanChainNonARMDevices</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetIRLength</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetProtocolRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetSwoPin</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>IjetSwoPrescalerList</name>
+                    <version>1</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetRestoreBreakpointsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetUpdateBreakpointsEdit</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>RDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchUndef</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchData</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchPrefetch</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchMMERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchNOCPERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchCHKERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchSTATERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchBUSERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchINTERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchHARDERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeCfgOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeConfig</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IjetProbeConfigRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiCPUEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiCPUNumber</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetSelectedCPUBehaviour</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>ICpuName</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCJetEmuParams</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetPreferETB</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetTraceSettingsList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetTraceSizeList</name>
+                    <version>0</version>
+                    <state>2</state>
+                </option>
+                <option>
+                    <name>FlashBoardPathSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCIjetUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCIjetUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>JLINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>16</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCCatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>JLinkSpeed</name>
+                    <state>32</state>
+                </option>
+                <option>
+                    <name>CCJLinkDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCJLinkHWResetDelay</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>JLinkInitialSpeed</name>
+                    <state>32</state>
+                </option>
+                <option>
+                    <name>CCDoJlinkMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCScanChainNonARMDevices</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkIRLength</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkCommRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkTCPIP</name>
+                    <state>aaa.bbb.ccc.ddd</state>
+                </option>
+                <option>
+                    <name>CCJLinkSpeedRadioV2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCUSBDevice</name>
+                    <version>1</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCRDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCJLinkInterfaceRadio</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJLinkResetList</name>
+                    <version>6</version>
+                    <state>7</state>
+                </option>
+                <option>
+                    <name>CCJLinkInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJLinkUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCTcpIpAlt</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkTcpIpSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockEdit</name>
+                    <state>2000</state>
+                </option>
+                <option>
+                    <name>OCJLinkTraceSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkTraceSourceDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkDeviceName</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>LMIFTDI_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>2</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>LmiftdiSpeed</name>
+                    <state>500</state>
+                </option>
+                <option>
+                    <name>CCLmiftdiDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCLmiftdiLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCLmiFtdiInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCLmiFtdiInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>NULINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>PEMICRO_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>3</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJPEMicroShowSettings</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>STLINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>5</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCSTLinkCatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDAPNumber</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCSTLinkInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkResetList</name>
+                    <version>3</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockEdit</name>
+                    <state>2000</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCSTLinkUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDebugAccessPortRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUseServerSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>THIRDPARTY_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CThirdPartyDriverDll</name>
+                    <state>###Uninitialized###</state>
+                </option>
+                <option>
+                    <name>CThirdPartyLogFileCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CThirdPartyLogFileEditB</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>TIFET_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetResetList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetVccTypeDefault</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetVoltage</name>
+                    <state>###Uninitialized###</state>
+                </option>
+                <option>
+                    <name>CCMSPFetVCCDefault</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetSettlingtime</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetRadioJtagSpeedType</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetConnection</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetUsbComPort</name>
+                    <state>Automatic</state>
+                </option>
+                <option>
+                    <name>CCMSPFetAllowAccessToBSL</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCMSPFetRadioEraseFlash</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>XDS100_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>6</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCXds100CatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TIPackageOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TIPackage</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>BoardFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCXds100BreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100DoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100UpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CpuClockEdit</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCXds100SwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SwoClockEdit</name>
+                    <state>1000</state>
+                </option>
+                <option>
+                    <name>CCXds100HWResetDelay</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100ResetList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100UsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCXds100UsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100JtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100InterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100InterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100ProbeList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SWOPortRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SWOPort</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <debuggerPlugins>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxTinyArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\embOS\embOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\FreeRtos\FreeRtosArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\Mbed\MbedArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\OpenRTOS\OpenRTOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SafeRTOS\SafeRTOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8BE.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\ThreadX\ThreadXArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\TI-RTOS\tirtosplugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-286-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-III\uCOS-III-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\CodeCoverage\CodeCoverage.ENU.ewplugin</file>
+                <loadFlag>1</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\Orti\Orti.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\TargetAccessServer\TargetAccessServer.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\uCProbe\uCProbePlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+        </debuggerPlugins>
+    </configuration>
+    <configuration>
+        <name>flash_debug</name>
+        <toolchain>
+            <name>ARM</name>
+        </toolchain>
+        <debug>1</debug>
+        <settings>
+            <name>C-SPY</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>29</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CInput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CEndian</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCVariant</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>MemOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MemFile</name>
+                    <state>$TOOLKIT_DIR$\CONFIG\debugger\NXP\MK70FN1M0xxx12.ddf</state>
+                </option>
+                <option>
+                    <name>RunToEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RunToName</name>
+                    <state>main</state>
+                </option>
+                <option>
+                    <name>CExtraOptionsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDDFArgumentProducer</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDownloadSuppressDownload</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDownloadVerifyAll</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCProductVersion</name>
+                    <state>6.50.6.4952</state>
+                </option>
+                <option>
+                    <name>OCDynDriverList</name>
+                    <state>JLINK_ID</state>
+                </option>
+                <option>
+                    <name>OCLastSavedByProductVersion</name>
+                    <state>7.60.1.11206</state>
+                </option>
+                <option>
+                    <name>UseFlashLoader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CLowLevel</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCBE8Slave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacFile2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CDevice</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>FlashLoadersV3</name>
+                    <state>$TOOLKIT_DIR$\config\flashloader\NXP\FlashK70Fxxx128K.board</state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck1</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck3</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath3</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OverrideDefFlashBoard</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesOffset1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesOffset2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesOffset3</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesUse1</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesUse2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesUse3</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDeviceConfigMacroFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDebuggerExtraOption</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCAllMTBOptions</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCMulticoreNrOfCores</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCMulticoreMaster</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCMulticorePort</name>
+                    <state>53461</state>
+                </option>
+                <option>
+                    <name>OCMulticoreWorkspace</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCMulticoreSlaveProject</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCMulticoreSlaveConfiguration</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDownloadExtraImage</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCAttachSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MassEraseBeforeFlashing</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>ARMSIM_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCSimDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCSimEnablePSP</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCSimPspOverrideConfig</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCSimPspConfigFile</name>
+                    <state></state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CADI_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCadiMemory</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>Fast Model</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCADILogFileCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCADILogFileEditB</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CMSISDAP_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>4</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CatchSFERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCIarProbeScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CMSISDAPResetList</name>
+                    <version>1</version>
+                    <state>5</state>
+                </option>
+                <option>
+                    <name>CMSISDAPHWResetDuration</name>
+                    <state>300</state>
+                </option>
+                <option>
+                    <name>CMSISDAPHWResetDelay</name>
+                    <state>200</state>
+                </option>
+                <option>
+                    <name>CMSISDAPDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CMSISDAPInterfaceRadio</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CMSISDAPInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiTargetEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPRestoreBreakpointsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPUpdateBreakpointsEdit</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>RDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCHKERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiCPUEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiCPUNumber</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeCfgOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeConfig</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CMSISDAPProbeConfigRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPSelectedCPUBehaviour</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>ICpuName</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCJetEmuParams</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCCMSISDAPUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCCMSISDAPUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>GDBSERVER_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TCPIP</name>
+                    <state>aaa.bbb.ccc.ddd</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCJTagBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJTagDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJTagUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>IJET_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>8</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CatchSFERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCIarProbeScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetResetList</name>
+                    <version>1</version>
+                    <state>10</state>
+                </option>
+                <option>
+                    <name>IjetHWResetDuration</name>
+                    <state>300</state>
+                </option>
+                <option>
+                    <name>IjetHWResetDelay</name>
+                    <state>200</state>
+                </option>
+                <option>
+                    <name>IjetPowerFromProbe</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetPowerRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>IjetInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiTargetEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetScanChainNonARMDevices</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetIRLength</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetProtocolRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetSwoPin</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>IjetSwoPrescalerList</name>
+                    <version>1</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetRestoreBreakpointsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetUpdateBreakpointsEdit</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>RDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchUndef</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchData</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchPrefetch</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchMMERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchNOCPERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchCHKERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchSTATERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchBUSERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchINTERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchHARDERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeCfgOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeConfig</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IjetProbeConfigRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiCPUEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiCPUNumber</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetSelectedCPUBehaviour</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>ICpuName</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCJetEmuParams</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetPreferETB</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetTraceSettingsList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetTraceSizeList</name>
+                    <version>0</version>
+                    <state>2</state>
+                </option>
+                <option>
+                    <name>FlashBoardPathSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCIjetUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCIjetUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>JLINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>16</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCCatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>JLinkSpeed</name>
+                    <state>32</state>
+                </option>
+                <option>
+                    <name>CCJLinkDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCJLinkHWResetDelay</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>JLinkInitialSpeed</name>
+                    <state>32</state>
+                </option>
+                <option>
+                    <name>CCDoJlinkMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCScanChainNonARMDevices</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkIRLength</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkCommRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkTCPIP</name>
+                    <state>aaa.bbb.ccc.ddd</state>
+                </option>
+                <option>
+                    <name>CCJLinkSpeedRadioV2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCUSBDevice</name>
+                    <version>1</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCRDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCJLinkInterfaceRadio</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJLinkResetList</name>
+                    <version>6</version>
+                    <state>7</state>
+                </option>
+                <option>
+                    <name>CCJLinkInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJLinkUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCTcpIpAlt</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkTcpIpSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockEdit</name>
+                    <state>2000</state>
+                </option>
+                <option>
+                    <name>OCJLinkTraceSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkTraceSourceDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkDeviceName</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>LMIFTDI_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>2</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>LmiftdiSpeed</name>
+                    <state>500</state>
+                </option>
+                <option>
+                    <name>CCLmiftdiDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCLmiftdiLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCLmiFtdiInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCLmiFtdiInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>NULINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>PEMICRO_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>3</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJPEMicroShowSettings</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>STLINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>5</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCSTLinkCatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDAPNumber</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCSTLinkInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkResetList</name>
+                    <version>3</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockEdit</name>
+                    <state>2000</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCSTLinkUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDebugAccessPortRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUseServerSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>THIRDPARTY_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CThirdPartyDriverDll</name>
+                    <state>###Uninitialized###</state>
+                </option>
+                <option>
+                    <name>CThirdPartyLogFileCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CThirdPartyLogFileEditB</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>TIFET_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetResetList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetVccTypeDefault</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetVoltage</name>
+                    <state>###Uninitialized###</state>
+                </option>
+                <option>
+                    <name>CCMSPFetVCCDefault</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetSettlingtime</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetRadioJtagSpeedType</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetConnection</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetUsbComPort</name>
+                    <state>Automatic</state>
+                </option>
+                <option>
+                    <name>CCMSPFetAllowAccessToBSL</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCMSPFetRadioEraseFlash</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>XDS100_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>6</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCXds100CatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TIPackageOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TIPackage</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>BoardFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCXds100BreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100DoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100UpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CpuClockEdit</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCXds100SwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SwoClockEdit</name>
+                    <state>1000</state>
+                </option>
+                <option>
+                    <name>CCXds100HWResetDelay</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100ResetList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100UsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCXds100UsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100JtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100InterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100InterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100ProbeList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SWOPortRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SWOPort</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <debuggerPlugins>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxTinyArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\embOS\embOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\FreeRtos\FreeRtosArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\Mbed\MbedArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\OpenRTOS\OpenRTOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SafeRTOS\SafeRTOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8BE.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\ThreadX\ThreadXArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\TI-RTOS\tirtosplugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-286-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-III\uCOS-III-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\CodeCoverage\CodeCoverage.ENU.ewplugin</file>
+                <loadFlag>1</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\Orti\Orti.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\TargetAccessServer\TargetAccessServer.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\uCProbe\uCProbePlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+        </debuggerPlugins>
+    </configuration>
+    <configuration>
+        <name>release</name>
+        <toolchain>
+            <name>ARM</name>
+        </toolchain>
+        <debug>0</debug>
+        <settings>
+            <name>C-SPY</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>29</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CInput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CEndian</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCVariant</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>MemOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MemFile</name>
+                    <state>$TOOLKIT_DIR$\CONFIG\debugger\Freescale\MK70FN1M0xxx12.ddf</state>
+                </option>
+                <option>
+                    <name>RunToEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RunToName</name>
+                    <state>main</state>
+                </option>
+                <option>
+                    <name>CExtraOptionsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDDFArgumentProducer</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDownloadSuppressDownload</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDownloadVerifyAll</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCProductVersion</name>
+                    <state>6.50.6.4952</state>
+                </option>
+                <option>
+                    <name>OCDynDriverList</name>
+                    <state>JLINK_ID</state>
+                </option>
+                <option>
+                    <name>OCLastSavedByProductVersion</name>
+                    <state>6.70.3.6347</state>
+                </option>
+                <option>
+                    <name>UseFlashLoader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CLowLevel</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCBE8Slave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacFile2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CDevice</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>FlashLoadersV3</name>
+                    <state>$TOOLKIT_DIR$\config\flashloader\Freescale\FlashK70Fxxx128K.board</state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck1</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck3</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath3</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OverrideDefFlashBoard</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesOffset1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesOffset2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesOffset3</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesUse1</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesUse2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesUse3</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDeviceConfigMacroFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDebuggerExtraOption</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCAllMTBOptions</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCMulticoreNrOfCores</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCMulticoreMaster</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCMulticorePort</name>
+                    <state>53461</state>
+                </option>
+                <option>
+                    <name>OCMulticoreWorkspace</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCMulticoreSlaveProject</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCMulticoreSlaveConfiguration</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDownloadExtraImage</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCAttachSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MassEraseBeforeFlashing</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>ARMSIM_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCSimDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCSimEnablePSP</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCSimPspOverrideConfig</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCSimPspConfigFile</name>
+                    <state></state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CADI_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCadiMemory</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>Fast Model</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCADILogFileCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCADILogFileEditB</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CMSISDAP_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>4</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CatchSFERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCIarProbeScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CMSISDAPResetList</name>
+                    <version>1</version>
+                    <state>5</state>
+                </option>
+                <option>
+                    <name>CMSISDAPHWResetDuration</name>
+                    <state>300</state>
+                </option>
+                <option>
+                    <name>CMSISDAPHWResetDelay</name>
+                    <state>200</state>
+                </option>
+                <option>
+                    <name>CMSISDAPDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CMSISDAPInterfaceRadio</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CMSISDAPInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiTargetEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPRestoreBreakpointsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPUpdateBreakpointsEdit</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>RDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCHKERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiCPUEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiCPUNumber</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeCfgOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeConfig</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CMSISDAPProbeConfigRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPSelectedCPUBehaviour</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>ICpuName</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCJetEmuParams</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCCMSISDAPUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCCMSISDAPUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>GDBSERVER_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TCPIP</name>
+                    <state>aaa.bbb.ccc.ddd</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCJTagBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJTagDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJTagUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>IJET_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>8</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CatchSFERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCIarProbeScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetResetList</name>
+                    <version>1</version>
+                    <state>10</state>
+                </option>
+                <option>
+                    <name>IjetHWResetDuration</name>
+                    <state>300</state>
+                </option>
+                <option>
+                    <name>IjetHWResetDelay</name>
+                    <state>200</state>
+                </option>
+                <option>
+                    <name>IjetPowerFromProbe</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetPowerRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>IjetInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiTargetEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetScanChainNonARMDevices</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetIRLength</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetProtocolRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetSwoPin</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>IjetSwoPrescalerList</name>
+                    <version>1</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetRestoreBreakpointsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetUpdateBreakpointsEdit</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>RDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchUndef</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchData</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchPrefetch</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchMMERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchNOCPERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchCHKERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchSTATERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchBUSERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchINTERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchHARDERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeCfgOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeConfig</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IjetProbeConfigRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiCPUEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiCPUNumber</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetSelectedCPUBehaviour</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>ICpuName</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCJetEmuParams</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetPreferETB</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetTraceSettingsList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetTraceSizeList</name>
+                    <version>0</version>
+                    <state>2</state>
+                </option>
+                <option>
+                    <name>FlashBoardPathSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCIjetUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCIjetUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>JLINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>16</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCCatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>JLinkSpeed</name>
+                    <state>32</state>
+                </option>
+                <option>
+                    <name>CCJLinkDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCJLinkHWResetDelay</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>JLinkInitialSpeed</name>
+                    <state>32</state>
+                </option>
+                <option>
+                    <name>CCDoJlinkMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCScanChainNonARMDevices</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkIRLength</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkCommRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkTCPIP</name>
+                    <state>aaa.bbb.ccc.ddd</state>
+                </option>
+                <option>
+                    <name>CCJLinkSpeedRadioV2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCUSBDevice</name>
+                    <version>1</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCRDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCJLinkInterfaceRadio</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJLinkResetList</name>
+                    <version>6</version>
+                    <state>5</state>
+                </option>
+                <option>
+                    <name>CCJLinkInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJLinkUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCTcpIpAlt</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkTcpIpSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockEdit</name>
+                    <state>2000</state>
+                </option>
+                <option>
+                    <name>OCJLinkTraceSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkTraceSourceDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkDeviceName</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>LMIFTDI_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>2</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>LmiftdiSpeed</name>
+                    <state>500</state>
+                </option>
+                <option>
+                    <name>CCLmiftdiDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCLmiftdiLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCLmiFtdiInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCLmiFtdiInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>NULINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>PEMICRO_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>3</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJPEMicroShowSettings</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>STLINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>5</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCSTLinkCatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDAPNumber</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCSTLinkInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkResetList</name>
+                    <version>3</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockEdit</name>
+                    <state>2000</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCSTLinkUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDebugAccessPortRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUseServerSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>THIRDPARTY_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CThirdPartyDriverDll</name>
+                    <state>###Uninitialized###</state>
+                </option>
+                <option>
+                    <name>CThirdPartyLogFileCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CThirdPartyLogFileEditB</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>TIFET_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetResetList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetVccTypeDefault</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetVoltage</name>
+                    <state>###Uninitialized###</state>
+                </option>
+                <option>
+                    <name>CCMSPFetVCCDefault</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetSettlingtime</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetRadioJtagSpeedType</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetConnection</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetUsbComPort</name>
+                    <state>Automatic</state>
+                </option>
+                <option>
+                    <name>CCMSPFetAllowAccessToBSL</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCMSPFetRadioEraseFlash</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>XDS100_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>6</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCXds100CatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TIPackageOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TIPackage</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>BoardFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCXds100BreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100DoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100UpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CpuClockEdit</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCXds100SwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SwoClockEdit</name>
+                    <state>1000</state>
+                </option>
+                <option>
+                    <name>CCXds100HWResetDelay</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100ResetList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100UsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCXds100UsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100JtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100InterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100InterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100ProbeList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SWOPortRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SWOPort</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <debuggerPlugins>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxTinyArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\embOS\embOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\FreeRtos\FreeRtosArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\Mbed\MbedArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\OpenRTOS\OpenRTOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SafeRTOS\SafeRTOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8BE.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\ThreadX\ThreadXArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\TI-RTOS\tirtosplugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-286-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-III\uCOS-III-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\CodeCoverage\CodeCoverage.ENU.ewplugin</file>
+                <loadFlag>1</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\Orti\Orti.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\TargetAccessServer\TargetAccessServer.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\uCProbe\uCProbePlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+        </debuggerPlugins>
+    </configuration>
+    <configuration>
+        <name>flash_release</name>
+        <toolchain>
+            <name>ARM</name>
+        </toolchain>
+        <debug>0</debug>
+        <settings>
+            <name>C-SPY</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>29</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CInput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CEndian</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCVariant</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>MemOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MemFile</name>
+                    <state>$TOOLKIT_DIR$\CONFIG\debugger\Freescale\MK70FN1M0xxx12.ddf</state>
+                </option>
+                <option>
+                    <name>RunToEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RunToName</name>
+                    <state>main</state>
+                </option>
+                <option>
+                    <name>CExtraOptionsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDDFArgumentProducer</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDownloadSuppressDownload</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDownloadVerifyAll</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCProductVersion</name>
+                    <state>6.50.6.4952</state>
+                </option>
+                <option>
+                    <name>OCDynDriverList</name>
+                    <state>JLINK_ID</state>
+                </option>
+                <option>
+                    <name>OCLastSavedByProductVersion</name>
+                    <state>6.70.3.6347</state>
+                </option>
+                <option>
+                    <name>UseFlashLoader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CLowLevel</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCBE8Slave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacFile2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CDevice</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>FlashLoadersV3</name>
+                    <state>$TOOLKIT_DIR$\config\flashloader\Freescale\FlashK70Fxxx128K.board</state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck1</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesSuppressCheck3</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesPath3</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OverrideDefFlashBoard</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesOffset1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesOffset2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesOffset3</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCImagesUse1</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesUse2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCImagesUse3</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDeviceConfigMacroFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDebuggerExtraOption</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCAllMTBOptions</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCMulticoreNrOfCores</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCMulticoreMaster</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCMulticorePort</name>
+                    <state>53461</state>
+                </option>
+                <option>
+                    <name>OCMulticoreWorkspace</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCMulticoreSlaveProject</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCMulticoreSlaveConfiguration</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDownloadExtraImage</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCAttachSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MassEraseBeforeFlashing</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>ARMSIM_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCSimDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCSimEnablePSP</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCSimPspOverrideConfig</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCSimPspConfigFile</name>
+                    <state></state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CADI_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCadiMemory</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>Fast Model</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCADILogFileCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCADILogFileEditB</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CMSISDAP_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>4</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CatchSFERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCIarProbeScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CMSISDAPResetList</name>
+                    <version>1</version>
+                    <state>5</state>
+                </option>
+                <option>
+                    <name>CMSISDAPHWResetDuration</name>
+                    <state>300</state>
+                </option>
+                <option>
+                    <name>CMSISDAPHWResetDelay</name>
+                    <state>200</state>
+                </option>
+                <option>
+                    <name>CMSISDAPDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CMSISDAPInterfaceRadio</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CMSISDAPInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiTargetEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPRestoreBreakpointsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPUpdateBreakpointsEdit</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>RDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCHKERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiCPUEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPMultiCPUNumber</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeCfgOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeConfig</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CMSISDAPProbeConfigRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CMSISDAPSelectedCPUBehaviour</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>ICpuName</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCJetEmuParams</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCCMSISDAPUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCCMSISDAPUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>GDBSERVER_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TCPIP</name>
+                    <state>aaa.bbb.ccc.ddd</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCJTagBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJTagDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJTagUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>IJET_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>8</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CatchSFERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OCIarProbeScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetResetList</name>
+                    <version>1</version>
+                    <state>10</state>
+                </option>
+                <option>
+                    <name>IjetHWResetDuration</name>
+                    <state>300</state>
+                </option>
+                <option>
+                    <name>IjetHWResetDelay</name>
+                    <state>200</state>
+                </option>
+                <option>
+                    <name>IjetPowerFromProbe</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetPowerRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>IjetInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiTargetEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetScanChainNonARMDevices</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetIRLength</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetProtocolRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetSwoPin</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>IjetSwoPrescalerList</name>
+                    <version>1</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetRestoreBreakpointsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetUpdateBreakpointsEdit</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>RDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchUndef</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchData</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchPrefetch</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>RDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CatchMMERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchNOCPERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchCHKERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchSTATERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchBUSERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchINTERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchHARDERR</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeCfgOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCProbeConfig</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IjetProbeConfigRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiCPUEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetMultiCPUNumber</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetSelectedCPUBehaviour</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>ICpuName</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCJetEmuParams</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetPreferETB</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IjetTraceSettingsList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IjetTraceSizeList</name>
+                    <version>0</version>
+                    <state>2</state>
+                </option>
+                <option>
+                    <name>FlashBoardPathSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCIjetUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCIjetUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>JLINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>16</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCCatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>JLinkSpeed</name>
+                    <state>32</state>
+                </option>
+                <option>
+                    <name>CCJLinkDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCJLinkHWResetDelay</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>JLinkInitialSpeed</name>
+                    <state>32</state>
+                </option>
+                <option>
+                    <name>CCDoJlinkMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCScanChainNonARMDevices</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkMultiTarget</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkIRLength</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkCommRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkTCPIP</name>
+                    <state>aaa.bbb.ccc.ddd</state>
+                </option>
+                <option>
+                    <name>CCJLinkSpeedRadioV2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCUSBDevice</name>
+                    <version>1</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCRDICatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCRDICatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkBreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCJLinkInterfaceRadio</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJLinkResetList</name>
+                    <version>6</version>
+                    <state>5</state>
+                </option>
+                <option>
+                    <name>CCJLinkInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkScriptFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJLinkUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCTcpIpAlt</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCJLinkTcpIpSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockEdit</name>
+                    <state>2000</state>
+                </option>
+                <option>
+                    <name>OCJLinkTraceSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkTraceSourceDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCJLinkDeviceName</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>LMIFTDI_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>2</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>LmiftdiSpeed</name>
+                    <state>500</state>
+                </option>
+                <option>
+                    <name>CCLmiftdiDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCLmiftdiLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCLmiFtdiInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCLmiFtdiInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>NULINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>PEMICRO_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>3</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCJPEMicroShowSettings</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>STLINK_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>5</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCSTLinkCatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDAPNumber</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCSTLinkInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkResetList</name>
+                    <version>3</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCpuClockEdit</name>
+                    <state>72.0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSwoClockEdit</name>
+                    <state>2000</state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkCatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCSTLinkUsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkJtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkDebugAccessPortRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSTLinkUseServerSelect</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>THIRDPARTY_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CThirdPartyDriverDll</name>
+                    <state>###Uninitialized###</state>
+                </option>
+                <option>
+                    <name>CThirdPartyLogFileCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CThirdPartyLogFileEditB</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>TIFET_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetResetList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetInterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetInterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetVccTypeDefault</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetVoltage</name>
+                    <state>###Uninitialized###</state>
+                </option>
+                <option>
+                    <name>CCMSPFetVCCDefault</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetTargetSettlingtime</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetRadioJtagSpeedType</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCMSPFetConnection</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetUsbComPort</name>
+                    <state>Automatic</state>
+                </option>
+                <option>
+                    <name>CCMSPFetAllowAccessToBSL</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetDoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCMSPFetLogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCMSPFetRadioEraseFlash</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>XDS100_ID</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>6</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCXds100CatchSFERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OCDriverInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TIPackageOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TIPackage</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>BoardFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>DoLogfile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>LogFile</name>
+                    <state>$PROJ_DIR$\cspycomm.log</state>
+                </option>
+                <option>
+                    <name>CCXds100BreakpointRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100DoUpdateBreakpoints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100UpdateBreakpoints</name>
+                    <state>_call_main</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchReset</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchUndef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchSWI</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchData</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchPrefetch</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchIRQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchFIQ</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchCORERESET</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchMMERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchNOCPERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchCHRERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchSTATERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchBUSERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchINTERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchHARDERR</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CatchDummy</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100CpuClockEdit</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCXds100SwoClockAuto</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SwoClockEdit</name>
+                    <state>1000</state>
+                </option>
+                <option>
+                    <name>CCXds100HWResetDelay</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100ResetList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100UsbSerialNo</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCXds100UsbSerialNoSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100JtagSpeedList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100InterfaceRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100InterfaceCmdLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100ProbeList</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SWOPortRadio</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCXds100SWOPort</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <debuggerPlugins>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\CMX\CmxTinyArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\embOS\embOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\FreeRtos\FreeRtosArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\Mbed\MbedArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\OpenRTOS\OpenRTOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SafeRTOS\SafeRTOSPlugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\SMX\smxAwareIarArm8BE.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\ThreadX\ThreadXArmPlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\TI-RTOS\tirtosplugin.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-286-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-II\uCOS-II-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$TOOLKIT_DIR$\plugins\rtos\uCOS-III\uCOS-III-KA-CSpy.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\CodeCoverage\CodeCoverage.ENU.ewplugin</file>
+                <loadFlag>1</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\Orti\Orti.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\TargetAccessServer\TargetAccessServer.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+            <plugin>
+                <file>$EW_DIR$\common\plugins\uCProbe\uCProbePlugin.ENU.ewplugin</file>
+                <loadFlag>0</loadFlag>
+            </plugin>
+        </debuggerPlugins>
+    </configuration>
+</project>
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.ewp b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.ewp
new file mode 100644
index 0000000..44abb9f
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.ewp
@@ -0,0 +1,5062 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project>
+    <fileVersion>3</fileVersion>
+    <configuration>
+        <name>debug</name>
+        <toolchain>
+            <name>ARM</name>
+        </toolchain>
+        <debug>1</debug>
+        <settings>
+            <name>General</name>
+            <archiveVersion>3</archiveVersion>
+            <data>
+                <version>31</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>ExePath</name>
+                    <state>$PROJ_DIR$/debug</state>
+                </option>
+                <option>
+                    <name>ObjPath</name>
+                    <state>$PROJ_DIR$/debug/obj</state>
+                </option>
+                <option>
+                    <name>ListPath</name>
+                    <state>$PROJ_DIR$/debug/list</state>
+                </option>
+                <option>
+                    <name>GEndianMode</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>Input description</name>
+                    <state>No specifier n, no float nor long long, no scan set, no assignment suppressing, without multibyte support.</state>
+                </option>
+                <option>
+                    <name>Output description</name>
+                    <state>No specifier a, A, no specifier n, no float nor long long, without multibyte support.</state>
+                </option>
+                <option>
+                    <name>GOutputBinary</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGCoreOrChip</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibSelect</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibSelectSlave</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RTDescription</name>
+                    <state>Use the normal configuration of the C/C++ runtime library. No locale interface, C locale, no file descriptor support, no multibytes in printf and scanf, and no hex floats in strtod.</state>
+                </option>
+                <option>
+                    <name>OGProductVersion</name>
+                    <state>6.50.6.4952</state>
+                </option>
+                <option>
+                    <name>OGLastSavedByProductVersion</name>
+                    <state>8.32.2.19370</state>
+                </option>
+                <option>
+                    <name>GeneralEnableMisra</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraVerbose</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGChipSelectEditMenu</name>
+                    <state>MCIMX7U5_M4	NXP MCIMX7U5_M4</state>
+                </option>
+                <option>
+                    <name>GenLowLevelInterface</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GEndianModeBE</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OGBufferedTerminalOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GenStdoutInterface</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraRules98</name>
+                    <version>0</version>
+                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
+                </option>
+                <option>
+                    <name>GeneralMisraVer</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraRules04</name>
+                    <version>0</version>
+                    <state>011111110111111110111111110011011101111010111010111110001010101111110111111111010101111111101111111111110111110011111111011111111110111101111</state>
+                </option>
+                <option>
+                    <name>RTConfigPath2</name>
+                    <state>$TOOLKIT_DIR$\inc\c\DLib_Config_Normal.h</state>
+                </option>
+                <option>
+                    <name>GBECoreSlave</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>OGUseCmsis</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGUseCmsisDspLib</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibThreads</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CoreVariant</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>GFPUDeviceSlave</name>
+                    <state>MCIMX7U5_M4	NXP MCIMX7U5_M4</state>
+                </option>
+                <option>
+                    <name>FPU2</name>
+                    <version>0</version>
+                    <state>4</state>
+                </option>
+                <option>
+                    <name>NrRegs</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>NEON</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GFPUCoreSlave2</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>OGCMSISPackSelectDevice</name>
+                </option>
+                <option>
+                    <name>OgLibHeap</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGLibAdditionalLocale</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGPrintfVariant</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OGPrintfMultibyteSupport</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGScanfVariant</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OGScanfMultibyteSupport</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GenLocaleTags</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>GenLocaleDisplayOnly</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>DSPExtension</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>TrustZone</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TrustZoneModes</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>ICCARM</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>35</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCDefines</name>
+                    <state>SRTM_DEBUG_MESSAGE_FUNC=DbgConsole_Printf</state>
+                    <state>SRTM_DEBUG_VERBOSE_LEVEL=SRTM_DEBUG_VERBOSE_WARN</state>
+                    <state>DEBUG</state>
+                    <state>CPU_MCIMX7U5DVP08</state>
+                    <state>FSL_RTOS_FREE_RTOS</state>
+                    <state>SDK_I2C_BASED_COMPONENT_USED=1</state>
+                    <state>BOARD_USE_CODEC=1</state>
+                </option>
+                <option>
+                    <name>CCPreprocFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPreprocComments</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPreprocLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCMnemonics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCMessages</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListAssFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListAssSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEnableRemarks</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCDiagSuppress</name>
+                    <state>Pa082,Pa050</state>
+                </option>
+                <option>
+                    <name>CCDiagRemark</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCDiagWarning</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCDiagError</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCObjPrefix</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCAllowList</name>
+                    <version>1</version>
+                    <state>00100000</state>
+                </option>
+                <option>
+                    <name>CCDebugInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IEndianMode</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IExtraOptionsCheck</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCLangConformance</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSignedPlainChar</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCRequirePrototypes</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCDiagWarnAreErr</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCompilerRuntimeInfo</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OutputFile</name>
+                    <state>$FILE_BNAME$.o</state>
+                </option>
+                <option>
+                    <name>CCLibConfigHeader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>PreInclude</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CompilerMisraOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCIncludePath2</name>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F</state>
+                    <state>$PROJ_DIR$/..</state>
+                    <state>$PROJ_DIR$/../../..</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Include</state>
+                    <state>$PROJ_DIR$/../../../../../devices</state>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/include/private</state>
+                    <state>$PROJ_DIR$/../srtm/channels</state>
+                    <state>$PROJ_DIR$/../srtm/services</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities/str</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities/debug_console</state>
+                    <state>$PROJ_DIR$/../../../../../components/uart</state>
+                    <state>$PROJ_DIR$/../../../../../components/i2c</state>
+                    <state>$PROJ_DIR$/../../../../../components/serial_manager</state>
+                    <state>$PROJ_DIR$/../../../../../components/serial_manager</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/lists</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/bd70528</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec/wm8960</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec/i2c</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec/port</state>
+                    <state>$PROJ_DIR$/../../../../../components/srtm/include</state>
+                    <state>$PROJ_DIR$/../../../../../components/srtm/srtm</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include/platform/imx7ulp_m4</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/sensors</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/source</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/include/libinclude</state>
+                </option>
+                <option>
+                    <name>CCStdIncCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCodeSection</name>
+                    <state>.text</state>
+                </option>
+                <option>
+                    <name>IProcessorMode2</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCOptLevel</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptStrategy</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptLevelSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CompilerMisraRules98</name>
+                    <version>0</version>
+                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
+                </option>
+                <option>
+                    <name>CompilerMisraRules04</name>
+                    <version>0</version>
+                    <state>111101110010111111111000110111111111111111111111111110010111101111010101111111111111111111111111101111111011111001111011111011111111111111111</state>
+                </option>
+                <option>
+                    <name>CCPosIndRopi</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPosIndRwpi</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPosIndNoDynInit</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccLang</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccCDialect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccAllowVLA</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccStaticDestr</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccCppInlineSemantics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccCmsis</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccFloatSemantics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptimizationNoSizeConstraints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCNoLiteralPool</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptStrategySlave</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCGuardCalls</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCEncSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEncOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEncOutputBom</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCEncInput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccExceptions2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccRTTI2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OICompilerExtraOption</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>AARM</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>10</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>AObjPrefix</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AEndian</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>ACaseSensitivity</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacroChars</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>AWarnEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AWarnWhat</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AWarnOne</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AWarnRange1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AWarnRange2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>ADebug</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AltRegisterNames</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>ADefines</name>
+                    <state>DEBUG</state>
+                    <state>NO_CRP</state>
+                </option>
+                <option>
+                    <name>AList</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AListHeader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AListing</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>Includes</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacDefs</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacExps</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacExec</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OnlyAssed</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MultiLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>PageLengthCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>PageLength</name>
+                    <state>80</state>
+                </option>
+                <option>
+                    <name>TabSpacing</name>
+                    <state>8</state>
+                </option>
+                <option>
+                    <name>AXRef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefDefines</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefInternal</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefDual</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AOutputFile</name>
+                    <state>$FILE_BNAME$.o</state>
+                </option>
+                <option>
+                    <name>ALimitErrorsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>ALimitErrorsEdit</name>
+                    <state>100</state>
+                </option>
+                <option>
+                    <name>AIgnoreStdInclude</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AUserIncludes</name>
+                    <state>$PROJ_DIR$/..</state>
+                    <state>$PROJ_DIR$/../../..</state>
+                </option>
+                <option>
+                    <name>AExtraOptionsCheckV2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AExtraOptionsV2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AsmNoLiteralPool</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>OBJCOPY</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OOCOutputFormat</name>
+                    <version>3</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OCOutputOverride</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OOCOutputFile</name>
+                    <state>sdk20-app.bin</state>
+                </option>
+                <option>
+                    <name>OOCCommandLineProducer</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OOCObjCopyEnable</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CUSTOM</name>
+            <archiveVersion>3</archiveVersion>
+            <data>
+                <extensions></extensions>
+                <cmdline></cmdline>
+                <hasPrio>0</hasPrio>
+            </data>
+        </settings>
+        <settings>
+            <name>BICOMP</name>
+            <archiveVersion>0</archiveVersion>
+            <data />
+        </settings>
+        <settings>
+            <name>BUILDACTION</name>
+            <archiveVersion>1</archiveVersion>
+            <data>
+                <prebuild></prebuild>
+                <postbuild></postbuild>
+            </data>
+        </settings>
+        <settings>
+            <name>ILINK</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>22</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>IlinkLibIOConfig</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>XLinkMisraHandler</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkInputFileSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOutputFile</name>
+                    <state>power_mode_switch.out</state>
+                </option>
+                <option>
+                    <name>IlinkDebugInfoEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkKeepSymbols</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinaryFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinarySymbol</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinarySegment</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinaryAlign</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkDefines</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkConfigDefines</name>
+                    <state>__stack_size__=0x400</state>
+                    <state>__heap_size__=0x400</state>
+                </option>
+                <option>
+                    <name>IlinkMapFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLogFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogInitialization</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogModule</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogSection</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogVeneer</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIcfOverride</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFile</name>
+                    <state>$PROJ_DIR$/MCIMX7U5xxxxx_cm4_lpm_ram.icf</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFileSlave</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkEnableRemarks</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkSuppressDiags</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsRem</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsWarn</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsErr</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkWarningsAreErrors</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkUseExtraOptions</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkLowLevelInterfaceSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkAutoLibEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkAdditionalLibs</name>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/lib/libpedometerm4.a</state>
+                </option>
+                <option>
+                    <name>IlinkOverrideProgramEntryLabel</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkProgramEntryLabelSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkProgramEntryLabel</name>
+                    <state>Reset_Handler</state>
+                </option>
+                <option>
+                    <name>DoFill</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>FillerByte</name>
+                    <state>0xFF</state>
+                </option>
+                <option>
+                    <name>FillerStart</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>FillerEnd</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>CrcSize</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcAlign</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcPoly</name>
+                    <state>0x11021</state>
+                </option>
+                <option>
+                    <name>CrcCompl</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CrcBitOrder</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CrcInitialValue</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>DoCrc</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkBE8Slave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkBufferedTerminalOutput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkStdoutInterfaceSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcFullSize</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIElfToolPostProcess</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogAutoLibSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogRedirSymbols</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogUnusedFragments</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCrcReverseByteOrder</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCrcUseAsInput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptInline</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOptExceptionsAllow</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptExceptionsForce</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCmsis</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptMergeDuplSections</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOptUseVfe</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptForceVfe</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkStackAnalysisEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkStackControlFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkStackCallGraphFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CrcAlgorithm</name>
+                    <version>1</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcUnitSize</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkThreadsSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLogCallGraph</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFile_AltDefault</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkEncInput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkEncOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkEncOutputBom</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkHeapSelect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLocaleSelect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkTrustzoneImportLibraryOut</name>
+                    <state>###Unitialized###</state>
+                </option>
+                <option>
+                    <name>OILinkExtraOption</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>IARCHIVE</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>IarchiveInputs</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IarchiveOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IarchiveOutput</name>
+                    <state>###Unitialized###</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>BILINK</name>
+            <archiveVersion>0</archiveVersion>
+            <data />
+        </settings>
+    </configuration>
+    <configuration>
+        <name>flash_debug</name>
+        <toolchain>
+            <name>ARM</name>
+        </toolchain>
+        <debug>1</debug>
+        <settings>
+            <name>General</name>
+            <archiveVersion>3</archiveVersion>
+            <data>
+                <version>31</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>ExePath</name>
+                    <state>$PROJ_DIR$/flash_debug</state>
+                </option>
+                <option>
+                    <name>ObjPath</name>
+                    <state>$PROJ_DIR$/flash_debug/obj</state>
+                </option>
+                <option>
+                    <name>ListPath</name>
+                    <state>$PROJ_DIR$/flash_debug/list</state>
+                </option>
+                <option>
+                    <name>GEndianMode</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>Input description</name>
+                    <state>Automatic choice of formatter.</state>
+                </option>
+                <option>
+                    <name>Output description</name>
+                    <state>Automatic choice of formatter.</state>
+                </option>
+                <option>
+                    <name>GOutputBinary</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGCoreOrChip</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibSelect</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibSelectSlave</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RTDescription</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGProductVersion</name>
+                    <state>6.50.6.4952</state>
+                </option>
+                <option>
+                    <name>OGLastSavedByProductVersion</name>
+                    <state>7.60.1.11206</state>
+                </option>
+                <option>
+                    <name>GeneralEnableMisra</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraVerbose</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGChipSelectEditMenu</name>
+                    <state>MCIMX7U5_M4	NXP MCIMX7U5_M4</state>
+                </option>
+                <option>
+                    <name>GenLowLevelInterface</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GEndianModeBE</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OGBufferedTerminalOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GenStdoutInterface</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraRules98</name>
+                    <version>0</version>
+                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
+                </option>
+                <option>
+                    <name>GeneralMisraVer</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraRules04</name>
+                    <version>0</version>
+                    <state>011111110111111110111111110011011101111010111010111110001010101111110111111111010101111111101111111111110111110011111111011111111110111101111</state>
+                </option>
+                <option>
+                    <name>RTConfigPath2</name>
+                    <state>$TOOLKIT_DIR$\INC\c\DLib_Config_Normal.h</state>
+                </option>
+                <option>
+                    <name>GBECoreSlave</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>OGUseCmsis</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGUseCmsisDspLib</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibThreads</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CoreVariant</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>GFPUDeviceSlave</name>
+                    <state>MCIMX7U5_M4	NXP MCIMX7U5_M4</state>
+                </option>
+                <option>
+                    <name>FPU2</name>
+                    <version>0</version>
+                    <state>4</state>
+                </option>
+                <option>
+                    <name>NrRegs</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>NEON</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GFPUCoreSlave2</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>OGCMSISPackSelectDevice</name>
+                </option>
+                <option>
+                    <name>OgLibHeap</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGLibAdditionalLocale</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGPrintfVariant</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OGPrintfMultibyteSupport</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGScanfVariant</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OGScanfMultibyteSupport</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GenLocaleTags</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>GenLocaleDisplayOnly</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>DSPExtension</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TrustZone</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TrustZoneModes</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>ICCARM</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>35</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>CCDefines</name>
+                    <state>DEBUG</state>
+                    <state>FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1</state>
+                    <state>ENABLE_RAM_VECTOR_TABLE</state>
+                    <state>SRTM_DEBUG_MESSAGE_FUNC=DbgConsole_Printf</state>
+                    <state>SRTM_DEBUG_VERBOSE_LEVEL=SRTM_DEBUG_VERBOSE_WARN</state>
+                    <state>CPU_MCIMX7U5DVP08</state>
+                    <state>FSL_RTOS_FREE_RTOS</state>
+                    <state>SDK_I2C_BASED_COMPONENT_USED=1</state>
+                    <state>BOARD_USE_CODEC=1</state>
+                </option>
+                <option>
+                    <name>CCPreprocFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPreprocComments</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPreprocLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCMnemonics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCMessages</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListAssFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListAssSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEnableRemarks</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCDiagSuppress</name>
+                    <state>Pa082,Pa050</state>
+                </option>
+                <option>
+                    <name>CCDiagRemark</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCDiagWarning</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCDiagError</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCObjPrefix</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCAllowList</name>
+                    <version>1</version>
+                    <state>00100000</state>
+                </option>
+                <option>
+                    <name>CCDebugInfo</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IEndianMode</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IExtraOptionsCheck</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCLangConformance</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSignedPlainChar</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCRequirePrototypes</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCDiagWarnAreErr</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCompilerRuntimeInfo</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OutputFile</name>
+                    <state>$FILE_BNAME$.o</state>
+                </option>
+                <option>
+                    <name>CCLibConfigHeader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>PreInclude</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CompilerMisraOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCIncludePath2</name>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F</state>
+                    <state>$PROJ_DIR$/..</state>
+                    <state>$PROJ_DIR$/../../..</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Include</state>
+                    <state>$PROJ_DIR$/../../../../../devices</state>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/include/private</state>
+                    <state>$PROJ_DIR$/../srtm/channels</state>
+                    <state>$PROJ_DIR$/../srtm/services</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities/str</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities</state>
+                    <state>$PROJ_DIR$/../../../../../components/uart</state>
+                    <state>$PROJ_DIR$/../../../../../components/serial_manager</state>
+                    <state>$PROJ_DIR$/../../../../../components/serial_manager</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/lists</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/bd70528</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec/wm8960</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec</state>
+                    <state>$PROJ_DIR$/../../../../../components/srtm/include</state>
+                    <state>$PROJ_DIR$/../../../../../components/srtm/srtm</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include/platform/imx7ulp_m4</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/sensors</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/source</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/include/libinclude</state>
+                </option>
+                <option>
+                    <name>CCStdIncCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCodeSection</name>
+                    <state>.text</state>
+                </option>
+                <option>
+                    <name>IProcessorMode2</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCOptLevel</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptStrategy</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptLevelSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CompilerMisraRules98</name>
+                    <version>0</version>
+                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
+                </option>
+                <option>
+                    <name>CompilerMisraRules04</name>
+                    <version>0</version>
+                    <state>111101110010111111111000110111111111111111111111111110010111101111010101111111111111111111111111101111111011111001111011111011111111111111111</state>
+                </option>
+                <option>
+                    <name>CCPosIndRopi</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPosIndRwpi</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPosIndNoDynInit</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccLang</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccCDialect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccAllowVLA</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccStaticDestr</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccCppInlineSemantics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccCmsis</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccFloatSemantics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptimizationNoSizeConstraints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCNoLiteralPool</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptStrategySlave</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCGuardCalls</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCEncSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEncOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEncOutputBom</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCEncInput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccExceptions2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccRTTI2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OICompilerExtraOption</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>AARM</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>10</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>AObjPrefix</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AEndian</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>ACaseSensitivity</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacroChars</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>AWarnEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AWarnWhat</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AWarnOne</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AWarnRange1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AWarnRange2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>ADebug</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AltRegisterNames</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>ADefines</name>
+                    <state>DEBUG</state>
+                    <state>FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1</state>
+                    <state>ENABLE_RAM_VECTOR_TABLE</state>
+                    <state>NO_CRP</state>
+                </option>
+                <option>
+                    <name>AList</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AListHeader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AListing</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>Includes</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacDefs</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacExps</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacExec</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OnlyAssed</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MultiLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>PageLengthCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>PageLength</name>
+                    <state>80</state>
+                </option>
+                <option>
+                    <name>TabSpacing</name>
+                    <state>8</state>
+                </option>
+                <option>
+                    <name>AXRef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefDefines</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefInternal</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefDual</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AOutputFile</name>
+                    <state>$FILE_BNAME$.o</state>
+                </option>
+                <option>
+                    <name>ALimitErrorsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>ALimitErrorsEdit</name>
+                    <state>100</state>
+                </option>
+                <option>
+                    <name>AIgnoreStdInclude</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AUserIncludes</name>
+                    <state>$PROJ_DIR$/..</state>
+                    <state>$PROJ_DIR$/../../..</state>
+                </option>
+                <option>
+                    <name>AExtraOptionsCheckV2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AExtraOptionsV2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AsmNoLiteralPool</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>OBJCOPY</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>OOCOutputFormat</name>
+                    <version>3</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OCOutputOverride</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OOCOutputFile</name>
+                    <state>sdk20-app.bin</state>
+                </option>
+                <option>
+                    <name>OOCCommandLineProducer</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OOCObjCopyEnable</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CUSTOM</name>
+            <archiveVersion>3</archiveVersion>
+            <data>
+                <extensions></extensions>
+                <cmdline></cmdline>
+                <hasPrio>0</hasPrio>
+            </data>
+        </settings>
+        <settings>
+            <name>BICOMP</name>
+            <archiveVersion>0</archiveVersion>
+            <data />
+        </settings>
+        <settings>
+            <name>BUILDACTION</name>
+            <archiveVersion>1</archiveVersion>
+            <data>
+                <prebuild></prebuild>
+                <postbuild></postbuild>
+            </data>
+        </settings>
+        <settings>
+            <name>ILINK</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>22</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>IlinkLibIOConfig</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>XLinkMisraHandler</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkInputFileSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOutputFile</name>
+                    <state>power_mode_switch.out</state>
+                </option>
+                <option>
+                    <name>IlinkDebugInfoEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkKeepSymbols</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinaryFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinarySymbol</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinarySegment</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinaryAlign</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkDefines</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkConfigDefines</name>
+                    <state>__ram_vector_table__=1</state>
+                    <state>__stack_size__=0x400</state>
+                    <state>__heap_size__=0x400</state>
+                </option>
+                <option>
+                    <name>IlinkMapFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLogFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogInitialization</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogModule</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogSection</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogVeneer</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIcfOverride</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFile</name>
+                    <state>$PROJ_DIR$/MCIMX7U5xxxxx_cm4_lpm_flash.icf</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFileSlave</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkEnableRemarks</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkSuppressDiags</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsRem</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsWarn</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsErr</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkWarningsAreErrors</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkUseExtraOptions</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkLowLevelInterfaceSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkAutoLibEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkAdditionalLibs</name>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/lib/libpedometerm4.a</state>
+                </option>
+                <option>
+                    <name>IlinkOverrideProgramEntryLabel</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkProgramEntryLabelSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkProgramEntryLabel</name>
+                    <state>Reset_Handler</state>
+                </option>
+                <option>
+                    <name>DoFill</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>FillerByte</name>
+                    <state>0xFF</state>
+                </option>
+                <option>
+                    <name>FillerStart</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>FillerEnd</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>CrcSize</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcAlign</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcPoly</name>
+                    <state>0x11021</state>
+                </option>
+                <option>
+                    <name>CrcCompl</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CrcBitOrder</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CrcInitialValue</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>DoCrc</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkBE8Slave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkBufferedTerminalOutput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkStdoutInterfaceSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcFullSize</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIElfToolPostProcess</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogAutoLibSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogRedirSymbols</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogUnusedFragments</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCrcReverseByteOrder</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCrcUseAsInput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptInline</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOptExceptionsAllow</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptExceptionsForce</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCmsis</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptMergeDuplSections</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOptUseVfe</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptForceVfe</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkStackAnalysisEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkStackControlFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkStackCallGraphFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CrcAlgorithm</name>
+                    <version>1</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcUnitSize</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkThreadsSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLogCallGraph</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFile_AltDefault</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkEncInput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkEncOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkEncOutputBom</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkHeapSelect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLocaleSelect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkTrustzoneImportLibraryOut</name>
+                    <state>###Unitialized###</state>
+                </option>
+                <option>
+                    <name>OILinkExtraOption</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>IARCHIVE</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>1</debug>
+                <option>
+                    <name>IarchiveInputs</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IarchiveOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IarchiveOutput</name>
+                    <state>###Unitialized###</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>BILINK</name>
+            <archiveVersion>0</archiveVersion>
+            <data />
+        </settings>
+    </configuration>
+    <configuration>
+        <name>release</name>
+        <toolchain>
+            <name>ARM</name>
+        </toolchain>
+        <debug>0</debug>
+        <settings>
+            <name>General</name>
+            <archiveVersion>3</archiveVersion>
+            <data>
+                <version>31</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>ExePath</name>
+                    <state>$PROJ_DIR$/release</state>
+                </option>
+                <option>
+                    <name>ObjPath</name>
+                    <state>$PROJ_DIR$/release/obj</state>
+                </option>
+                <option>
+                    <name>ListPath</name>
+                    <state>$PROJ_DIR$/release/list</state>
+                </option>
+                <option>
+                    <name>GEndianMode</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>Input description</name>
+                    <state>Automatic choice of formatter.</state>
+                </option>
+                <option>
+                    <name>Output description</name>
+                    <state>Automatic choice of formatter.</state>
+                </option>
+                <option>
+                    <name>GOutputBinary</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGCoreOrChip</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibSelect</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibSelectSlave</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RTDescription</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGProductVersion</name>
+                    <state>6.50.6.4952</state>
+                </option>
+                <option>
+                    <name>OGLastSavedByProductVersion</name>
+                    <state>7.60.1.11206</state>
+                </option>
+                <option>
+                    <name>GeneralEnableMisra</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraVerbose</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGChipSelectEditMenu</name>
+                    <state>MCIMX7U5_M4	NXP MCIMX7U5_M4</state>
+                </option>
+                <option>
+                    <name>GenLowLevelInterface</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GEndianModeBE</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OGBufferedTerminalOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GenStdoutInterface</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraRules98</name>
+                    <version>0</version>
+                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
+                </option>
+                <option>
+                    <name>GeneralMisraVer</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraRules04</name>
+                    <version>0</version>
+                    <state>011111110111111110111111110011011101111010111010111110001010101111110111111111010101111111101111111111110111110011111111011111111110111101111</state>
+                </option>
+                <option>
+                    <name>RTConfigPath2</name>
+                    <state>$TOOLKIT_DIR$\INC\c\DLib_Config_Normal.h</state>
+                </option>
+                <option>
+                    <name>GBECoreSlave</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>OGUseCmsis</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGUseCmsisDspLib</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibThreads</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CoreVariant</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>GFPUDeviceSlave</name>
+                    <state>MCIMX7U5_M4	NXP MCIMX7U5_M4</state>
+                </option>
+                <option>
+                    <name>FPU2</name>
+                    <version>0</version>
+                    <state>4</state>
+                </option>
+                <option>
+                    <name>NrRegs</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>NEON</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GFPUCoreSlave2</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>OGCMSISPackSelectDevice</name>
+                </option>
+                <option>
+                    <name>OgLibHeap</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGLibAdditionalLocale</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGPrintfVariant</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OGPrintfMultibyteSupport</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGScanfVariant</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OGScanfMultibyteSupport</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GenLocaleTags</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>GenLocaleDisplayOnly</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>DSPExtension</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TrustZone</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TrustZoneModes</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>ICCARM</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>35</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCDefines</name>
+                    <state>NDEBUG</state>
+                    <state>CPU_MCIMX7U5DVP08</state>
+                    <state>FSL_RTOS_FREE_RTOS</state>
+                    <state>SDK_I2C_BASED_COMPONENT_USED=1</state>
+                    <state>BOARD_USE_CODEC=1</state>
+                </option>
+                <option>
+                    <name>CCPreprocFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPreprocComments</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPreprocLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCMnemonics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCMessages</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListAssFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListAssSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEnableRemarks</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCDiagSuppress</name>
+                    <state>Pa082,Pa050</state>
+                </option>
+                <option>
+                    <name>CCDiagRemark</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCDiagWarning</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCDiagError</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCObjPrefix</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCAllowList</name>
+                    <version>1</version>
+                    <state>11111110</state>
+                </option>
+                <option>
+                    <name>CCDebugInfo</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IEndianMode</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IExtraOptionsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCLangConformance</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSignedPlainChar</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCRequirePrototypes</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCDiagWarnAreErr</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCompilerRuntimeInfo</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OutputFile</name>
+                    <state>$FILE_BNAME$.o</state>
+                </option>
+                <option>
+                    <name>CCLibConfigHeader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>PreInclude</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CompilerMisraOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCIncludePath2</name>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F</state>
+                    <state>$PROJ_DIR$/..</state>
+                    <state>$PROJ_DIR$/../../..</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Include</state>
+                    <state>$PROJ_DIR$/../../../../../devices</state>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/include/private</state>
+                    <state>$PROJ_DIR$/../srtm/channels</state>
+                    <state>$PROJ_DIR$/../srtm/services</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities/str</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities</state>
+                    <state>$PROJ_DIR$/../../../../../components/uart</state>
+                    <state>$PROJ_DIR$/../../../../../components/serial_manager</state>
+                    <state>$PROJ_DIR$/../../../../../components/serial_manager</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/lists</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/bd70528</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec/wm8960</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec</state>
+                    <state>$PROJ_DIR$/../../../../../components/srtm/include</state>
+                    <state>$PROJ_DIR$/../../../../../components/srtm/srtm</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include/platform/imx7ulp_m4</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/sensors</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/source</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/include/libinclude</state>
+                </option>
+                <option>
+                    <name>CCStdIncCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCodeSection</name>
+                    <state>.text</state>
+                </option>
+                <option>
+                    <name>IProcessorMode2</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCOptLevel</name>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>CCOptStrategy</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptLevelSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CompilerMisraRules98</name>
+                    <version>0</version>
+                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
+                </option>
+                <option>
+                    <name>CompilerMisraRules04</name>
+                    <version>0</version>
+                    <state>111101110010111111111000110111111111111111111111111110010111101111010101111111111111111111111111101111111011111001111011111011111111111111111</state>
+                </option>
+                <option>
+                    <name>CCPosIndRopi</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPosIndRwpi</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPosIndNoDynInit</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccLang</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccCDialect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccAllowVLA</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccStaticDestr</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccCppInlineSemantics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccCmsis</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccFloatSemantics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptimizationNoSizeConstraints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCNoLiteralPool</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptStrategySlave</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCGuardCalls</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCEncSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEncOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEncOutputBom</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCEncInput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccExceptions2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccRTTI2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OICompilerExtraOption</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>AARM</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>10</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>AObjPrefix</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AEndian</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>ACaseSensitivity</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacroChars</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>AWarnEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AWarnWhat</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AWarnOne</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AWarnRange1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AWarnRange2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>ADebug</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AltRegisterNames</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>ADefines</name>
+                    <state>NDEBUG</state>
+                    <state>NO_CRP</state>
+                </option>
+                <option>
+                    <name>AList</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AListHeader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AListing</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>Includes</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacDefs</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacExps</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacExec</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OnlyAssed</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MultiLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>PageLengthCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>PageLength</name>
+                    <state>80</state>
+                </option>
+                <option>
+                    <name>TabSpacing</name>
+                    <state>8</state>
+                </option>
+                <option>
+                    <name>AXRef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefDefines</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefInternal</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefDual</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AOutputFile</name>
+                    <state>$FILE_BNAME$.o</state>
+                </option>
+                <option>
+                    <name>ALimitErrorsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>ALimitErrorsEdit</name>
+                    <state>100</state>
+                </option>
+                <option>
+                    <name>AIgnoreStdInclude</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AUserIncludes</name>
+                    <state>$PROJ_DIR$/..</state>
+                    <state>$PROJ_DIR$/../../..</state>
+                </option>
+                <option>
+                    <name>AExtraOptionsCheckV2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AExtraOptionsV2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AsmNoLiteralPool</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>OBJCOPY</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OOCOutputFormat</name>
+                    <version>3</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OCOutputOverride</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OOCOutputFile</name>
+                    <state>sdk20-app.bin</state>
+                </option>
+                <option>
+                    <name>OOCCommandLineProducer</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OOCObjCopyEnable</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CUSTOM</name>
+            <archiveVersion>3</archiveVersion>
+            <data>
+                <extensions></extensions>
+                <cmdline></cmdline>
+                <hasPrio>0</hasPrio>
+            </data>
+        </settings>
+        <settings>
+            <name>BICOMP</name>
+            <archiveVersion>0</archiveVersion>
+            <data />
+        </settings>
+        <settings>
+            <name>BUILDACTION</name>
+            <archiveVersion>1</archiveVersion>
+            <data>
+                <prebuild></prebuild>
+                <postbuild></postbuild>
+            </data>
+        </settings>
+        <settings>
+            <name>ILINK</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>22</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>IlinkLibIOConfig</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>XLinkMisraHandler</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkInputFileSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOutputFile</name>
+                    <state>power_mode_switch.out</state>
+                </option>
+                <option>
+                    <name>IlinkDebugInfoEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkKeepSymbols</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinaryFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinarySymbol</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinarySegment</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinaryAlign</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkDefines</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkConfigDefines</name>
+                    <state>__stack_size__=0x400</state>
+                    <state>__heap_size__=0x400</state>
+                </option>
+                <option>
+                    <name>IlinkMapFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLogFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogInitialization</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogModule</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogSection</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogVeneer</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIcfOverride</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFile</name>
+                    <state>$PROJ_DIR$/MCIMX7U5xxxxx_cm4_lpm_ram.icf</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFileSlave</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkEnableRemarks</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkSuppressDiags</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsRem</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsWarn</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsErr</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkWarningsAreErrors</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkUseExtraOptions</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkLowLevelInterfaceSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkAutoLibEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkAdditionalLibs</name>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/lib/libpedometerm4.a</state>
+                </option>
+                <option>
+                    <name>IlinkOverrideProgramEntryLabel</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkProgramEntryLabelSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkProgramEntryLabel</name>
+                    <state>Reset_Handler</state>
+                </option>
+                <option>
+                    <name>DoFill</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>FillerByte</name>
+                    <state>0xFF</state>
+                </option>
+                <option>
+                    <name>FillerStart</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>FillerEnd</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>CrcSize</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcAlign</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcPoly</name>
+                    <state>0x11021</state>
+                </option>
+                <option>
+                    <name>CrcCompl</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CrcBitOrder</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CrcInitialValue</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>DoCrc</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkBE8Slave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkBufferedTerminalOutput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkStdoutInterfaceSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcFullSize</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIElfToolPostProcess</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogAutoLibSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogRedirSymbols</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogUnusedFragments</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCrcReverseByteOrder</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCrcUseAsInput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptInline</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptExceptionsAllow</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptExceptionsForce</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCmsis</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptMergeDuplSections</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOptUseVfe</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptForceVfe</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkStackAnalysisEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkStackControlFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkStackCallGraphFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CrcAlgorithm</name>
+                    <version>1</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcUnitSize</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkThreadsSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLogCallGraph</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFile_AltDefault</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkEncInput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkEncOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkEncOutputBom</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkHeapSelect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLocaleSelect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkTrustzoneImportLibraryOut</name>
+                    <state>###Unitialized###</state>
+                </option>
+                <option>
+                    <name>OILinkExtraOption</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>IARCHIVE</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>IarchiveInputs</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IarchiveOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IarchiveOutput</name>
+                    <state></state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>BILINK</name>
+            <archiveVersion>0</archiveVersion>
+            <data />
+        </settings>
+    </configuration>
+    <configuration>
+        <name>flash_release</name>
+        <toolchain>
+            <name>ARM</name>
+        </toolchain>
+        <debug>0</debug>
+        <settings>
+            <name>General</name>
+            <archiveVersion>3</archiveVersion>
+            <data>
+                <version>31</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>ExePath</name>
+                    <state>$PROJ_DIR$/flash_release</state>
+                </option>
+                <option>
+                    <name>ObjPath</name>
+                    <state>$PROJ_DIR$/flash_release/obj</state>
+                </option>
+                <option>
+                    <name>ListPath</name>
+                    <state>$PROJ_DIR$/flash_release/list</state>
+                </option>
+                <option>
+                    <name>GEndianMode</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>Input description</name>
+                    <state>Automatic choice of formatter.</state>
+                </option>
+                <option>
+                    <name>Output description</name>
+                    <state>Automatic choice of formatter.</state>
+                </option>
+                <option>
+                    <name>GOutputBinary</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGCoreOrChip</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibSelect</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibSelectSlave</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>RTDescription</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGProductVersion</name>
+                    <state>6.50.6.4952</state>
+                </option>
+                <option>
+                    <name>OGLastSavedByProductVersion</name>
+                    <state>7.60.1.11206</state>
+                </option>
+                <option>
+                    <name>GeneralEnableMisra</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraVerbose</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGChipSelectEditMenu</name>
+                    <state>MCIMX7U5_M4	NXP MCIMX7U5_M4</state>
+                </option>
+                <option>
+                    <name>GenLowLevelInterface</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GEndianModeBE</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OGBufferedTerminalOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GenStdoutInterface</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraRules98</name>
+                    <version>0</version>
+                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
+                </option>
+                <option>
+                    <name>GeneralMisraVer</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GeneralMisraRules04</name>
+                    <version>0</version>
+                    <state>011111110111111110111111110011011101111010111010111110001010101111110111111111010101111111101111111111110111110011111111011111111110111101111</state>
+                </option>
+                <option>
+                    <name>RTConfigPath2</name>
+                    <state>$TOOLKIT_DIR$\INC\c\DLib_Config_Normal.h</state>
+                </option>
+                <option>
+                    <name>GBECoreSlave</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>OGUseCmsis</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGUseCmsisDspLib</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GRuntimeLibThreads</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CoreVariant</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>GFPUDeviceSlave</name>
+                    <state>MCIMX7U5_M4	NXP MCIMX7U5_M4</state>
+                </option>
+                <option>
+                    <name>FPU2</name>
+                    <version>0</version>
+                    <state>4</state>
+                </option>
+                <option>
+                    <name>NrRegs</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>NEON</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GFPUCoreSlave2</name>
+                    <version>27</version>
+                    <state>39</state>
+                </option>
+                <option>
+                    <name>OGCMSISPackSelectDevice</name>
+                </option>
+                <option>
+                    <name>OgLibHeap</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGLibAdditionalLocale</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGPrintfVariant</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OGPrintfMultibyteSupport</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OGScanfVariant</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OGScanfMultibyteSupport</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>GenLocaleTags</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>GenLocaleDisplayOnly</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>DSPExtension</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TrustZone</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>TrustZoneModes</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>ICCARM</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>35</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>CCDefines</name>
+                    <state>NDEBUG</state>
+                    <state>FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1</state>
+                    <state>ENABLE_RAM_VECTOR_TABLE</state>
+                    <state>CPU_MCIMX7U5DVP08</state>
+                    <state>FSL_RTOS_FREE_RTOS</state>
+                    <state>SDK_I2C_BASED_COMPONENT_USED=1</state>
+                    <state>BOARD_USE_CODEC=1</state>
+                </option>
+                <option>
+                    <name>CCPreprocFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPreprocComments</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPreprocLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCMnemonics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListCMessages</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListAssFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCListAssSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEnableRemarks</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCDiagSuppress</name>
+                    <state>Pa082,Pa050</state>
+                </option>
+                <option>
+                    <name>CCDiagRemark</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCDiagWarning</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCDiagError</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCObjPrefix</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCAllowList</name>
+                    <version>1</version>
+                    <state>11111110</state>
+                </option>
+                <option>
+                    <name>CCDebugInfo</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IEndianMode</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IExtraOptionsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CCLangConformance</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCSignedPlainChar</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCRequirePrototypes</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCDiagWarnAreErr</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCompilerRuntimeInfo</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OutputFile</name>
+                    <state>$FILE_BNAME$.o</state>
+                </option>
+                <option>
+                    <name>CCLibConfigHeader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>PreInclude</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CompilerMisraOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCIncludePath2</name>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F</state>
+                    <state>$PROJ_DIR$/..</state>
+                    <state>$PROJ_DIR$/../../..</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Include</state>
+                    <state>$PROJ_DIR$/../../../../../devices</state>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../rtos/amazon-freertos/lib/include/private</state>
+                    <state>$PROJ_DIR$/../srtm/channels</state>
+                    <state>$PROJ_DIR$/../srtm/services</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities/str</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/utilities</state>
+                    <state>$PROJ_DIR$/../../../../../components/uart</state>
+                    <state>$PROJ_DIR$/../../../../../components/serial_manager</state>
+                    <state>$PROJ_DIR$/../../../../../components/serial_manager</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/lists</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/bd70528</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../devices/MCIMX7U5/drivers</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec/wm8960</state>
+                    <state>$PROJ_DIR$/../../../../../components/codec</state>
+                    <state>$PROJ_DIR$/../../../../../components/srtm/include</state>
+                    <state>$PROJ_DIR$/../../../../../components/srtm/srtm</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include/platform/imx7ulp_m4</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/multicore/rpmsg_lite/lib/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/sensors</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../CMSIS/Driver/Include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/source</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/include</state>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/include/libinclude</state>
+                </option>
+                <option>
+                    <name>CCStdIncCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCCodeSection</name>
+                    <state>.text</state>
+                </option>
+                <option>
+                    <name>IProcessorMode2</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCOptLevel</name>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>CCOptStrategy</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptLevelSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CompilerMisraRules98</name>
+                    <version>0</version>
+                    <state>1000111110110101101110011100111111101110011011000101110111101101100111111111111100110011111001110111001111111111111111111111111</state>
+                </option>
+                <option>
+                    <name>CompilerMisraRules04</name>
+                    <version>0</version>
+                    <state>111101110010111111111000110111111111111111111111111110010111101111010101111111111111111111111111101111111011111001111011111011111111111111111</state>
+                </option>
+                <option>
+                    <name>CCPosIndRopi</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPosIndRwpi</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCPosIndNoDynInit</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccLang</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccCDialect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccAllowVLA</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccStaticDestr</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccCppInlineSemantics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccCmsis</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IccFloatSemantics</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptimizationNoSizeConstraints</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCNoLiteralPool</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCOptStrategySlave</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCGuardCalls</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCEncSource</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEncOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CCEncOutputBom</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CCEncInput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccExceptions2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IccRTTI2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OICompilerExtraOption</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>AARM</name>
+            <archiveVersion>2</archiveVersion>
+            <data>
+                <version>10</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>AObjPrefix</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AEndian</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>ACaseSensitivity</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacroChars</name>
+                    <version>0</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>AWarnEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AWarnWhat</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AWarnOne</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AWarnRange1</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AWarnRange2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>ADebug</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AltRegisterNames</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>ADefines</name>
+                    <state>NDEBUG</state>
+                    <state>FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE=1</state>
+                    <state>ENABLE_RAM_VECTOR_TABLE</state>
+                    <state>NO_CRP</state>
+                </option>
+                <option>
+                    <name>AList</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AListHeader</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AListing</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>Includes</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacDefs</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MacExps</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>MacExec</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>OnlyAssed</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>MultiLine</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>PageLengthCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>PageLength</name>
+                    <state>80</state>
+                </option>
+                <option>
+                    <name>TabSpacing</name>
+                    <state>8</state>
+                </option>
+                <option>
+                    <name>AXRef</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefDefines</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefInternal</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AXRefDual</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AFpuProcessor</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>AOutputFile</name>
+                    <state>$FILE_BNAME$.o</state>
+                </option>
+                <option>
+                    <name>ALimitErrorsCheck</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>ALimitErrorsEdit</name>
+                    <state>100</state>
+                </option>
+                <option>
+                    <name>AIgnoreStdInclude</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AUserIncludes</name>
+                    <state>$PROJ_DIR$/..</state>
+                    <state>$PROJ_DIR$/../../..</state>
+                </option>
+                <option>
+                    <name>AExtraOptionsCheckV2</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>AExtraOptionsV2</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>AsmNoLiteralPool</name>
+                    <state>0</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>OBJCOPY</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>1</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>OOCOutputFormat</name>
+                    <version>3</version>
+                    <state>3</state>
+                </option>
+                <option>
+                    <name>OCOutputOverride</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OOCOutputFile</name>
+                    <state>sdk20-app.bin</state>
+                </option>
+                <option>
+                    <name>OOCCommandLineProducer</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>OOCObjCopyEnable</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>CUSTOM</name>
+            <archiveVersion>3</archiveVersion>
+            <data>
+                <extensions></extensions>
+                <cmdline></cmdline>
+                <hasPrio>0</hasPrio>
+            </data>
+        </settings>
+        <settings>
+            <name>BICOMP</name>
+            <archiveVersion>0</archiveVersion>
+            <data />
+        </settings>
+        <settings>
+            <name>BUILDACTION</name>
+            <archiveVersion>1</archiveVersion>
+            <data>
+                <prebuild></prebuild>
+                <postbuild></postbuild>
+            </data>
+        </settings>
+        <settings>
+            <name>ILINK</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>22</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>IlinkLibIOConfig</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>XLinkMisraHandler</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkInputFileSlave</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOutputFile</name>
+                    <state>power_mode_switch.out</state>
+                </option>
+                <option>
+                    <name>IlinkDebugInfoEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkKeepSymbols</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinaryFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinarySymbol</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinarySegment</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkRawBinaryAlign</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkDefines</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkConfigDefines</name>
+                    <state>__ram_vector_table__=1</state>
+                    <state>__stack_size__=0x400</state>
+                    <state>__heap_size__=0x400</state>
+                </option>
+                <option>
+                    <name>IlinkMapFile</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLogFile</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogInitialization</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogModule</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogSection</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogVeneer</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIcfOverride</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFile</name>
+                    <state>$PROJ_DIR$/MCIMX7U5xxxxx_cm4_lpm_flash.icf</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFileSlave</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkEnableRemarks</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkSuppressDiags</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsRem</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsWarn</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkTreatAsErr</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkWarningsAreErrors</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkUseExtraOptions</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkExtraOptions</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkLowLevelInterfaceSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkAutoLibEnable</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkAdditionalLibs</name>
+                    <state>$PROJ_DIR$/../../../../../middleware/issdk/algorithms/pedometer/lib/libpedometerm4.a</state>
+                </option>
+                <option>
+                    <name>IlinkOverrideProgramEntryLabel</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkProgramEntryLabelSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkProgramEntryLabel</name>
+                    <state>Reset_Handler</state>
+                </option>
+                <option>
+                    <name>DoFill</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>FillerByte</name>
+                    <state>0xFF</state>
+                </option>
+                <option>
+                    <name>FillerStart</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>FillerEnd</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>CrcSize</name>
+                    <version>0</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcAlign</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcPoly</name>
+                    <state>0x11021</state>
+                </option>
+                <option>
+                    <name>CrcCompl</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CrcBitOrder</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>CrcInitialValue</name>
+                    <state>0x0</state>
+                </option>
+                <option>
+                    <name>DoCrc</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkBE8Slave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkBufferedTerminalOutput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkStdoutInterfaceSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcFullSize</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIElfToolPostProcess</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogAutoLibSelect</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogRedirSymbols</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkLogUnusedFragments</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCrcReverseByteOrder</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCrcUseAsInput</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptInline</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptExceptionsAllow</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptExceptionsForce</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkCmsis</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptMergeDuplSections</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkOptUseVfe</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkOptForceVfe</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkStackAnalysisEnable</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkStackControlFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkStackCallGraphFile</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>CrcAlgorithm</name>
+                    <version>1</version>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>CrcUnitSize</name>
+                    <version>0</version>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkThreadsSlave</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLogCallGraph</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkIcfFile_AltDefault</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IlinkEncInput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkEncOutput</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IlinkEncOutputBom</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkHeapSelect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkLocaleSelect</name>
+                    <state>1</state>
+                </option>
+                <option>
+                    <name>IlinkTrustzoneImportLibraryOut</name>
+                    <state>###Unitialized###</state>
+                </option>
+                <option>
+                    <name>OILinkExtraOption</name>
+                    <state>1</state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>IARCHIVE</name>
+            <archiveVersion>0</archiveVersion>
+            <data>
+                <version>0</version>
+                <wantNonLocal>1</wantNonLocal>
+                <debug>0</debug>
+                <option>
+                    <name>IarchiveInputs</name>
+                    <state></state>
+                </option>
+                <option>
+                    <name>IarchiveOverride</name>
+                    <state>0</state>
+                </option>
+                <option>
+                    <name>IarchiveOutput</name>
+                    <state></state>
+                </option>
+            </data>
+        </settings>
+        <settings>
+            <name>BILINK</name>
+            <archiveVersion>0</archiveVersion>
+            <data />
+        </settings>
+    </configuration>
+    <group>
+        <name>amazon-freertos</name>
+        <group>
+            <name>FreeRTOS</name>
+            <group>
+                <name>portable</name>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\portable\IAR\ARM_CM4F\fsl_tickless_generic.h</name>
+                </file>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\portable\MemMang\heap_4.c</name>
+                </file>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\portable\IAR\ARM_CM4F\port.c</name>
+                </file>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\portable\IAR\ARM_CM4F\portasm.s</name>
+                </file>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\portable\IAR\ARM_CM4F\portmacro.h</name>
+                </file>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\portable\readme.txt</name>
+                </file>
+            </group>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\event_groups.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\list.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\queue.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\stream_buffer.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\tasks.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\FreeRTOS\timers.c</name>
+            </file>
+        </group>
+        <group>
+            <name>include</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\private\deprecated_definitions.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\event_groups.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\FreeRTOS.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\freertos_tasks_c_additions.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\private\list.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\message_buffer.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\private\mpu_wrappers.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\private\portable.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\private\projdefs.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\queue.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\semphr.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\private\stack_macros.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\stream_buffer.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\task.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\lib\include\timers.h</name>
+            </file>
+        </group>
+        <group>
+            <name>license</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\rtos\amazon-freertos\LICENSE</name>
+            </file>
+        </group>
+    </group>
+    <group>
+        <name>board</name>
+        <file>
+            <name>$PROJ_DIR$\..\board.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\board.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\clock_config.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\clock_config.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\fsl_iomuxc.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\pin_mux.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\pin_mux.h</name>
+        </file>
+    </group>
+    <group>
+        <name>CMSIS</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\arm_common_tables.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\arm_const_structs.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\arm_math.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\cmsis_armcc.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\cmsis_armclang.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\cmsis_compiler.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\cmsis_gcc.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\cmsis_iccarm.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\cmsis_version.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\core_armv8mbl.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\core_armv8mml.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\core_cm4.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\mpu_armv7.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Include\mpu_armv8.h</name>
+        </file>
+    </group>
+    <group>
+        <name>CMSIS_driver</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Driver\Include\Driver_Common.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Driver\Include\Driver_I2C.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\CMSIS\Driver\Include\Driver_SPI.h</name>
+        </file>
+    </group>
+    <group>
+        <name>codec</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\components\codec\fsl_codec_common.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\components\codec\fsl_codec_common.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\components\codec\wm8960\fsl_wm8960.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\components\codec\wm8960\fsl_wm8960.h</name>
+        </file>
+    </group>
+    <group>
+        <name>component</name>
+        <group>
+            <name>lists</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\lists\generic_list.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\lists\generic_list.h</name>
+            </file>
+        </group>
+        <group>
+            <name>serial_manager</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\serial_manager\serial_manager.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\serial_manager\serial_manager.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\serial_manager\serial_port_uart.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\serial_manager\serial_port_uart.h</name>
+            </file>
+        </group>
+        <group>
+            <name>uart</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\uart\lpuart_adapter.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\uart\uart.h</name>
+            </file>
+        </group>
+    </group>
+    <group>
+        <name>device</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\fsl_device_registers.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\MCIMX7U5_cm4.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\MCIMX7U5_cm4_features.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\system_MCIMX7U5_cm4.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\system_MCIMX7U5_cm4.h</name>
+        </file>
+    </group>
+    <group>
+        <name>doc</name>
+        <file>
+            <name>$PROJ_DIR$\..\readme.txt</name>
+        </file>
+    </group>
+    <group>
+        <name>drivers</name>
+        <group>
+            <name>freertos</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_lpi2c_freertos.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_lpi2c_freertos.h</name>
+            </file>
+        </group>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_clock.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_clock.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_common.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_common.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_dmamux.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_dmamux.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_edma.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_edma.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_gpio.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_gpio.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_llwu.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_llwu.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_lpi2c.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_lpi2c.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_lptmr.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_lptmr.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_lpuart.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_lpuart.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_msmc.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_msmc.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_mu.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_mu.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_pmc0.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_port.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_sai.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_sai.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_sai_edma.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_sai_edma.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_snvs_lp.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\drivers\fsl_snvs_lp.h</name>
+        </file>
+    </group>
+    <group>
+        <name>pedometer</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\algorithms\pedometer\include\libinclude\KeynetikPedometer.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\algorithms\pedometer\source\pedometer.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\algorithms\pedometer\include\pedometer.h</name>
+        </file>
+    </group>
+    <group>
+        <name>pmic_driver</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\components\bd70528\bd70528.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\components\bd70528\bd70528.h</name>
+        </file>
+    </group>
+    <group>
+        <name>rpmsg_lite</name>
+        <group>
+            <name>env</name>
+            <group>
+                <name>freertos</name>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\rpmsg_env.h</name>
+                </file>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\rpmsg_lite\porting\environment\rpmsg_env_freertos.c</name>
+                </file>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\rpmsg_lite\rpmsg_queue.c</name>
+                </file>
+                <file>
+                    <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\rpmsg_queue.h</name>
+                </file>
+            </group>
+        </group>
+        <group>
+            <name>porting</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\rpmsg_lite\porting\platform\imx7ulp_m4\rpmsg_platform.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\platform\imx7ulp_m4\rpmsg_platform.h</name>
+            </file>
+        </group>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\common\llist.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\llist.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\rpmsg_compiler.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\rpmsg_default_config.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\rpmsg_lite\rpmsg_lite.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\rpmsg_lite.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\rpmsg_lite\rpmsg_ns.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\rpmsg_ns.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\virtio_ring.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\virtio\virtqueue.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\multicore\rpmsg_lite\lib\include\virtqueue.h</name>
+        </file>
+    </group>
+    <group>
+        <name>sensors</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\diff_p.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\fxas21002.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\fxlc95000.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\fxls8471q.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\fxls8962.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\fxos8700.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\fxpq3115.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\mag3110.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\mma845x.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\mma8491q.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\mma865x.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\mma9553.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\middleware\issdk\sensors\mpl3115.h</name>
+        </file>
+    </group>
+    <group>
+        <name>source</name>
+        <file>
+            <name>$PROJ_DIR$\..\app_srtm.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\app_srtm.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\clock_scg.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\FreeRTOSConfig.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\lpm.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\lpm.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\lpm_asm.s</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\power_mode_switch.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\power_mode_switch.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\rpmsg_config.h</name>
+        </file>
+    </group>
+    <group>
+        <name>srtm</name>
+        <group>
+            <name>channels</name>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\channels\srtm_rpmsg_endpoint.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\channels\srtm_rpmsg_endpoint.h</name>
+            </file>
+        </group>
+        <group>
+            <name>include</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\include\srtm_channel.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\include\srtm_defs.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\include\srtm_dispatcher.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\include\srtm_message.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\include\srtm_peercore.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\include\srtm_service.h</name>
+            </file>
+        </group>
+        <group>
+            <name>port</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\port\srtm_heap_freertos.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\port\srtm_message_pool.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\port\srtm_mutex_freertos.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\port\srtm_sem_freertos.c</name>
+            </file>
+        </group>
+        <group>
+            <name>services</name>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_bd70528_adapter.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_bd70528_adapter.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_io_service.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_io_service.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_keypad_service.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_keypad_service.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_lfcl_service.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_lfcl_service.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_pmic_service.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_pmic_service.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_rtc_service.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_rtc_service.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_snvs_lp_rtc_adapter.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\srtm\services\srtm_snvs_lp_rtc_adapter.h</name>
+            </file>
+        </group>
+        <group>
+            <name>srtm</name>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_channel.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_channel_struct.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_dispatcher.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_dispatcher_struct.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_heap.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_list.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_message.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_message_pool.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_message_struct.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_mutex.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_peercore.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_peercore_struct.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_sem.h</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_service.c</name>
+            </file>
+            <file>
+                <name>$PROJ_DIR$\..\..\..\..\..\components\srtm\srtm\srtm_service_struct.h</name>
+            </file>
+        </group>
+    </group>
+    <group>
+        <name>startup</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\iar\startup_MCIMX7U5_cm4.s</name>
+        </file>
+    </group>
+    <group>
+        <name>utilities</name>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\utilities\fsl_assert.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\utilities\debug_console\fsl_debug_console.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\utilities\debug_console\fsl_debug_console.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\utilities\debug_console\fsl_debug_console_conf.h</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\utilities\str\fsl_str.c</name>
+        </file>
+        <file>
+            <name>$PROJ_DIR$\..\..\..\..\..\devices\MCIMX7U5\utilities\str\fsl_str.h</name>
+        </file>
+    </group>
+</project>
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.eww b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.eww
new file mode 100644
index 0000000..a56e4f7
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/iar/power_mode_switch.eww
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="iso-8859-1"?>
+<workspace>
+  <batchBuild>
+    <batchDefinition>
+      <name>all</name>
+      <member>
+        <project>power_mode_switch</project>
+        <configuration>release</configuration>
+      </member>
+      <member>
+        <project>power_mode_switch</project>
+        <configuration>debug</configuration>
+      </member>
+      <member>
+        <project>power_mode_switch</project>
+        <configuration>flash_debug</configuration>
+      </member>
+      <member>
+        <project>power_mode_switch</project>
+        <configuration>flash_release</configuration>
+      </member>
+    </batchDefinition>
+    <batchDefinition>
+      <name>release</name>
+      <member>
+        <project>power_mode_switch</project>
+        <configuration>release</configuration>
+      </member>
+    </batchDefinition>
+    <batchDefinition>
+      <name>debug</name>
+      <member>
+        <project>power_mode_switch</project>
+        <configuration>debug</configuration>
+      </member>
+    </batchDefinition>
+    <batchDefinition>
+      <name>flash_debug</name>
+      <member>
+        <project>power_mode_switch</project>
+        <configuration>flash_debug</configuration>
+      </member>
+    </batchDefinition>
+    <batchDefinition>
+      <name>flash_release</name>
+      <member>
+        <project>power_mode_switch</project>
+        <configuration>flash_release</configuration>
+      </member>
+    </batchDefinition>
+  </batchBuild>
+  <project>
+    <path>$WS_DIR$/power_mode_switch.ewp</path>
+  </project>
+</workspace>
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/lpm.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/lpm.c
new file mode 100644
index 0000000..f4b9354
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/lpm.c
@@ -0,0 +1,686 @@
+/*
+ * Copyright (c) 2017-2018, NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include "FreeRTOS.h"
+#include "task.h"
+#include "semphr.h"
+
+#include "fsl_lptmr.h"
+#include "fsl_pmc0.h"
+#include "fsl_mu.h"
+
+#include "lpm.h"
+#include "fsl_msmc.h"
+#include "fsl_debug_console.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+#define ROM_RESERVED_MEM ((uint8_t *)0x20008000)
+#define ROM_HEADER_MEM ((uint8_t *)0x1FFD0000)
+#define ROM_HEADER_SIZE (0x1C00)
+
+#define SYSTICK_SOURCE_CLOCK CLOCK_GetFreq(kCLOCK_ScgSircClk)
+#define SYSTICK_TICKLESS_CLOCK CLOCK_GetFreq(kCLOCK_LpoClk)
+/* Define the count per tick of the systick(LPTMR) in run mode. For accuracy purpose,
+ * please make SYSTICK_SOURCE_CLOCK times of configTICK_RATE_HZ.
+ */
+#define SYSTICK_COUNT_PER_TICK (SYSTICK_SOURCE_CLOCK / configTICK_RATE_HZ)
+
+struct _lpm_power_mode_listener
+{
+    lpm_power_mode_callback_t callback;
+    void *data;
+    struct _lpm_power_mode_listener *next;
+};
+
+typedef struct _lpm_power_mode_listener lpm_power_mode_listener_t;
+
+typedef struct _lpm_nvic_context
+{
+    uint32_t PriorityGroup;
+    uint32_t ISER[8];
+    uint8_t IP[240]; /* ULP CM4 max IRQn is 76 */
+    uint8_t SHP[12];
+} lpm_nvic_context_t;
+
+static lpm_power_mode_t s_curMode;
+static lpm_nvic_context_t s_nvicContext;
+static volatile uint32_t s_psp;
+
+static SemaphoreHandle_t s_mutex;
+static lpm_power_mode_listener_t *s_listenerHead;
+static lpm_power_mode_listener_t *s_listenerTail;
+
+#if (defined(__ICCARM__))
+static uint8_t s_suspendMem[0x4000] @"M4SuspendRam";
+#elif(defined(__ARMCC_VERSION))
+static uint8_t s_suspendMem[0x4000] __attribute__((section("M4SuspendRam"), zero_init));
+#elif(defined(__GNUC__))
+static uint8_t s_suspendMem[0x4000] __attribute__((section("M4SuspendRam,\"aw\",%nobits @")));
+#else
+#error Toolchain not supported.
+#endif
+
+/* Functions implemented in lpm_asm.s */
+extern bool LPM_Suspend(void);
+extern void LPM_Resume(void);
+
+/* FreeRTOS implemented Systick handler. */
+extern void xPortSysTickHandler(void);
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static uint32_t LPM_EnterTicklessIdle(uint32_t timeoutMilliSec, uint64_t *pCounter)
+{
+    uint64_t counter;
+    uint32_t expired;
+    uint32_t ms, maxMS;
+    uint32_t flag;
+    uint32_t timeoutTicks;
+    uint32_t countPerTick = SYSTICK_COUNT_PER_TICK;
+    lptmr_config_t lptmrConfig;
+
+    if ((uint64_t)timeoutMilliSec * configTICK_RATE_HZ < 2 * 1000)
+    {
+        /* If timeout < 2 ticks, don't do tickless idle. */
+        return 0;
+    }
+
+    maxMS = 0xFFFFU / SYSTICK_TICKLESS_CLOCK * 1000;
+    ms = timeoutMilliSec > maxMS ? maxMS : timeoutMilliSec;
+
+    /* Calculate the LPTMR counter needed for timeout */
+    timeoutTicks = (uint64_t)ms * configTICK_RATE_HZ / 1000;
+    counter = (uint64_t)timeoutTicks * countPerTick;
+
+    expired = LPTMR_GetCurrentTimerCount(SYSTICK_BASE);
+    flag = LPTMR_GetStatusFlags(SYSTICK_BASE);
+    LPTMR_Deinit(SYSTICK_BASE); /* Flag cleared and timer stopped. */
+    NVIC_ClearPendingIRQ(SYSTICK_IRQn);
+    if (flag)
+    { /* tick already pending, just add 1 tick counter */
+        /* A simple judgement to decide if the counter need to add in */
+        if (expired <= countPerTick / 2)
+        {
+            /* Counter is accumulated after expired */
+            expired += countPerTick;
+        }
+        else
+        {
+            /* Just expired before counter did reset */
+            expired = countPerTick;
+        }
+    }
+
+    /* Minus those already expired to get accurate waiting counter */
+    assert(counter > expired);
+    counter -= expired;
+
+    /* Now reinit Systick with tickless clock source. */
+    /*
+     * lptmrConfig.timerMode = kLPTMR_TimerModeTimeCounter;
+     * lptmrConfig.pinSelect = kLPTMR_PinSelectInput_0;
+     * lptmrConfig.pinPolarity = kLPTMR_PinPolarityActiveHigh;
+     * lptmrConfig.enableFreeRunning = false;
+     * lptmrConfig.bypassPrescaler = true;
+     * lptmrConfig.prescalerClockSource = kLPTMR_PrescalerClock_1;
+     * lptmrConfig.value = kLPTMR_Prescale_Glitch_0;
+     */
+    LPTMR_GetDefaultConfig(&lptmrConfig);
+    /* Select LPO 1kHz as tick timer clock source */
+    lptmrConfig.prescalerClockSource = kLPTMR_PrescalerClock_1;
+    /* Set counter to be free running. */
+    lptmrConfig.enableFreeRunning = true;
+    /* Initialize the LPTMR */
+    LPTMR_Init(SYSTICK_BASE, &lptmrConfig);
+    /* Convert count in systick freq to tickless clock count */
+    LPTMR_SetTimerPeriod(SYSTICK_BASE, counter * SYSTICK_TICKLESS_CLOCK / SYSTICK_SOURCE_CLOCK);
+    /* Enable timer interrupt */
+    LPTMR_EnableInterrupts(SYSTICK_BASE, kLPTMR_TimerInterruptEnable);
+    /* Restart timer */
+    LPTMR_StartTimer(SYSTICK_BASE);
+
+    /* return waiting counter */
+    *pCounter = counter;
+
+    return timeoutTicks;
+}
+
+static void LPM_ExitTicklessIdle(uint32_t timeoutTicks, uint64_t timeoutCounter)
+{
+    uint32_t expireTicks, counter;
+    uint64_t expired;
+    uint32_t completeTicks;
+    uint32_t countPerTick = SYSTICK_COUNT_PER_TICK;
+    lptmr_config_t lptmrConfig;
+
+    /* Convert tickless count to systick count. */
+    expired = (uint64_t)(LPTMR_GetCurrentTimerCount(SYSTICK_BASE)) * SYSTICK_SOURCE_CLOCK / SYSTICK_TICKLESS_CLOCK;
+    LPTMR_Deinit(SYSTICK_BASE);
+    if (expired >= timeoutCounter)
+    {
+        expireTicks = (expired - timeoutCounter) / countPerTick;
+        /* Tick already pending, indicates timeout. */
+        completeTicks = timeoutTicks + expireTicks;
+        /* Now calculate counter for next LPTMR interrupt. */
+        counter = countPerTick - (expired - timeoutCounter) % countPerTick;
+    }
+    else
+    {
+        /* remaining counter */
+        counter = timeoutCounter - expired;
+        completeTicks = timeoutTicks - (counter - 1) / countPerTick - 1;
+        counter = (counter - 1) % countPerTick + 1;
+    }
+
+    /* Now reinit Systick with systick clock source. */
+    /*
+     * lptmrConfig.timerMode = kLPTMR_TimerModeTimeCounter;
+     * lptmrConfig.pinSelect = kLPTMR_PinSelectInput_0;
+     * lptmrConfig.pinPolarity = kLPTMR_PinPolarityActiveHigh;
+     * lptmrConfig.enableFreeRunning = false;
+     * lptmrConfig.bypassPrescaler = true;
+     * lptmrConfig.prescalerClockSource = kLPTMR_PrescalerClock_1;
+     * lptmrConfig.value = kLPTMR_Prescale_Glitch_0;
+     */
+    LPTMR_GetDefaultConfig(&lptmrConfig);
+    /* Select SIRC as tick timer clock source */
+    lptmrConfig.prescalerClockSource = kLPTMR_PrescalerClock_0;
+    /* Set counter to be free running. */
+    lptmrConfig.enableFreeRunning = true;
+    /* Initialize the LPTMR */
+    LPTMR_Init(SYSTICK_BASE, &lptmrConfig);
+    /* Convert count in systick freq to tickless clock count */
+    LPTMR_SetTimerPeriod(SYSTICK_BASE, counter);
+    /* Enable timer interrupt */
+    LPTMR_EnableInterrupts(SYSTICK_BASE, kLPTMR_TimerInterruptEnable);
+    /* Restart timer */
+    LPTMR_StartTimer(SYSTICK_BASE);
+
+    vTaskStepTick(completeTicks);
+}
+
+bool LPM_Init(void)
+{
+    smc_power_state_t mode;
+    s_mutex = xSemaphoreCreateMutex();
+
+    if (s_mutex == NULL)
+    {
+        return false;
+    }
+
+    s_listenerHead = s_listenerTail = NULL;
+
+    mode = SMC_GetPowerModeState(MSMC0);
+    switch (mode)
+    {
+        case kSMC_PowerStateRun:
+            s_curMode = LPM_PowerModeRun;
+            break;
+        case kSMC_PowerStateVlpr:
+            s_curMode = LPM_PowerModeVlpr;
+            break;
+        case kSMC_PowerStateHsrun:
+            s_curMode = LPM_PowerModeHsrun;
+            break;
+        default:
+            return false;
+    }
+
+    return true;
+}
+
+void LPM_Deinit(void)
+{
+    if (s_mutex != NULL)
+    {
+        vSemaphoreDelete(s_mutex);
+        s_mutex = NULL;
+    }
+}
+
+bool LPM_IsTargetModeValid(lpm_power_mode_t targetPowerMode, const char **pErrorMsg)
+{
+    bool modeValid = true;
+    mu_power_mode_t powerMode;
+    smc_power_state_t curPowerState;
+    const char *errorMsg = NULL;
+
+    curPowerState = SMC_GetPowerModeState(MSMC0);
+    /*
+     * Check whether the mode change is allowed.
+     *
+     * 1. If current mode is HSRUN mode, the target mode must be RUN mode.
+     * 2. If current mode is RUN mode, the target mode must not be VLPW mode.
+     * 3. If current mode is VLPR mode, the target mode must not be HSRUN/WAIT/STOP mode.
+     * 4. If already in the target mode.
+     */
+    switch (curPowerState)
+    {
+        case kSMC_PowerStateHsrun:
+            if (LPM_PowerModeRun != targetPowerMode)
+            {
+                errorMsg = "Current mode is HSRUN, please choose RUN mode as target mode.\r\n";
+                modeValid = false;
+            }
+            break;
+
+        case kSMC_PowerStateRun:
+            if (LPM_PowerModeVlpw == targetPowerMode)
+            {
+                errorMsg = "Could not enter VLPW mode from RUN mode.\r\n";
+                modeValid = false;
+            }
+            break;
+
+        case kSMC_PowerStateVlpr:
+            if ((LPM_PowerModeWait == targetPowerMode) || (LPM_PowerModeHsrun == targetPowerMode) ||
+                (LPM_PowerModeStop == targetPowerMode))
+            {
+                errorMsg = "Could not enter HSRUN/STOP/WAIT modes from VLPR mode.\r\n";
+                modeValid = false;
+            }
+            break;
+
+        default:
+            errorMsg = "Wrong power state.\r\n";
+            modeValid = false;
+            break;
+    }
+
+    if (modeValid)
+    {
+        powerMode = MU_GetOtherCorePowerMode(MUA);
+        switch (targetPowerMode)
+        {
+            case LPM_PowerModeLls:
+                if (powerMode != kMU_PowerModeDsm)
+                {
+                    errorMsg = "M4 can enter LLS Mode only when A7 in LLS Mode or VLLS Mode!!!\r\n";
+                    modeValid = false;
+                }
+                break;
+
+            case LPM_PowerModeVlls:
+                if (powerMode != kMU_PowerModeDsm)
+                {
+                    errorMsg = "M4 can enter VLLS Mode only when A7 in VLLS Mode!!!\r\n";
+                    modeValid = false;
+                }
+                break;
+
+            default:
+                break;
+        }
+    }
+
+    if (modeValid)
+    {
+        /* Don't need to change power mode if current mode is already the target mode. */
+        if (((LPM_PowerModeRun == targetPowerMode) && (kSMC_PowerStateRun == curPowerState)) ||
+            ((LPM_PowerModeHsrun == targetPowerMode) && (kSMC_PowerStateHsrun == curPowerState)) ||
+            ((LPM_PowerModeVlpr == targetPowerMode) && (kSMC_PowerStateVlpr == curPowerState)))
+        {
+            errorMsg = "Already in the target power mode.\r\n";
+            modeValid = false;
+        }
+    }
+
+    if (pErrorMsg)
+    {
+        *pErrorMsg = errorMsg;
+    }
+
+    return modeValid;
+}
+
+bool LPM_SetPowerMode(lpm_power_mode_t mode)
+{
+    lpm_power_mode_listener_t *l1, *l2;
+    bool ret = true;
+
+    if (mode == s_curMode)
+    {
+        return ret;
+    }
+
+    xSemaphoreTake(s_mutex, portMAX_DELAY);
+
+    for (l1 = s_listenerHead; l1 != NULL; l1 = l1->next)
+    {
+        if (l1->callback == NULL)
+        {
+            continue;
+        }
+
+        if (!l1->callback(s_curMode, mode, l1->data))
+        {
+            /* One stakeholder doesn't allow new mode */
+            ret = false;
+            break;
+        }
+    }
+
+    if (ret)
+    {
+        s_curMode = mode;
+    }
+    else
+    {
+        /* roll back the state change of previous listeners */
+        for (l2 = s_listenerHead; l2 != l1; l2 = l2->next)
+        {
+            if (l2->callback == NULL)
+            {
+                continue;
+            }
+
+            l2->callback(mode, s_curMode, l2->data);
+        }
+    }
+
+    xSemaphoreGive(s_mutex);
+
+    return ret;
+}
+
+lpm_power_mode_t LPM_GetPowerMode(void)
+{
+    return s_curMode;
+}
+
+bool LPM_WaitForInterrupt(uint32_t timeoutMilliSec)
+{
+    uint32_t irqMask;
+    uint64_t counter = 0;
+    uint32_t timeoutTicks;
+    status_t status = kStatus_Success;
+
+    irqMask = DisableGlobalIRQ();
+
+    if (!LPM_IsTargetModeValid(s_curMode, NULL))
+    {
+        EnableGlobalIRQ(irqMask);
+        return false;
+    }
+
+    timeoutTicks = LPM_EnterTicklessIdle(timeoutMilliSec, &counter);
+
+    switch (s_curMode)
+    {
+        case LPM_PowerModeWait:
+            status = SMC_SetPowerModeWait(MSMC0);
+            break;
+        case LPM_PowerModeStop:
+            status = SMC_SetPowerModeStop(MSMC0, kSMC_PartialStop);
+            break;
+        case LPM_PowerModeVlpw:
+            status = SMC_SetPowerModeWait(MSMC0);
+            break;
+        case LPM_PowerModeVlps:
+            status = SMC_SetPowerModeVlps(MSMC0);
+            break;
+        case LPM_PowerModeLls:
+            status = SMC_SetPowerModeLls(MSMC0);
+            break;
+        case LPM_PowerModeVlls:
+            if (!LPM_Suspend())
+            {
+                status = kStatus_Fail;
+            }
+            else
+            {
+                CLOCK_EnableClock(SYSTICK_CLOCK_NAME); /* Make sure Systick clock is recovered from VLLS. */
+            }
+            break;
+        default:
+            break;
+    }
+
+    if (timeoutTicks > 0)
+    {
+        LPM_ExitTicklessIdle(timeoutTicks, counter);
+    }
+
+    EnableGlobalIRQ(irqMask);
+
+    return status == kStatus_Success;
+}
+
+void LPM_RegisterPowerListener(lpm_power_mode_callback_t callback, void *data)
+{
+    lpm_power_mode_listener_t *l = (lpm_power_mode_listener_t *)pvPortMalloc(sizeof(lpm_power_mode_listener_t));
+    assert(l);
+
+    l->callback = callback;
+    l->data = data;
+    l->next = NULL;
+
+    xSemaphoreTake(s_mutex, portMAX_DELAY);
+
+    if (s_listenerHead)
+    {
+        s_listenerTail->next = l;
+        s_listenerTail = l;
+    }
+    else
+    {
+        s_listenerHead = s_listenerTail = l;
+    }
+
+    xSemaphoreGive(s_mutex);
+}
+
+void LPM_UnregisterPowerListener(lpm_power_mode_callback_t callback, void *data)
+{
+    lpm_power_mode_listener_t *l, *p = NULL;
+
+    xSemaphoreTake(s_mutex, portMAX_DELAY);
+
+    for (l = s_listenerHead; l != NULL; l = l->next)
+    {
+        if (l->callback == callback && l->data == data)
+        {
+            if (p)
+            {
+                p->next = l->next;
+            }
+            else
+            {
+                s_listenerHead = l->next;
+            }
+
+            if (l->next == NULL)
+            {
+                s_listenerTail = p;
+            }
+
+            vPortFree(l);
+            break;
+        }
+        p = l;
+    }
+
+    xSemaphoreGive(s_mutex);
+}
+
+/************ Internal public API start **************/
+/* The systick interrupt handler. */
+void SYSTICK_HANDLER(void)
+{
+    /* Clear the interrupt. */
+    LPTMR_ClearStatusFlags(SYSTICK_BASE, kLPTMR_TimerCompareFlag);
+
+    if (SYSTICK_BASE->CSR & LPTMR_CSR_TFC_MASK)
+    {
+        /* Freerun timer means this is the first tick after tickless exit. */
+        LPTMR_StopTimer(SYSTICK_BASE);
+        LPTMR_SetTimerPeriod(LPTMR0, SYSTICK_SOURCE_CLOCK / configTICK_RATE_HZ);
+        SYSTICK_BASE->CSR &= ~LPTMR_CSR_TFC_MASK;
+        LPTMR_StartTimer(SYSTICK_BASE);
+    }
+
+    /* Call FreeRTOS tick handler. */
+    xPortSysTickHandler();
+
+    /* Add for ARM errata 838869, affects Cortex-M4, Cortex-M4F Store immediate overlapping
+    exception return operation might vector to incorrect interrupt */
+    __DSB();
+}
+
+/* Override the default definition of vPortSetupTimerInterrupt() that is weakly
+ * defined in the FreeRTOS Cortex-M4F port layer with a version that configures LPTMR0
+ * to generate the tick interrupt. */
+void vPortSetupTimerInterrupt(void)
+{
+    lptmr_config_t lptmrConfig;
+
+    /*
+     * lptmrConfig.timerMode = kLPTMR_TimerModeTimeCounter;
+     * lptmrConfig.pinSelect = kLPTMR_PinSelectInput_0;
+     * lptmrConfig.pinPolarity = kLPTMR_PinPolarityActiveHigh;
+     * lptmrConfig.enableFreeRunning = false;
+     * lptmrConfig.bypassPrescaler = true;
+     * lptmrConfig.prescalerClockSource = kLPTMR_PrescalerClock_1;
+     * lptmrConfig.value = kLPTMR_Prescale_Glitch_0;
+     */
+    LPTMR_GetDefaultConfig(&lptmrConfig);
+    /* Select SIRC as tick timer clock source */
+    lptmrConfig.prescalerClockSource = kLPTMR_PrescalerClock_0;
+    /* Initialize the LPTMR */
+    LPTMR_Init(SYSTICK_BASE, &lptmrConfig);
+
+    /* Set timer period */
+    LPTMR_SetTimerPeriod(SYSTICK_BASE, SYSTICK_SOURCE_CLOCK / configTICK_RATE_HZ);
+
+    /* Enable timer interrupt */
+    LPTMR_EnableInterrupts(SYSTICK_BASE, kLPTMR_TimerInterruptEnable);
+    NVIC_SetPriority(SYSTICK_IRQn, configLIBRARY_LOWEST_INTERRUPT_PRIORITY);
+    NVIC_EnableIRQ(SYSTICK_IRQn);
+
+    /* Start counting */
+    LPTMR_StartTimer(SYSTICK_BASE);
+}
+
+void LPM_NvicStateSave(void)
+{
+    uint32_t i;
+    uint32_t irqRegs;
+    uint32_t irqNum;
+
+    irqRegs = (SCnSCB->ICTR & SCnSCB_ICTR_INTLINESNUM_Msk) + 1;
+    irqNum = irqRegs * 32;
+
+    s_nvicContext.PriorityGroup = NVIC_GetPriorityGrouping();
+
+    for (i = 0; i < irqRegs; i++)
+    {
+        s_nvicContext.ISER[i] = NVIC->ISER[i];
+    }
+
+    for (i = 0; i < irqNum; i++)
+    {
+        s_nvicContext.IP[i] = NVIC->IP[i];
+    }
+
+    s_nvicContext.SHP[0] = SCB->SHP[0];   /* MemManage */
+    s_nvicContext.SHP[1] = SCB->SHP[1];   /* BusFault */
+    s_nvicContext.SHP[2] = SCB->SHP[2];   /* UsageFault */
+    s_nvicContext.SHP[7] = SCB->SHP[7];   /* SVCall */
+    s_nvicContext.SHP[8] = SCB->SHP[8];   /* DebugMonitor */
+    s_nvicContext.SHP[10] = SCB->SHP[10]; /* PendSV */
+    s_nvicContext.SHP[11] = SCB->SHP[11]; /* SysTick */
+}
+
+void LPM_NvicStateRestore(void)
+{
+    uint32_t i;
+    uint32_t irqRegs;
+    uint32_t irqNum;
+
+    irqRegs = (SCnSCB->ICTR & SCnSCB_ICTR_INTLINESNUM_Msk) + 1;
+    irqNum = irqRegs * 32;
+
+    NVIC_SetPriorityGrouping(s_nvicContext.PriorityGroup);
+
+    for (i = 0; i < irqRegs; i++)
+    {
+        NVIC->ISER[i] = s_nvicContext.ISER[i];
+    }
+
+    for (i = 0; i < irqNum; i++)
+    {
+        NVIC->IP[i] = s_nvicContext.IP[i];
+    }
+
+    SCB->SHP[0] = s_nvicContext.SHP[0];   /* MemManage */
+    SCB->SHP[1] = s_nvicContext.SHP[1];   /* BusFault */
+    SCB->SHP[2] = s_nvicContext.SHP[2];   /* UsageFault */
+    SCB->SHP[7] = s_nvicContext.SHP[7];   /* SVCall */
+    SCB->SHP[8] = s_nvicContext.SHP[8];   /* DebugMonitor */
+    SCB->SHP[10] = s_nvicContext.SHP[10]; /* PendSV */
+    SCB->SHP[11] = s_nvicContext.SHP[11]; /* SysTick */
+}
+
+void LPM_SystemSuspend(uint32_t psp)
+{
+    uint32_t mask0;
+
+    mask0 = SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP6_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP5_MASK |
+            SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP4_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP3_MASK |
+            SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP2_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP1_MASK;
+
+    s_psp = psp; /* Save PSP for resume context */
+
+    /* Save data which will be updated by ROM resume. */
+    memcpy(s_suspendMem, ROM_RESERVED_MEM, sizeof(s_suspendMem));
+    memcpy(ROM_HEADER_MEM, ROM_RESERVED_MEM + sizeof(s_suspendMem), ROM_HEADER_SIZE);
+
+    /* Setup VLLS Resume Entry. */
+    SIM->SIM_DGO_GP1 = (uint32_t)LPM_Resume;
+    SIM->SIM_DGO_CTRL0 = (SIM->SIM_DGO_CTRL0 & ~mask0) | SIM_SIM_DGO_CTRL0_UPDATE_DGO_GP1_MASK;
+    /* Wait DGO GP1 updated */
+    while ((SIM->SIM_DGO_CTRL0 & SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP1_MASK) == 0)
+    {
+    }
+    /* Clear DGO GP1 ACK and UPDATE bits */
+    SIM->SIM_DGO_CTRL0 =
+        (SIM->SIM_DGO_CTRL0 & ~(SIM_SIM_DGO_CTRL0_UPDATE_DGO_GP1_MASK | mask0)) | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP1_MASK;
+
+    SMC_SetPowerModeVlls(MSMC0);
+}
+
+uint32_t LPM_SystemResume(bool resume)
+{
+    uint32_t mask0;
+
+    mask0 = SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP6_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP5_MASK |
+            SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP4_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP3_MASK |
+            SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP2_MASK | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP1_MASK;
+
+    SMC_SetPowerModeProtection(MSMC0, kSMC_AllowPowerModeAll);
+
+    /* Clear VLLS Resume Entry. */
+    SIM->SIM_DGO_GP1 = 0U;
+    SIM->SIM_DGO_CTRL0 = (SIM->SIM_DGO_CTRL0 & ~mask0) | SIM_SIM_DGO_CTRL0_UPDATE_DGO_GP1_MASK;
+    /* Wait DGO GP1 updated */
+    while ((SIM->SIM_DGO_CTRL0 & SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP1_MASK) == 0)
+    {
+    }
+    /* Clear DGO GP1 ACK and UPDATE bits */
+    SIM->SIM_DGO_CTRL0 =
+        (SIM->SIM_DGO_CTRL0 & ~(SIM_SIM_DGO_CTRL0_UPDATE_DGO_GP1_MASK | mask0)) | SIM_SIM_DGO_CTRL0_WR_ACK_DGO_GP1_MASK;
+
+    /* Restore data. */
+    memcpy(ROM_RESERVED_MEM, s_suspendMem, sizeof(s_suspendMem));
+    memcpy(ROM_RESERVED_MEM + sizeof(s_suspendMem), ROM_HEADER_MEM, ROM_HEADER_SIZE);
+
+    return s_psp;
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/lpm.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/lpm.h
new file mode 100644
index 0000000..d58051c
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/lpm.h
@@ -0,0 +1,95 @@
+/*
+ * Copyright (c) 2017-2018, NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef _LPM_H_
+#define _LPM_H_
+
+#include "fsl_common.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+#define SYSTICK_BASE LPTMR0
+#define SYSTICK_IRQn LPTMR0_IRQn
+#define SYSTICK_HANDLER LPTMR0_IRQHandler
+#define SYSTICK_CLOCK_NAME kCLOCK_Lptmr0
+
+/* Power mode definition of low power management.
+ * Waken up duration Off > Dsm > Idle > Wait > Run.
+ */
+typedef enum _lpm_power_mode
+{
+    LPM_PowerModeRun = 0,   /* Normal RUN mode */
+    LPM_PowerModeWait,      /* WAIT mode. */
+    LPM_PowerModeStop,      /* STOP mode. */
+    LPM_PowerModeVlpr,      /* VLPR mode. */
+    LPM_PowerModeVlpw,      /* VLPW mode. */
+    LPM_PowerModeVlps,      /* VLPS mode. */
+    LPM_PowerModeHsrun,     /* HighSpeed RUN mode */
+    LPM_PowerModeLls,       /* LLS mode */
+    LPM_PowerModeVlls,      /* VLLS mode */
+} lpm_power_mode_t;
+
+typedef bool (*lpm_power_mode_callback_t)(lpm_power_mode_t curMode, lpm_power_mode_t newMode, void *data);
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+
+#if defined(__cplusplus)
+extern "C" {
+#endif /* __cplusplus*/
+
+/* Initialize the Low Power Management */
+bool LPM_Init(void);
+
+/* Deinitialize the Low Power Management */
+void LPM_Deinit(void);
+
+/* Check if target power mode is valid to transit.
+ * Return true if the transition is allowed.
+ */
+bool LPM_IsTargetModeValid(lpm_power_mode_t targetPowerMode, const char **pErrorMsg);
+
+/* Set power mode, all registered listeners will be notified.
+ * Return true if all the registered listeners return true.
+ */
+bool LPM_SetPowerMode(lpm_power_mode_t mode);
+
+/* Get low power mode previously set.
+ */
+lpm_power_mode_t LPM_GetPowerMode(void);
+
+/* LPM_SetPowerMode() won't switch system power status immediately,
+ * instead, such operation is done by LPM_WaitForInterrupt().
+ * It can be callled in idle task of FreeRTOS, or main loop in bare
+ * metal application. The sleep depth of this API depends
+ * on current power mode set by LPM_SetPowerMode().
+ * The timeoutMilliSec means if no interrupt occurs before timeout, the
+ * system will be waken up by systick. If timeout exceeds hardware timer
+ * limitation, timeout will be reduced to maximum time of hardware.
+ * timeoutMilliSec only works in FreeRTOS, in bare metal application,
+ * it's just ignored.
+ * Return true if power mode switch succeeds.
+ */
+bool LPM_WaitForInterrupt(uint32_t timeoutMilliSec);
+
+/* Register power mode switch listener. When LPM_SetPowerMode()
+ * is called, all the registered listeners will be invoked. The
+ * listener returns true if it allows the power mode switch,
+ * otherwise returns FALSE.
+ */
+void LPM_RegisterPowerListener(lpm_power_mode_callback_t callback, void *data);
+
+/* Unregister power mode switch listener */
+void LPM_UnregisterPowerListener(lpm_power_mode_callback_t callback, void *data);
+
+#if defined(__cplusplus)
+}
+#endif /* __cplusplus*/
+
+#endif /* _LPM_H_ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/pin_mux.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/pin_mux.c
new file mode 100644
index 0000000..93f9d59
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/pin_mux.c
@@ -0,0 +1,339 @@
+/*
+ * Copyright 2018 NXP.
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+/***********************************************************************************************************************
+ * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
+ * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
+ **********************************************************************************************************************/
+
+/*
+ * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
+!!GlobalInfo
+product: Pins v4.0
+processor: MCIMX7U5xxx05
+package_id: MCIMX7U5CVP05
+mcu_data: ksdk2_0
+processor_version: 0.0.0
+board: MCIMX7ULP-EVK-REV-B
+ * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
+ */
+
+#include "fsl_common.h"
+#include "fsl_iomuxc.h"
+#include "pin_mux.h"
+
+/* FUNCTION ************************************************************************************************************
+ *
+ * Function Name : BOARD_InitBootPins
+ * Description   : Calls initialization functions.
+ *
+ * END ****************************************************************************************************************/
+void BOARD_InitBootPins(void)
+{
+}
+
+/*
+ * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
+BOARD_InitPins:
+- options: {callFromInitBoot: 'false', coreID: cm4}
+- pin_list:
+  - {pin_num: AG20, peripheral: PTA, signal: 'port, 25', pin_signal: PTA25, OBE: OBE_1_Enabled}
+  - {pin_num: AB19, peripheral: LPUART0, signal: lpuart_rx, pin_signal: PTA19, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AC19, peripheral: LPUART0, signal: lpuart_tx, pin_signal: PTA18, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AD15, peripheral: I2S0, signal: i2s_mclk, pin_signal: PTA4, OBE: OBE_1_Enabled, DSE: DSE_1_Hi_Drive}
+  - {pin_num: AG14, peripheral: I2S0, signal: 'i2s_rxd, 0', pin_signal: PTA2}
+  - {pin_num: AC15, peripheral: I2S0, signal: i2s_tx_bclk, pin_signal: PTA5, DSE: DSE_1_Hi_Drive}
+  - {pin_num: AB15, peripheral: I2S0, signal: i2s_tx_fs, pin_signal: PTA6, DSE: DSE_1_Hi_Drive}
+  - {pin_num: AD14, peripheral: I2S0, signal: 'i2s_txd, 0', pin_signal: PTA7, DSE: DSE_1_Hi_Drive}
+  - {pin_num: AF14, peripheral: PTA, signal: 'port, 3', pin_signal: PTA3, IBE: IBE_1_Enabled}
+  - {pin_num: AF16, peripheral: PTA, signal: 'port, 13', pin_signal: PTA13, IBE: IBE_1_Enabled}
+  - {pin_num: AF17, peripheral: PTA, signal: 'port, 14', pin_signal: PTA14, OBE: OBE_1_Enabled}
+  - {pin_num: AF18, peripheral: PTA, signal: 'port, 15', pin_signal: PTA15, OBE: OBE_1_Enabled}
+  - {pin_num: AF24, peripheral: PTA, signal: 'port, 31', pin_signal: PTA31, IBE: IBE_1_Enabled, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AF2, peripheral: PTB, signal: 'port, 1', pin_signal: PTB1, PE: PE_1_pull_enabled}
+  - {pin_num: AE3, peripheral: PTB, signal: 'port, 2', pin_signal: PTB2, PE: PE_1_pull_enabled}
+  - {pin_num: AE4, peripheral: PTB, signal: 'port, 3', pin_signal: PTB3, PE: PE_1_pull_enabled}
+  - {pin_num: AC7, peripheral: PTB, signal: 'port, 10', pin_signal: PTB10, PE: PE_1_pull_enabled}
+  - {pin_num: AG4, peripheral: PTB, signal: 'port, 4', pin_signal: PTB4, PE: PE_1_pull_enabled}
+  - {pin_num: AF4, peripheral: PTB, signal: 'port, 5', pin_signal: PTB5, PS: PS_1_pull_up}
+  - {pin_num: AF5, peripheral: PTB, signal: 'port, 6', pin_signal: PTB6, OBE: OBE_1_Enabled}
+  - {pin_num: AF6, peripheral: PTB, signal: 'port, 7', pin_signal: PTB7, IBE: IBE_1_Enabled, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AD7, peripheral: PTB, signal: 'port, 9', pin_signal: PTB9, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AB7, peripheral: PTB, signal: 'port, 11', pin_signal: PTB11, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AG8, peripheral: RTC, signal: rtc_clkout, pin_signal: PTB14, IBE: IBE_0_Disabled}
+ * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
+ */
+
+/* FUNCTION ************************************************************************************************************
+ *
+ * Function Name : BOARD_InitPins
+ * Description   : Configures pin routing and optionally pin electrical features.
+ *
+ * END ****************************************************************************************************************/
+void BOARD_InitPins(void) {                                /*!< Function assigned for the core: Cortex-M4[cm4] */
+    IOMUXC_SetPinMux(BOARD_INITPINS_VOL_DOWN_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_VOL_DOWN_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_IBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_WL_REG_ON_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_WL_REG_ON_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_BT_REG_ON_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_BT_REG_ON_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_UART0_TX_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_UART0_TX_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_UART0_RX_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_UART0_RX_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S0_RXD0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinMux(BOARD_INITPINS_A7_POW_EN_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_A7_POW_EN_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_VOL_UP_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_VOL_UP_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_IBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_WL_HOST_WAKE_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_WL_HOST_WAKE_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_IBE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S0_MCLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_I2S0_MCLK_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_DSE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S0_TX_BCLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_I2S0_TX_BCLK_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_DSE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S0_TX_FS_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_I2S0_TX_FS_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_DSE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S0_TXD0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_I2S0_TXD0_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_DSE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S1_TX_BCLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_I2S1_TX_BCLK_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S1_RXD0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_I2S1_RXD0_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_PMIC_INT_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_PMIC_INT_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_RTC_CLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S1_TX_FS_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_I2S1_TX_FS_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_I2S1_TXD0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_I2S1_TXD0_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_PTB4_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_PTB4_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_PTB5_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_PTB5_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_DDR_SW_EN_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_DDR_SW_EN_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_BT_HOST_WAKE_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_BT_HOST_WAKE_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_IBE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINS_SEN_INT_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINS_SEN_INT_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+}
+
+
+/*
+ * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
+BOARD_InitPinsNoQSPI:
+- options: {callFromInitBoot: 'false', coreID: cm4}
+- pin_list:
+  - {pin_num: AG20, peripheral: PTA, signal: 'port, 25', pin_signal: PTA25, OBE: OBE_1_Enabled}
+  - {pin_num: AB19, peripheral: LPUART0, signal: lpuart_rx, pin_signal: PTA19, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AC19, peripheral: LPUART0, signal: lpuart_tx, pin_signal: PTA18, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AD15, peripheral: I2S0, signal: i2s_mclk, pin_signal: PTA4, OBE: OBE_1_Enabled, DSE: DSE_1_Hi_Drive}
+  - {pin_num: AG14, peripheral: I2S0, signal: 'i2s_rxd, 0', pin_signal: PTA2}
+  - {pin_num: AC15, peripheral: I2S0, signal: i2s_tx_bclk, pin_signal: PTA5, DSE: DSE_1_Hi_Drive}
+  - {pin_num: AB15, peripheral: I2S0, signal: i2s_tx_fs, pin_signal: PTA6, DSE: DSE_1_Hi_Drive}
+  - {pin_num: AD14, peripheral: I2S0, signal: 'i2s_txd, 0', pin_signal: PTA7, DSE: DSE_1_Hi_Drive}
+  - {pin_num: AF14, peripheral: PTA, signal: 'port, 3', pin_signal: PTA3, IBE: IBE_1_Enabled}
+  - {pin_num: AF16, peripheral: PTA, signal: 'port, 13', pin_signal: PTA13, IBE: IBE_1_Enabled}
+  - {pin_num: AF17, peripheral: PTA, signal: 'port, 14', pin_signal: PTA14, OBE: OBE_1_Enabled}
+  - {pin_num: AF18, peripheral: PTA, signal: 'port, 15', pin_signal: PTA15, OBE: OBE_1_Enabled}
+  - {pin_num: AF24, peripheral: PTA, signal: 'port, 31', pin_signal: PTA31, IBE: IBE_1_Enabled, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AF2, peripheral: PTB, signal: 'port, 1', pin_signal: PTB1, PE: PE_1_pull_enabled}
+  - {pin_num: AE3, peripheral: PTB, signal: 'port, 2', pin_signal: PTB2, PE: PE_1_pull_enabled}
+  - {pin_num: AE4, peripheral: PTB, signal: 'port, 3', pin_signal: PTB3, PE: PE_1_pull_enabled}
+  - {pin_num: AC7, peripheral: PTB, signal: 'port, 10', pin_signal: PTB10, PE: PE_1_pull_enabled}
+  - {pin_num: AG4, peripheral: PTB, signal: 'port, 4', pin_signal: PTB4, PE: PE_1_pull_enabled}
+  - {pin_num: AF4, peripheral: PTB, signal: 'port, 5', pin_signal: PTB5, PS: PS_1_pull_up}
+  - {pin_num: AF5, peripheral: PTB, signal: 'port, 6', pin_signal: PTB6, OBE: OBE_1_Enabled}
+  - {pin_num: AF6, peripheral: PTB, signal: 'port, 7', pin_signal: PTB7, IBE: IBE_1_Enabled, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AD7, peripheral: PTB, signal: 'port, 9', pin_signal: PTB9, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AB7, peripheral: PTB, signal: 'port, 11', pin_signal: PTB11, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AG8, peripheral: RTC, signal: rtc_clkout, pin_signal: PTB14, IBE: IBE_0_Disabled}
+  - {pin_num: AG6, peripheral: PTB, signal: 'port, 8', pin_signal: PTB8, PE: PE_1_pull_enabled, PS: PS_1_pull_up}
+  - {pin_num: AF8, peripheral: PTB, signal: 'port, 15', pin_signal: PTB15, PE: PE_1_pull_enabled}
+  - {pin_num: AF9, peripheral: PTB, signal: 'port, 16', pin_signal: PTB16, PE: PE_1_pull_enabled}
+  - {pin_num: AF10, peripheral: PTB, signal: 'port, 17', pin_signal: PTB17, PE: PE_1_pull_enabled}
+  - {pin_num: AG10, peripheral: PTB, signal: 'port, 18', pin_signal: PTB18, PE: PE_1_pull_enabled}
+  - {pin_num: AD10, peripheral: PTB, signal: 'port, 19', pin_signal: PTB19, PE: PE_1_pull_enabled}
+ * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
+ */
+
+/* FUNCTION ************************************************************************************************************
+ *
+ * Function Name : BOARD_InitPinsNoQSPI
+ * Description   : Configures pin routing and optionally pin electrical features.
+ *
+ * END ****************************************************************************************************************/
+void BOARD_InitPinsNoQSPI(void) {                          /*!< Function assigned for the core: Cortex-M4[cm4] */
+    //IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_VOL_DOWN_PIN_FUNCTION_ID, 0U);
+    //IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_VOL_DOWN_PIN_FUNCTION_ID,
+    //                    IOMUXC0_SW_MUX_CTL_PAD_IBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_WL_REG_ON_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_WL_REG_ON_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_BT_REG_ON_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_BT_REG_ON_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_UART0_TX_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_UART0_TX_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_UART0_RX_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_UART0_RX_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S0_RXD0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_A7_POW_EN_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_A7_POW_EN_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_VOL_UP_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_VOL_UP_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_IBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_WL_HOST_WAKE_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_WL_HOST_WAKE_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_IBE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S0_MCLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_I2S0_MCLK_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_DSE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S0_TX_BCLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_I2S0_TX_BCLK_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_DSE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S0_TX_FS_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_I2S0_TX_FS_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_DSE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S0_TXD0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_I2S0_TXD0_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_DSE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S1_RXD0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_I2S1_RXD0_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_PMIC_INT_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_PMIC_INT_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_RTC_CLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_QSPIA_SCLK_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_QSPIA_SCLK_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_QSPIA_DATA3_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_QSPIA_DATA3_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_QSPIA_DATA2_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_QSPIA_DATA2_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_QSPIA_DATA1_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_QSPIA_DATA1_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_QSPIA_DATA0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_QSPIA_DATA0_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S1_TX_FS_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_I2S1_TX_FS_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_I2S1_TXD0_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_I2S1_TXD0_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_PTB4_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_PTB4_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_PTB5_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_PTB5_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_DDR_SW_EN_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_DDR_SW_EN_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_OBE_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_BT_HOST_WAKE_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_BT_HOST_WAKE_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_IBE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_QSPIA_SS0_B_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_QSPIA_SS0_B_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinMux(BOARD_INITPINSNOQSPI_SEN_INT_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_INITPINSNOQSPI_SEN_INT_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_PE_MASK |
+                        IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+}
+
+
+/*
+ * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
+BOARD_I2C_ConfigurePins:
+- options: {callFromInitBoot: 'false', coreID: cm4}
+- pin_list:
+  - {pin_num: AG18, peripheral: LPI2C0, signal: lpi2c_scl, pin_signal: PTA16, ODE: ODE_1_Open_drain}
+  - {pin_num: AD19, peripheral: LPI2C0, signal: lpi2c_sda, pin_signal: PTA17, ODE: ODE_1_Open_drain}
+  - {pin_num: AC8, peripheral: LPI2C3, signal: lpi2c_scl, pin_signal: PTB12, ODE: ODE_1_Open_drain}
+  - {pin_num: AD8, peripheral: LPI2C3, signal: lpi2c_sda, pin_signal: PTB13, ODE: ODE_1_Open_drain}
+ * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
+ */
+
+/* FUNCTION ************************************************************************************************************
+ *
+ * Function Name : BOARD_I2C_ConfigurePins
+ * Description   : Configures pin routing and optionally pin electrical features.
+ *
+ * END ****************************************************************************************************************/
+void BOARD_I2C_ConfigurePins(void) {                       /*!< Function assigned for the core: Cortex-M4[cm4] */
+    IOMUXC_SetPinMux(BOARD_I2C_CONFIGUREPINS_I2C0_SCL_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_I2C_CONFIGUREPINS_I2C0_SCL_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_ODE_MASK);
+    IOMUXC_SetPinMux(BOARD_I2C_CONFIGUREPINS_I2C0_SDA_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_I2C_CONFIGUREPINS_I2C0_SDA_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_ODE_MASK);
+    IOMUXC_SetPinMux(BOARD_I2C_CONFIGUREPINS_I2C3_SCL_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_I2C_CONFIGUREPINS_I2C3_SCL_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_ODE_MASK);
+    IOMUXC_SetPinMux(BOARD_I2C_CONFIGUREPINS_I2C3_SDA_PIN_FUNCTION_ID, 0U);
+    IOMUXC_SetPinConfig(BOARD_I2C_CONFIGUREPINS_I2C3_SDA_PIN_FUNCTION_ID,
+                        IOMUXC0_SW_MUX_CTL_PAD_ODE_MASK);
+}
+
+/***********************************************************************************************************************
+ * EOF
+ **********************************************************************************************************************/
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/pin_mux.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/pin_mux.h
new file mode 100644
index 0000000..a508842
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/pin_mux.h
@@ -0,0 +1,571 @@
+/*
+ * Copyright 2018 NXP.
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef _PIN_MUX_H_
+#define _PIN_MUX_H_
+
+
+/***********************************************************************************************************************
+ * Definitions
+ **********************************************************************************************************************/
+
+/* PTA25 (number AG20), A7_POW_EN# */
+#define BOARD_INITPINS_A7_POW_EN_PERIPHERAL                                  PTA   /*!< Device name: PTA */
+#define BOARD_INITPINS_A7_POW_EN_SIGNAL                                     port   /*!< PTA signal: port */
+#define BOARD_INITPINS_A7_POW_EN_CHANNEL                                      25   /*!< PTA port channel: 25 */
+#define BOARD_INITPINS_A7_POW_EN_PIN_NAME                                  PTA25   /*!< Pin name */
+#define BOARD_INITPINS_A7_POW_EN_PIN_FUNCTION_ID              IOMUXC_PTA25_PTA25   /*!< Pin function id */
+#define BOARD_INITPINS_A7_POW_EN_LABEL                              "A7_POW_EN#"   /*!< Label */
+#define BOARD_INITPINS_A7_POW_EN_NAME                                "A7_POW_EN"   /*!< Identifier name */
+
+/* PTA19 (number AB19), UART0_RX */
+#define BOARD_INITPINS_UART0_RX_PERIPHERAL                               LPUART0   /*!< Device name: LPUART0 */
+#define BOARD_INITPINS_UART0_RX_SIGNAL                                 lpuart_rx   /*!< LPUART0 signal: lpuart_rx */
+#define BOARD_INITPINS_UART0_RX_PIN_NAME                                   PTA19   /*!< Pin name */
+#define BOARD_INITPINS_UART0_RX_PIN_FUNCTION_ID          IOMUXC_PTA19_LPUART0_RX   /*!< Pin function id */
+#define BOARD_INITPINS_UART0_RX_LABEL                                 "UART0_RX"   /*!< Label */
+#define BOARD_INITPINS_UART0_RX_NAME                                  "UART0_RX"   /*!< Identifier name */
+
+/* PTA18 (number AC19), UART0_TX */
+#define BOARD_INITPINS_UART0_TX_PERIPHERAL                               LPUART0   /*!< Device name: LPUART0 */
+#define BOARD_INITPINS_UART0_TX_SIGNAL                                 lpuart_tx   /*!< LPUART0 signal: lpuart_tx */
+#define BOARD_INITPINS_UART0_TX_PIN_NAME                                   PTA18   /*!< Pin name */
+#define BOARD_INITPINS_UART0_TX_PIN_FUNCTION_ID          IOMUXC_PTA18_LPUART0_TX   /*!< Pin function id */
+#define BOARD_INITPINS_UART0_TX_LABEL                                 "UART0_TX"   /*!< Label */
+#define BOARD_INITPINS_UART0_TX_NAME                                  "UART0_TX"   /*!< Identifier name */
+
+/* PTA4 (number AD15), I2S0_MCLK */
+#define BOARD_INITPINS_I2S0_MCLK_PERIPHERAL                                 I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINS_I2S0_MCLK_SIGNAL                                 i2s_mclk   /*!< I2S0 signal: i2s_mclk */
+#define BOARD_INITPINS_I2S0_MCLK_PIN_NAME                                   PTA4   /*!< Pin name */
+#define BOARD_INITPINS_I2S0_MCLK_PIN_FUNCTION_ID           IOMUXC_PTA4_I2S0_MCLK   /*!< Pin function id */
+#define BOARD_INITPINS_I2S0_MCLK_LABEL                               "I2S0_MCLK"   /*!< Label */
+#define BOARD_INITPINS_I2S0_MCLK_NAME                                "I2S0_MCLK"   /*!< Identifier name */
+
+/* PTA2 (number AG14), I2S0_RXD0 */
+#define BOARD_INITPINS_I2S0_RXD0_PERIPHERAL                                 I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINS_I2S0_RXD0_SIGNAL                                  i2s_rxd   /*!< I2S0 signal: i2s_rxd */
+#define BOARD_INITPINS_I2S0_RXD0_CHANNEL                                       0   /*!< I2S0 i2s_rxd channel: 0 */
+#define BOARD_INITPINS_I2S0_RXD0_PIN_NAME                                   PTA2   /*!< Pin name */
+#define BOARD_INITPINS_I2S0_RXD0_PIN_FUNCTION_ID           IOMUXC_PTA2_I2S0_RXD0   /*!< Pin function id */
+#define BOARD_INITPINS_I2S0_RXD0_LABEL                               "I2S0_RXD0"   /*!< Label */
+#define BOARD_INITPINS_I2S0_RXD0_NAME                                "I2S0_RXD0"   /*!< Identifier name */
+
+/* PTA5 (number AC15), I2S0_TX_BCLK */
+#define BOARD_INITPINS_I2S0_TX_BCLK_PERIPHERAL                              I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINS_I2S0_TX_BCLK_SIGNAL                           i2s_tx_bclk   /*!< I2S0 signal: i2s_tx_bclk */
+#define BOARD_INITPINS_I2S0_TX_BCLK_PIN_NAME                                PTA5   /*!< Pin name */
+#define BOARD_INITPINS_I2S0_TX_BCLK_PIN_FUNCTION_ID     IOMUXC_PTA5_I2S0_TX_BCLK   /*!< Pin function id */
+#define BOARD_INITPINS_I2S0_TX_BCLK_LABEL                         "I2S0_TX_BCLK"   /*!< Label */
+#define BOARD_INITPINS_I2S0_TX_BCLK_NAME                          "I2S0_TX_BCLK"   /*!< Identifier name */
+
+/* PTA6 (number AB15), I2S0_TX_FS */
+#define BOARD_INITPINS_I2S0_TX_FS_PERIPHERAL                                I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINS_I2S0_TX_FS_SIGNAL                               i2s_tx_fs   /*!< I2S0 signal: i2s_tx_fs */
+#define BOARD_INITPINS_I2S0_TX_FS_PIN_NAME                                  PTA6   /*!< Pin name */
+#define BOARD_INITPINS_I2S0_TX_FS_PIN_FUNCTION_ID         IOMUXC_PTA6_I2S0_TX_FS   /*!< Pin function id */
+#define BOARD_INITPINS_I2S0_TX_FS_LABEL                             "I2S0_TX_FS"   /*!< Label */
+#define BOARD_INITPINS_I2S0_TX_FS_NAME                              "I2S0_TX_FS"   /*!< Identifier name */
+
+/* PTA7 (number AD14), I2S0_TXD0 */
+#define BOARD_INITPINS_I2S0_TXD0_PERIPHERAL                                 I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINS_I2S0_TXD0_SIGNAL                                  i2s_txd   /*!< I2S0 signal: i2s_txd */
+#define BOARD_INITPINS_I2S0_TXD0_CHANNEL                                       0   /*!< I2S0 i2s_txd channel: 0 */
+#define BOARD_INITPINS_I2S0_TXD0_PIN_NAME                                   PTA7   /*!< Pin name */
+#define BOARD_INITPINS_I2S0_TXD0_PIN_FUNCTION_ID           IOMUXC_PTA7_I2S0_TXD0   /*!< Pin function id */
+#define BOARD_INITPINS_I2S0_TXD0_LABEL                               "I2S0_TXD0"   /*!< Label */
+#define BOARD_INITPINS_I2S0_TXD0_NAME                                "I2S0_TXD0"   /*!< Identifier name */
+
+/* PTA3 (number AF14), VOL+ */
+#define BOARD_INITPINS_VOL_UP_PERIPHERAL                                     PTA   /*!< Device name: PTA */
+#define BOARD_INITPINS_VOL_UP_SIGNAL                                        port   /*!< PTA signal: port */
+#define BOARD_INITPINS_VOL_UP_CHANNEL                                          3   /*!< PTA port channel: 3 */
+#define BOARD_INITPINS_VOL_UP_PIN_NAME                                      PTA3   /*!< Pin name */
+#define BOARD_INITPINS_VOL_UP_PIN_FUNCTION_ID                   IOMUXC_PTA3_PTA3   /*!< Pin function id */
+#define BOARD_INITPINS_VOL_UP_LABEL                                       "VOL+"   /*!< Label */
+#define BOARD_INITPINS_VOL_UP_NAME                                      "VOL_UP"   /*!< Identifier name */
+
+/* PTA13 (number AF16), VOL- */
+#define BOARD_INITPINS_VOL_DOWN_PERIPHERAL                                   PTA   /*!< Device name: PTA */
+#define BOARD_INITPINS_VOL_DOWN_SIGNAL                                      port   /*!< PTA signal: port */
+#define BOARD_INITPINS_VOL_DOWN_CHANNEL                                       13   /*!< PTA port channel: 13 */
+#define BOARD_INITPINS_VOL_DOWN_PIN_NAME                                   PTA13   /*!< Pin name */
+#define BOARD_INITPINS_VOL_DOWN_PIN_FUNCTION_ID               IOMUXC_PTA13_PTA13   /*!< Pin function id */
+#define BOARD_INITPINS_VOL_DOWN_LABEL                                     "VOL-"   /*!< Label */
+#define BOARD_INITPINS_VOL_DOWN_NAME                                  "VOL_DOWN"   /*!< Identifier name */
+
+/* PTA14 (number AF17), WL_REG_ON */
+#define BOARD_INITPINS_WL_REG_ON_PERIPHERAL                                  PTA   /*!< Device name: PTA */
+#define BOARD_INITPINS_WL_REG_ON_SIGNAL                                     port   /*!< PTA signal: port */
+#define BOARD_INITPINS_WL_REG_ON_CHANNEL                                      14   /*!< PTA port channel: 14 */
+#define BOARD_INITPINS_WL_REG_ON_PIN_NAME                                  PTA14   /*!< Pin name */
+#define BOARD_INITPINS_WL_REG_ON_PIN_FUNCTION_ID              IOMUXC_PTA14_PTA14   /*!< Pin function id */
+#define BOARD_INITPINS_WL_REG_ON_LABEL                               "WL_REG_ON"   /*!< Label */
+#define BOARD_INITPINS_WL_REG_ON_NAME                                "WL_REG_ON"   /*!< Identifier name */
+
+/* PTA15 (number AF18), BT_REG_ON */
+#define BOARD_INITPINS_BT_REG_ON_PERIPHERAL                                  PTA   /*!< Device name: PTA */
+#define BOARD_INITPINS_BT_REG_ON_SIGNAL                                     port   /*!< PTA signal: port */
+#define BOARD_INITPINS_BT_REG_ON_CHANNEL                                      15   /*!< PTA port channel: 15 */
+#define BOARD_INITPINS_BT_REG_ON_PIN_NAME                                  PTA15   /*!< Pin name */
+#define BOARD_INITPINS_BT_REG_ON_PIN_FUNCTION_ID              IOMUXC_PTA15_PTA15   /*!< Pin function id */
+#define BOARD_INITPINS_BT_REG_ON_LABEL                               "BT_REG_ON"   /*!< Label */
+#define BOARD_INITPINS_BT_REG_ON_NAME                                "BT_REG_ON"   /*!< Identifier name */
+
+/* PTA31 (number AF24), WL_HOST_WAKE */
+#define BOARD_INITPINS_WL_HOST_WAKE_PERIPHERAL                               PTA   /*!< Device name: PTA */
+#define BOARD_INITPINS_WL_HOST_WAKE_SIGNAL                                  port   /*!< PTA signal: port */
+#define BOARD_INITPINS_WL_HOST_WAKE_CHANNEL                                   31   /*!< PTA port channel: 31 */
+#define BOARD_INITPINS_WL_HOST_WAKE_PIN_NAME                               PTA31   /*!< Pin name */
+#define BOARD_INITPINS_WL_HOST_WAKE_PIN_FUNCTION_ID           IOMUXC_PTA31_PTA31   /*!< Pin function id */
+#define BOARD_INITPINS_WL_HOST_WAKE_LABEL                         "WL_HOST_WAKE"   /*!< Label */
+#define BOARD_INITPINS_WL_HOST_WAKE_NAME                          "WL_HOST_WAKE"   /*!< Identifier name */
+
+/* PTB1 (number AF2), I2S1_TX_BCLK */
+#define BOARD_INITPINS_I2S1_TX_BCLK_PERIPHERAL                               PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_I2S1_TX_BCLK_SIGNAL                                  port   /*!< PTB signal: port */
+#define BOARD_INITPINS_I2S1_TX_BCLK_CHANNEL                                    1   /*!< PTB port channel: 1 */
+#define BOARD_INITPINS_I2S1_TX_BCLK_PIN_NAME                                PTB1   /*!< Pin name */
+#define BOARD_INITPINS_I2S1_TX_BCLK_PIN_FUNCTION_ID             IOMUXC_PTB1_PTB1   /*!< Pin function id */
+#define BOARD_INITPINS_I2S1_TX_BCLK_LABEL                         "I2S1_TX_BCLK"   /*!< Label */
+#define BOARD_INITPINS_I2S1_TX_BCLK_NAME                          "I2S1_TX_BCLK"   /*!< Identifier name */
+
+/* PTB2 (number AE3), I2S1_TX_FS */
+#define BOARD_INITPINS_I2S1_TX_FS_PERIPHERAL                                 PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_I2S1_TX_FS_SIGNAL                                    port   /*!< PTB signal: port */
+#define BOARD_INITPINS_I2S1_TX_FS_CHANNEL                                      2   /*!< PTB port channel: 2 */
+#define BOARD_INITPINS_I2S1_TX_FS_PIN_NAME                                  PTB2   /*!< Pin name */
+#define BOARD_INITPINS_I2S1_TX_FS_PIN_FUNCTION_ID               IOMUXC_PTB2_PTB2   /*!< Pin function id */
+#define BOARD_INITPINS_I2S1_TX_FS_LABEL                             "I2S1_TX_FS"   /*!< Label */
+#define BOARD_INITPINS_I2S1_TX_FS_NAME                              "I2S1_TX_FS"   /*!< Identifier name */
+
+/* PTB3 (number AE4), I2S1_TXD0 */
+#define BOARD_INITPINS_I2S1_TXD0_PERIPHERAL                                  PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_I2S1_TXD0_SIGNAL                                     port   /*!< PTB signal: port */
+#define BOARD_INITPINS_I2S1_TXD0_CHANNEL                                       3   /*!< PTB port channel: 3 */
+#define BOARD_INITPINS_I2S1_TXD0_PIN_NAME                                   PTB3   /*!< Pin name */
+#define BOARD_INITPINS_I2S1_TXD0_PIN_FUNCTION_ID                IOMUXC_PTB3_PTB3   /*!< Pin function id */
+#define BOARD_INITPINS_I2S1_TXD0_LABEL                               "I2S1_TXD0"   /*!< Label */
+#define BOARD_INITPINS_I2S1_TXD0_NAME                                "I2S1_TXD0"   /*!< Identifier name */
+
+/* PTB10 (number AC7), I2S1_RXD0 */
+#define BOARD_INITPINS_I2S1_RXD0_PERIPHERAL                                  PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_I2S1_RXD0_SIGNAL                                     port   /*!< PTB signal: port */
+#define BOARD_INITPINS_I2S1_RXD0_CHANNEL                                      10   /*!< PTB port channel: 10 */
+#define BOARD_INITPINS_I2S1_RXD0_PIN_NAME                                  PTB10   /*!< Pin name */
+#define BOARD_INITPINS_I2S1_RXD0_PIN_FUNCTION_ID              IOMUXC_PTB10_PTB10   /*!< Pin function id */
+#define BOARD_INITPINS_I2S1_RXD0_LABEL                               "I2S1_RXD0"   /*!< Label */
+#define BOARD_INITPINS_I2S1_RXD0_NAME                                "I2S1_RXD0"   /*!< Identifier name */
+
+/* PTB4 (number AG4), PTB4 */
+#define BOARD_INITPINS_PTB4_PERIPHERAL                                       PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_PTB4_SIGNAL                                          port   /*!< PTB signal: port */
+#define BOARD_INITPINS_PTB4_CHANNEL                                            4   /*!< PTB port channel: 4 */
+#define BOARD_INITPINS_PTB4_PIN_NAME                                        PTB4   /*!< Pin name */
+#define BOARD_INITPINS_PTB4_PIN_FUNCTION_ID                     IOMUXC_PTB4_PTB4   /*!< Pin function id */
+#define BOARD_INITPINS_PTB4_LABEL                                         "PTB4"   /*!< Label */
+#define BOARD_INITPINS_PTB4_NAME                                          "PTB4"   /*!< Identifier name */
+
+/* PTB5 (number AF4), PTB5 */
+#define BOARD_INITPINS_PTB5_PERIPHERAL                                       PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_PTB5_SIGNAL                                          port   /*!< PTB signal: port */
+#define BOARD_INITPINS_PTB5_CHANNEL                                            5   /*!< PTB port channel: 5 */
+#define BOARD_INITPINS_PTB5_PIN_NAME                                        PTB5   /*!< Pin name */
+#define BOARD_INITPINS_PTB5_PIN_FUNCTION_ID                     IOMUXC_PTB5_PTB5   /*!< Pin function id */
+#define BOARD_INITPINS_PTB5_LABEL                                         "PTB5"   /*!< Label */
+#define BOARD_INITPINS_PTB5_NAME                                          "PTB5"   /*!< Identifier name */
+
+/* PTB6 (number AF5), DDR_SW_EN# */
+#define BOARD_INITPINS_DDR_SW_EN_PERIPHERAL                                  PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_DDR_SW_EN_SIGNAL                                     port   /*!< PTB signal: port */
+#define BOARD_INITPINS_DDR_SW_EN_CHANNEL                                       6   /*!< PTB port channel: 6 */
+#define BOARD_INITPINS_DDR_SW_EN_PIN_NAME                                   PTB6   /*!< Pin name */
+#define BOARD_INITPINS_DDR_SW_EN_PIN_FUNCTION_ID                IOMUXC_PTB6_PTB6   /*!< Pin function id */
+#define BOARD_INITPINS_DDR_SW_EN_LABEL                              "DDR_SW_EN#"   /*!< Label */
+#define BOARD_INITPINS_DDR_SW_EN_NAME                                "DDR_SW_EN"   /*!< Identifier name */
+
+/* PTB7 (number AF6), BT_HOST_WAKE */
+#define BOARD_INITPINS_BT_HOST_WAKE_PERIPHERAL                               PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_BT_HOST_WAKE_SIGNAL                                  port   /*!< PTB signal: port */
+#define BOARD_INITPINS_BT_HOST_WAKE_CHANNEL                                    7   /*!< PTB port channel: 7 */
+#define BOARD_INITPINS_BT_HOST_WAKE_PIN_NAME                                PTB7   /*!< Pin name */
+#define BOARD_INITPINS_BT_HOST_WAKE_PIN_FUNCTION_ID             IOMUXC_PTB7_PTB7   /*!< Pin function id */
+#define BOARD_INITPINS_BT_HOST_WAKE_LABEL                         "BT_HOST_WAKE"   /*!< Label */
+#define BOARD_INITPINS_BT_HOST_WAKE_NAME                          "BT_HOST_WAKE"   /*!< Identifier name */
+
+/* PTB9 (number AD7), SEN_INT# */
+#define BOARD_INITPINS_SEN_INT_PERIPHERAL                                    PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_SEN_INT_SIGNAL                                       port   /*!< PTB signal: port */
+#define BOARD_INITPINS_SEN_INT_CHANNEL                                         9   /*!< PTB port channel: 9 */
+#define BOARD_INITPINS_SEN_INT_PIN_NAME                                     PTB9   /*!< Pin name */
+#define BOARD_INITPINS_SEN_INT_PIN_FUNCTION_ID                  IOMUXC_PTB9_PTB9   /*!< Pin function id */
+#define BOARD_INITPINS_SEN_INT_LABEL                                  "SEN_INT#"   /*!< Label */
+#define BOARD_INITPINS_SEN_INT_NAME                                    "SEN_INT"   /*!< Identifier name */
+
+/* PTB11 (number AB7), PMIC_INT# */
+#define BOARD_INITPINS_PMIC_INT_PERIPHERAL                                   PTB   /*!< Device name: PTB */
+#define BOARD_INITPINS_PMIC_INT_SIGNAL                                      port   /*!< PTB signal: port */
+#define BOARD_INITPINS_PMIC_INT_CHANNEL                                       11   /*!< PTB port channel: 11 */
+#define BOARD_INITPINS_PMIC_INT_PIN_NAME                                   PTB11   /*!< Pin name */
+#define BOARD_INITPINS_PMIC_INT_PIN_FUNCTION_ID               IOMUXC_PTB11_PTB11   /*!< Pin function id */
+#define BOARD_INITPINS_PMIC_INT_LABEL                                "PMIC_INT#"   /*!< Label */
+#define BOARD_INITPINS_PMIC_INT_NAME                                  "PMIC_INT"   /*!< Identifier name */
+
+/* PTB14 (number AG8), RTC_CLK */
+#define BOARD_INITPINS_RTC_CLK_PERIPHERAL                                    RTC   /*!< Device name: RTC */
+#define BOARD_INITPINS_RTC_CLK_SIGNAL                                 rtc_clkout   /*!< RTC signal: rtc_clkout */
+#define BOARD_INITPINS_RTC_CLK_PIN_NAME                                    PTB14   /*!< Pin name */
+#define BOARD_INITPINS_RTC_CLK_PIN_FUNCTION_ID           IOMUXC_PTB14_RTC_CLKOUT   /*!< Pin function id */
+#define BOARD_INITPINS_RTC_CLK_LABEL                                   "RTC_CLK"   /*!< Label */
+#define BOARD_INITPINS_RTC_CLK_NAME                                    "RTC_CLK"   /*!< Identifier name */
+
+/* PTA25 (number AG20), A7_POW_EN# */
+#define BOARD_INITPINSNOQSPI_A7_POW_EN_PERIPHERAL                            PTA   /*!< Device name: PTA */
+#define BOARD_INITPINSNOQSPI_A7_POW_EN_SIGNAL                               port   /*!< PTA signal: port */
+#define BOARD_INITPINSNOQSPI_A7_POW_EN_CHANNEL                                25   /*!< PTA port channel: 25 */
+#define BOARD_INITPINSNOQSPI_A7_POW_EN_PIN_NAME                            PTA25   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_A7_POW_EN_PIN_FUNCTION_ID        IOMUXC_PTA25_PTA25   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_A7_POW_EN_LABEL                        "A7_POW_EN#"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_A7_POW_EN_NAME                          "A7_POW_EN"   /*!< Identifier name */
+
+/* PTA19 (number AB19), UART0_RX */
+#define BOARD_INITPINSNOQSPI_UART0_RX_PERIPHERAL                         LPUART0   /*!< Device name: LPUART0 */
+#define BOARD_INITPINSNOQSPI_UART0_RX_SIGNAL                           lpuart_rx   /*!< LPUART0 signal: lpuart_rx */
+#define BOARD_INITPINSNOQSPI_UART0_RX_PIN_NAME                             PTA19   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_UART0_RX_PIN_FUNCTION_ID    IOMUXC_PTA19_LPUART0_RX   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_UART0_RX_LABEL                           "UART0_RX"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_UART0_RX_NAME                            "UART0_RX"   /*!< Identifier name */
+
+/* PTA18 (number AC19), UART0_TX */
+#define BOARD_INITPINSNOQSPI_UART0_TX_PERIPHERAL                         LPUART0   /*!< Device name: LPUART0 */
+#define BOARD_INITPINSNOQSPI_UART0_TX_SIGNAL                           lpuart_tx   /*!< LPUART0 signal: lpuart_tx */
+#define BOARD_INITPINSNOQSPI_UART0_TX_PIN_NAME                             PTA18   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_UART0_TX_PIN_FUNCTION_ID    IOMUXC_PTA18_LPUART0_TX   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_UART0_TX_LABEL                           "UART0_TX"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_UART0_TX_NAME                            "UART0_TX"   /*!< Identifier name */
+
+/* PTA4 (number AD15), I2S0_MCLK */
+#define BOARD_INITPINSNOQSPI_I2S0_MCLK_PERIPHERAL                           I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINSNOQSPI_I2S0_MCLK_SIGNAL                           i2s_mclk   /*!< I2S0 signal: i2s_mclk */
+#define BOARD_INITPINSNOQSPI_I2S0_MCLK_PIN_NAME                             PTA4   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S0_MCLK_PIN_FUNCTION_ID     IOMUXC_PTA4_I2S0_MCLK   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S0_MCLK_LABEL                         "I2S0_MCLK"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S0_MCLK_NAME                          "I2S0_MCLK"   /*!< Identifier name */
+
+/* PTA2 (number AG14), I2S0_RXD0 */
+#define BOARD_INITPINSNOQSPI_I2S0_RXD0_PERIPHERAL                           I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINSNOQSPI_I2S0_RXD0_SIGNAL                            i2s_rxd   /*!< I2S0 signal: i2s_rxd */
+#define BOARD_INITPINSNOQSPI_I2S0_RXD0_CHANNEL                                 0   /*!< I2S0 i2s_rxd channel: 0 */
+#define BOARD_INITPINSNOQSPI_I2S0_RXD0_PIN_NAME                             PTA2   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S0_RXD0_PIN_FUNCTION_ID     IOMUXC_PTA2_I2S0_RXD0   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S0_RXD0_LABEL                         "I2S0_RXD0"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S0_RXD0_NAME                          "I2S0_RXD0"   /*!< Identifier name */
+
+/* PTA5 (number AC15), I2S0_TX_BCLK */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_BCLK_PERIPHERAL                        I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_BCLK_SIGNAL                     i2s_tx_bclk   /*!< I2S0 signal: i2s_tx_bclk */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_BCLK_PIN_NAME                          PTA5   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_BCLK_PIN_FUNCTION_ID IOMUXC_PTA5_I2S0_TX_BCLK /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_BCLK_LABEL                   "I2S0_TX_BCLK"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_BCLK_NAME                    "I2S0_TX_BCLK"   /*!< Identifier name */
+
+/* PTA6 (number AB15), I2S0_TX_FS */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_FS_PERIPHERAL                          I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_FS_SIGNAL                         i2s_tx_fs   /*!< I2S0 signal: i2s_tx_fs */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_FS_PIN_NAME                            PTA6   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_FS_PIN_FUNCTION_ID   IOMUXC_PTA6_I2S0_TX_FS   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_FS_LABEL                       "I2S0_TX_FS"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S0_TX_FS_NAME                        "I2S0_TX_FS"   /*!< Identifier name */
+
+/* PTA7 (number AD14), I2S0_TXD0 */
+#define BOARD_INITPINSNOQSPI_I2S0_TXD0_PERIPHERAL                           I2S0   /*!< Device name: I2S0 */
+#define BOARD_INITPINSNOQSPI_I2S0_TXD0_SIGNAL                            i2s_txd   /*!< I2S0 signal: i2s_txd */
+#define BOARD_INITPINSNOQSPI_I2S0_TXD0_CHANNEL                                 0   /*!< I2S0 i2s_txd channel: 0 */
+#define BOARD_INITPINSNOQSPI_I2S0_TXD0_PIN_NAME                             PTA7   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S0_TXD0_PIN_FUNCTION_ID     IOMUXC_PTA7_I2S0_TXD0   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S0_TXD0_LABEL                         "I2S0_TXD0"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S0_TXD0_NAME                          "I2S0_TXD0"   /*!< Identifier name */
+
+/* PTA3 (number AF14), VOL+ */
+#define BOARD_INITPINSNOQSPI_VOL_UP_PERIPHERAL                               PTA   /*!< Device name: PTA */
+#define BOARD_INITPINSNOQSPI_VOL_UP_SIGNAL                                  port   /*!< PTA signal: port */
+#define BOARD_INITPINSNOQSPI_VOL_UP_CHANNEL                                    3   /*!< PTA port channel: 3 */
+#define BOARD_INITPINSNOQSPI_VOL_UP_PIN_NAME                                PTA3   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_VOL_UP_PIN_FUNCTION_ID             IOMUXC_PTA3_PTA3   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_VOL_UP_LABEL                                 "VOL+"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_VOL_UP_NAME                                "VOL_UP"   /*!< Identifier name */
+
+/* PTA13 (number AF16), VOL- */
+#define BOARD_INITPINSNOQSPI_VOL_DOWN_PERIPHERAL                             PTA   /*!< Device name: PTA */
+#define BOARD_INITPINSNOQSPI_VOL_DOWN_SIGNAL                                port   /*!< PTA signal: port */
+#define BOARD_INITPINSNOQSPI_VOL_DOWN_CHANNEL                                 13   /*!< PTA port channel: 13 */
+#define BOARD_INITPINSNOQSPI_VOL_DOWN_PIN_NAME                             PTA13   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_VOL_DOWN_PIN_FUNCTION_ID         IOMUXC_PTA13_PTA13   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_VOL_DOWN_LABEL                               "VOL-"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_VOL_DOWN_NAME                            "VOL_DOWN"   /*!< Identifier name */
+
+/* PTA14 (number AF17), WL_REG_ON */
+#define BOARD_INITPINSNOQSPI_WL_REG_ON_PERIPHERAL                            PTA   /*!< Device name: PTA */
+#define BOARD_INITPINSNOQSPI_WL_REG_ON_SIGNAL                               port   /*!< PTA signal: port */
+#define BOARD_INITPINSNOQSPI_WL_REG_ON_CHANNEL                                14   /*!< PTA port channel: 14 */
+#define BOARD_INITPINSNOQSPI_WL_REG_ON_PIN_NAME                            PTA14   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_WL_REG_ON_PIN_FUNCTION_ID        IOMUXC_PTA14_PTA14   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_WL_REG_ON_LABEL                         "WL_REG_ON"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_WL_REG_ON_NAME                          "WL_REG_ON"   /*!< Identifier name */
+
+/* PTA15 (number AF18), BT_REG_ON */
+#define BOARD_INITPINSNOQSPI_BT_REG_ON_PERIPHERAL                            PTA   /*!< Device name: PTA */
+#define BOARD_INITPINSNOQSPI_BT_REG_ON_SIGNAL                               port   /*!< PTA signal: port */
+#define BOARD_INITPINSNOQSPI_BT_REG_ON_CHANNEL                                15   /*!< PTA port channel: 15 */
+#define BOARD_INITPINSNOQSPI_BT_REG_ON_PIN_NAME                            PTA15   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_BT_REG_ON_PIN_FUNCTION_ID        IOMUXC_PTA15_PTA15   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_BT_REG_ON_LABEL                         "BT_REG_ON"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_BT_REG_ON_NAME                          "BT_REG_ON"   /*!< Identifier name */
+
+/* PTA31 (number AF24), WL_HOST_WAKE */
+#define BOARD_INITPINSNOQSPI_WL_HOST_WAKE_PERIPHERAL                         PTA   /*!< Device name: PTA */
+#define BOARD_INITPINSNOQSPI_WL_HOST_WAKE_SIGNAL                            port   /*!< PTA signal: port */
+#define BOARD_INITPINSNOQSPI_WL_HOST_WAKE_CHANNEL                             31   /*!< PTA port channel: 31 */
+#define BOARD_INITPINSNOQSPI_WL_HOST_WAKE_PIN_NAME                         PTA31   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_WL_HOST_WAKE_PIN_FUNCTION_ID     IOMUXC_PTA31_PTA31   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_WL_HOST_WAKE_LABEL                   "WL_HOST_WAKE"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_WL_HOST_WAKE_NAME                    "WL_HOST_WAKE"   /*!< Identifier name */
+
+/* PTB1 (number AF2), I2S1_TX_BCLK */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_PERIPHERAL                         PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_SIGNAL                            port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_CHANNEL                              1   /*!< PTB port channel: 1 */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_PIN_NAME                          PTB1   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_PIN_FUNCTION_ID       IOMUXC_PTB1_PTB1   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_LABEL                   "I2S1_TX_BCLK"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_BCLK_NAME                    "I2S1_TX_BCLK"   /*!< Identifier name */
+
+/* PTB2 (number AE3), I2S1_TX_FS */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_FS_PERIPHERAL                           PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_FS_SIGNAL                              port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_FS_CHANNEL                                2   /*!< PTB port channel: 2 */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_FS_PIN_NAME                            PTB2   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_FS_PIN_FUNCTION_ID         IOMUXC_PTB2_PTB2   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_FS_LABEL                       "I2S1_TX_FS"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S1_TX_FS_NAME                        "I2S1_TX_FS"   /*!< Identifier name */
+
+/* PTB3 (number AE4), I2S1_TXD0 */
+#define BOARD_INITPINSNOQSPI_I2S1_TXD0_PERIPHERAL                            PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_I2S1_TXD0_SIGNAL                               port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_I2S1_TXD0_CHANNEL                                 3   /*!< PTB port channel: 3 */
+#define BOARD_INITPINSNOQSPI_I2S1_TXD0_PIN_NAME                             PTB3   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S1_TXD0_PIN_FUNCTION_ID          IOMUXC_PTB3_PTB3   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S1_TXD0_LABEL                         "I2S1_TXD0"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S1_TXD0_NAME                          "I2S1_TXD0"   /*!< Identifier name */
+
+/* PTB10 (number AC7), I2S1_RXD0 */
+#define BOARD_INITPINSNOQSPI_I2S1_RXD0_PERIPHERAL                            PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_I2S1_RXD0_SIGNAL                               port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_I2S1_RXD0_CHANNEL                                10   /*!< PTB port channel: 10 */
+#define BOARD_INITPINSNOQSPI_I2S1_RXD0_PIN_NAME                            PTB10   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_I2S1_RXD0_PIN_FUNCTION_ID        IOMUXC_PTB10_PTB10   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_I2S1_RXD0_LABEL                         "I2S1_RXD0"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_I2S1_RXD0_NAME                          "I2S1_RXD0"   /*!< Identifier name */
+
+/* PTB4 (number AG4), PTB4 */
+#define BOARD_INITPINSNOQSPI_PTB4_PERIPHERAL                                 PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_PTB4_SIGNAL                                    port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_PTB4_CHANNEL                                      4   /*!< PTB port channel: 4 */
+#define BOARD_INITPINSNOQSPI_PTB4_PIN_NAME                                  PTB4   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_PTB4_PIN_FUNCTION_ID               IOMUXC_PTB4_PTB4   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_PTB4_LABEL                                   "PTB4"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_PTB4_NAME                                    "PTB4"   /*!< Identifier name */
+
+/* PTB5 (number AF4), PTB5 */
+#define BOARD_INITPINSNOQSPI_PTB5_PERIPHERAL                                 PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_PTB5_SIGNAL                                    port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_PTB5_CHANNEL                                      5   /*!< PTB port channel: 5 */
+#define BOARD_INITPINSNOQSPI_PTB5_PIN_NAME                                  PTB5   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_PTB5_PIN_FUNCTION_ID               IOMUXC_PTB5_PTB5   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_PTB5_LABEL                                   "PTB5"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_PTB5_NAME                                    "PTB5"   /*!< Identifier name */
+
+/* PTB6 (number AF5), DDR_SW_EN# */
+#define BOARD_INITPINSNOQSPI_DDR_SW_EN_PERIPHERAL                            PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_DDR_SW_EN_SIGNAL                               port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_DDR_SW_EN_CHANNEL                                 6   /*!< PTB port channel: 6 */
+#define BOARD_INITPINSNOQSPI_DDR_SW_EN_PIN_NAME                             PTB6   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_DDR_SW_EN_PIN_FUNCTION_ID          IOMUXC_PTB6_PTB6   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_DDR_SW_EN_LABEL                        "DDR_SW_EN#"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_DDR_SW_EN_NAME                          "DDR_SW_EN"   /*!< Identifier name */
+
+/* PTB7 (number AF6), BT_HOST_WAKE */
+#define BOARD_INITPINSNOQSPI_BT_HOST_WAKE_PERIPHERAL                         PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_BT_HOST_WAKE_SIGNAL                            port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_BT_HOST_WAKE_CHANNEL                              7   /*!< PTB port channel: 7 */
+#define BOARD_INITPINSNOQSPI_BT_HOST_WAKE_PIN_NAME                          PTB7   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_BT_HOST_WAKE_PIN_FUNCTION_ID       IOMUXC_PTB7_PTB7   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_BT_HOST_WAKE_LABEL                   "BT_HOST_WAKE"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_BT_HOST_WAKE_NAME                    "BT_HOST_WAKE"   /*!< Identifier name */
+
+/* PTB9 (number AD7), SEN_INT# */
+#define BOARD_INITPINSNOQSPI_SEN_INT_PERIPHERAL                              PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_SEN_INT_SIGNAL                                 port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_SEN_INT_CHANNEL                                   9   /*!< PTB port channel: 9 */
+#define BOARD_INITPINSNOQSPI_SEN_INT_PIN_NAME                               PTB9   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_SEN_INT_PIN_FUNCTION_ID            IOMUXC_PTB9_PTB9   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_SEN_INT_LABEL                            "SEN_INT#"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_SEN_INT_NAME                              "SEN_INT"   /*!< Identifier name */
+
+/* PTB11 (number AB7), PMIC_INT# */
+#define BOARD_INITPINSNOQSPI_PMIC_INT_PERIPHERAL                             PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_PMIC_INT_SIGNAL                                port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_PMIC_INT_CHANNEL                                 11   /*!< PTB port channel: 11 */
+#define BOARD_INITPINSNOQSPI_PMIC_INT_PIN_NAME                             PTB11   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_PMIC_INT_PIN_FUNCTION_ID         IOMUXC_PTB11_PTB11   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_PMIC_INT_LABEL                          "PMIC_INT#"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_PMIC_INT_NAME                            "PMIC_INT"   /*!< Identifier name */
+
+/* PTB14 (number AG8), RTC_CLK */
+#define BOARD_INITPINSNOQSPI_RTC_CLK_PERIPHERAL                              RTC   /*!< Device name: RTC */
+#define BOARD_INITPINSNOQSPI_RTC_CLK_SIGNAL                           rtc_clkout   /*!< RTC signal: rtc_clkout */
+#define BOARD_INITPINSNOQSPI_RTC_CLK_PIN_NAME                              PTB14   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_RTC_CLK_PIN_FUNCTION_ID     IOMUXC_PTB14_RTC_CLKOUT   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_RTC_CLK_LABEL                             "RTC_CLK"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_RTC_CLK_NAME                              "RTC_CLK"   /*!< Identifier name */
+
+/* PTB8 (number AG6), QSPIA_SS0_B */
+#define BOARD_INITPINSNOQSPI_QSPIA_SS0_B_PERIPHERAL                          PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_QSPIA_SS0_B_SIGNAL                             port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_QSPIA_SS0_B_CHANNEL                               8   /*!< PTB port channel: 8 */
+#define BOARD_INITPINSNOQSPI_QSPIA_SS0_B_PIN_NAME                           PTB8   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_QSPIA_SS0_B_PIN_FUNCTION_ID        IOMUXC_PTB8_PTB8   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_QSPIA_SS0_B_LABEL                     "QSPIA_SS0_B"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_QSPIA_SS0_B_NAME                      "QSPIA_SS0_B"   /*!< Identifier name */
+
+/* PTB15 (number AF8), QSPIA_SCLK */
+#define BOARD_INITPINSNOQSPI_QSPIA_SCLK_PERIPHERAL                           PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_QSPIA_SCLK_SIGNAL                              port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_QSPIA_SCLK_CHANNEL                               15   /*!< PTB port channel: 15 */
+#define BOARD_INITPINSNOQSPI_QSPIA_SCLK_PIN_NAME                           PTB15   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_QSPIA_SCLK_PIN_FUNCTION_ID       IOMUXC_PTB15_PTB15   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_QSPIA_SCLK_LABEL                       "QSPIA_SCLK"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_QSPIA_SCLK_NAME                        "QSPIA_SCLK"   /*!< Identifier name */
+
+/* PTB16 (number AF9), QSPIA_DATA3 */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA3_PERIPHERAL                          PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA3_SIGNAL                             port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA3_CHANNEL                              16   /*!< PTB port channel: 16 */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA3_PIN_NAME                          PTB16   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA3_PIN_FUNCTION_ID      IOMUXC_PTB16_PTB16   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA3_LABEL                     "QSPIA_DATA3"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA3_NAME                      "QSPIA_DATA3"   /*!< Identifier name */
+
+/* PTB17 (number AF10), QSPIA_DATA2 */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA2_PERIPHERAL                          PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA2_SIGNAL                             port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA2_CHANNEL                              17   /*!< PTB port channel: 17 */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA2_PIN_NAME                          PTB17   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA2_PIN_FUNCTION_ID      IOMUXC_PTB17_PTB17   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA2_LABEL                     "QSPIA_DATA2"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA2_NAME                      "QSPIA_DATA2"   /*!< Identifier name */
+
+/* PTB18 (number AG10), QSPIA_DATA1 */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA1_PERIPHERAL                          PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA1_SIGNAL                             port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA1_CHANNEL                              18   /*!< PTB port channel: 18 */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA1_PIN_NAME                          PTB18   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA1_PIN_FUNCTION_ID      IOMUXC_PTB18_PTB18   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA1_LABEL                     "QSPIA_DATA1"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA1_NAME                      "QSPIA_DATA1"   /*!< Identifier name */
+
+/* PTB19 (number AD10), QSPIA_DATA0 */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA0_PERIPHERAL                          PTB   /*!< Device name: PTB */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA0_SIGNAL                             port   /*!< PTB signal: port */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA0_CHANNEL                              19   /*!< PTB port channel: 19 */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA0_PIN_NAME                          PTB19   /*!< Pin name */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA0_PIN_FUNCTION_ID      IOMUXC_PTB19_PTB19   /*!< Pin function id */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA0_LABEL                     "QSPIA_DATA0"   /*!< Label */
+#define BOARD_INITPINSNOQSPI_QSPIA_DATA0_NAME                      "QSPIA_DATA0"   /*!< Identifier name */
+
+/* PTA16 (number AG18), I2C0_SCL */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SCL_PERIPHERAL                       LPI2C0   /*!< Device name: LPI2C0 */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SCL_SIGNAL                        lpi2c_scl   /*!< LPI2C0 signal: lpi2c_scl */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SCL_PIN_NAME                          PTA16   /*!< Pin name */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SCL_PIN_FUNCTION_ID IOMUXC_PTA16_LPI2C0_SCL   /*!< Pin function id */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SCL_LABEL                        "I2C0_SCL"   /*!< Label */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SCL_NAME                         "I2C0_SCL"   /*!< Identifier name */
+
+/* PTA17 (number AD19), I2C0_SDA */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SDA_PERIPHERAL                       LPI2C0   /*!< Device name: LPI2C0 */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SDA_SIGNAL                        lpi2c_sda   /*!< LPI2C0 signal: lpi2c_sda */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SDA_PIN_NAME                          PTA17   /*!< Pin name */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SDA_PIN_FUNCTION_ID IOMUXC_PTA17_LPI2C0_SDA   /*!< Pin function id */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SDA_LABEL                        "I2C0_SDA"   /*!< Label */
+#define BOARD_I2C_CONFIGUREPINS_I2C0_SDA_NAME                         "I2C0_SDA"   /*!< Identifier name */
+
+/* PTB12 (number AC8), I2C3_SCL */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SCL_PERIPHERAL                       LPI2C3   /*!< Device name: LPI2C3 */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SCL_SIGNAL                        lpi2c_scl   /*!< LPI2C3 signal: lpi2c_scl */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SCL_PIN_NAME                          PTB12   /*!< Pin name */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SCL_PIN_FUNCTION_ID IOMUXC_PTB12_LPI2C3_SCL   /*!< Pin function id */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SCL_LABEL                        "I2C3_SCL"   /*!< Label */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SCL_NAME                         "I2C3_SCL"   /*!< Identifier name */
+
+/* PTB13 (number AD8), I2C3_SDA */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SDA_PERIPHERAL                       LPI2C3   /*!< Device name: LPI2C3 */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SDA_SIGNAL                        lpi2c_sda   /*!< LPI2C3 signal: lpi2c_sda */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SDA_PIN_NAME                          PTB13   /*!< Pin name */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SDA_PIN_FUNCTION_ID IOMUXC_PTB13_LPI2C3_SDA   /*!< Pin function id */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SDA_LABEL                        "I2C3_SDA"   /*!< Label */
+#define BOARD_I2C_CONFIGUREPINS_I2C3_SDA_NAME                         "I2C3_SDA"   /*!< Identifier name */
+
+/*!
+ * @addtogroup pin_mux
+ * @{
+ */
+
+/***********************************************************************************************************************
+ * API
+ **********************************************************************************************************************/
+
+#if defined(__cplusplus)
+extern "C" {
+#endif
+
+
+/*!
+ * @brief Calls initialization functions.
+ *
+ */
+void BOARD_InitBootPins(void);
+
+/*!
+ * @brief Configures pin routing and optionally pin electrical features.
+ *
+ */
+void BOARD_InitPins(void);                                 /*!< Function assigned for the core: Cortex-M4[cm4] */
+
+/*!
+ * @brief Configures pin routing and optionally pin electrical features.
+ *
+ */
+void BOARD_InitPinsNoQSPI(void);                           /*!< Function assigned for the core: Cortex-M4[cm4] */
+
+/*!
+ * @brief Configures pin routing and optionally pin electrical features.
+ *
+ */
+void BOARD_I2C_ConfigurePins(void);                        /*!< Function assigned for the core: Cortex-M4[cm4] */
+
+#if defined(__cplusplus)
+}
+#endif
+
+/*!
+ * @}
+ */
+#endif /* _PIN_MUX_H_ */
+
+/***********************************************************************************************************************
+ * EOF
+ **********************************************************************************************************************/
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.c
new file mode 100644
index 0000000..e185398
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.c
@@ -0,0 +1,997 @@
+/*
+ * Copyright (c) 2016, Freescale Semiconductor, Inc.
+ * Copyright 2016-2018 NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include "FreeRTOS.h"
+#include "task.h"
+#include "semphr.h"
+#include "timers.h"
+#include "fsl_gpio.h"
+#include "fsl_port.h"
+#include "fsl_llwu.h"
+#include "fsl_lptmr.h"
+#include "fsl_msmc.h"
+#include "fsl_pmc0.h"
+#include "fsl_mu.h"
+#include "fsl_debug_console.h"
+
+#include "board.h"
+#include "lpm.h"
+#include "app_srtm.h"
+#include "power_mode_switch.h"
+
+#include "pin_mux.h"
+#include "fsl_iomuxc.h"
+#include "fsl_lpuart.h"
+
+#include "bd70528.h"
+
+/*******************************************************************************
+ * Struct Definitions
+ ******************************************************************************/
+#define APP_DEBUG_UART_BAUDRATE (115200U)                   /* Debug console baud rate. */
+#define APP_DEBUG_UART_DEFAULT_CLKSRC kCLOCK_IpSrcSircAsync /* SCG SIRC clock. */
+
+/* LPTMR0 is LLWU internal module 0. */
+#define SYSTICK_LLWU_MODULE (0U)
+/* Allow systick to be a wakeup source in VLLS. */
+#define SYSTICK_LLWU_WAKEUP (true)
+
+/* Enable GPIO PAD low power operation.
+ * NOTE: DON'T TURN THIS OPTION ON UNLESS YOU UNDERSTAND IT WELL.
+ * Rational: i.MX7ULP supports voltage detection circuitry on pads which results in additional power consumption.
+ *           We can disable this feature to save power, but it may cause malfunction or even SoC pad damage.
+ *           Please read "GPIO pads operating range configuration" in Reference Manual SIM module carefully
+ *           before turn APP_ENABLE_GPIO_PAD_LOW_POWER to "1". If there's any change on board, the pad range setting
+ *           code need to be modified accordingly.
+ */
+#define APP_ENABLE_GPIO_PAD_LOW_POWER (0)
+
+#define APP_LPTMR1_IRQ_PRIO (5U)
+
+#define LLWU_WAKEUP_PIN_IDX (1U) /* LLWU_P1 used for VOL+ button */
+#define LLWU_WAKEUP_PIN_TYPE kLLWU_ExternalPinFallingEdge
+#define APP_WAKEUP_BUTTON_NAME "VOL+"
+
+typedef enum _app_wakeup_source
+{
+    kAPP_WakeupSourceLptmr, /*!< Wakeup by LPTMR.        */
+    kAPP_WakeupSourcePin    /*!< Wakeup by external pin. */
+} app_wakeup_source_t;
+
+/*******************************************************************************
+ * Function Prototypes
+ ******************************************************************************/
+/* Set the clock configuration for HSRUN mode. */
+void APP_SetClockHsrun(void);
+/* Set the clock configuration for RUN mode from HSRUN mode. */
+void APP_SetClockRunFromHsrun(void);
+/* Set the clock configuration for RUN mode from VLPR mode. */
+void APP_SetClockRunFromVlpr(void);
+/* Set the clock configuration for VLPR mode. */
+void APP_SetClockVlpr(void);
+extern void APP_InitPMC0(void);
+extern void APP_PowerPreSwitchHook(smc_power_state_t originPowerState, lpm_power_mode_t targetMode);
+extern void APP_PowerPostSwitchHook(smc_power_state_t originPowerState, lpm_power_mode_t targetMode, bool result);
+extern void APP_UpdateSimDgo(uint32_t gpIdx, uint32_t mask, uint32_t value);
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+static uint8_t s_wakeupTimeout;            /* Wakeup timeout. (Unit: Second) */
+static app_wakeup_source_t s_wakeupSource; /* Wakeup source.                 */
+static SemaphoreHandle_t s_wakeupSig;
+static const char *s_modeNames[] = {"RUN", "WAIT", "STOP", "VLPR", "VLPW", "VLPS", "HSRUN", "LLS", "VLLS"};
+
+/*******************************************************************************
+ * Function Code
+ ******************************************************************************/
+extern const scg_sys_clk_config_t g_sysClkConfigVlpr;
+extern const scg_sys_clk_config_t g_sysClkConfigHsrun;
+extern void LLWU0_IRQHandler(void);
+extern bool BOARD_IsRunOnQSPI(void);
+
+static const pmc0_hsrun_mode_config_t s_pmc0HsrunModeConfig = {
+    .coreRegulatorVoltLevel = 33U, /* 0.596 + 33 * 0.01083 = 0.95339 */
+    .enableForwardBias = 1U};
+
+static const pmc0_run_mode_config_t s_pmc0RunModeConfig = {.coreRegulatorVoltLevel =
+                                                               28U}; /* 0.596 + 28 * 0.01083 = 0.89924 */
+
+static const pmc0_vlpr_mode_config_t s_pmc0VlprModeConfig = {
+    .arrayRegulatorSelect = 0U,
+    .coreRegulatorSelect = 0U,
+    .lvdMonitorSelect = 0U,
+    .hvdMonitorSelect = 0U,
+    .enableForceHpBandgap = 0U,
+    .coreRegulatorVoltLevel = 24U, /* 0.596 + 24 * 0.01083 = 0.85592 */
+    .enableReverseBackBias = 0U};
+
+static const pmc0_stop_mode_config_t s_pmc0StopModeConfig = {.coreRegulatorVoltLevel =
+                                                                 28U}; /* 0.596 + 28 * 0.01083 = 0.89924 */
+
+static const pmc0_vlps_mode_config_t s_pmc0VlpsModeConfig = {
+    .arrayRegulatorSelect = 0U,
+    .coreRegulatorSelect = 0U,
+    .lvdMonitorSelect = 0U,
+    .hvdMonitorSelect = 0U,
+    .enableForceHpBandgap = 0U,
+    .coreRegulatorVoltLevel = 28U, /* 0.596 + 28 * 0.01083 = 0.89924 */
+    .enableReverseBackBias = 0U};
+
+static const pmc0_lls_mode_config_t s_pmc0LlsModeConfig = {
+    .arrayRegulatorSelect = 0U,
+    .coreRegulatorSelect = 0U,
+    .lvdMonitorSelect = 0U,
+    .hvdMonitorSelect = 0U,
+    .enableForceHpBandgap = 0U,
+    .coreRegulatorVoltLevel = 13U, /* 0.596 + 13 * 0.01083 = 0.73679 */
+    .enableReverseBackBias = 0U};
+
+static const pmc0_vlls_mode_config_t s_pmc0VllsModeConfig = {
+    .arrayRegulatorSelect = 2U, .lvdMonitorSelect = 0U, .hvdMonitorSelect = 0U, .enableForceHpBandgap = 0U};
+
+static void APP_InitDebugConsole(void)
+{
+    CLOCK_SetIpSrc(BOARD_DEBUG_UART_PCC_ADDRESS, APP_DEBUG_UART_DEFAULT_CLKSRC);
+    uint32_t uartClkSrcFreq = CLOCK_GetIpFreq(BOARD_DEBUG_UART_PCC_ADDRESS);
+    DbgConsole_Init(BOARD_DEBUG_UART_INSTANCE, APP_DEBUG_UART_BAUDRATE, BOARD_DEBUG_UART_TYPE, uartClkSrcFreq);
+}
+
+void APP_InitPMC0(void)
+{
+    pmc0_bias_config_t bcfg = {.RBBNWellVoltageLevelSelect = 0,
+                               .RBBPWellVoltageLevelSelect = 0,
+                               .DisableRBBPullDown = 0,
+                               .FBBNWellVoltageLevelSelect = 5,
+                               .FBBPWellVoltageLevelSelect = 5};
+
+    /* Initialize PMC0 */
+    PMC0_SetBiasConfig(&bcfg);
+    PMC0_ConfigureHsrunMode(&s_pmc0HsrunModeConfig);
+    PMC0_ConfigureRunMode(&s_pmc0RunModeConfig);
+    PMC0_ConfigureVlprMode(&s_pmc0VlprModeConfig);
+    PMC0_ConfigureStopMode(&s_pmc0StopModeConfig);
+    PMC0_ConfigureVlpsMode(&s_pmc0VlpsModeConfig);
+    PMC0_ConfigureLlsMode(&s_pmc0LlsModeConfig);
+    PMC0_ConfigureVllsMode(&s_pmc0VllsModeConfig);
+}
+
+static void BOARD_InitClock(void)
+{
+    CLOCK_EnableClock(kCLOCK_PctlA);
+    CLOCK_EnableClock(kCLOCK_PctlB);
+    CLOCK_EnableClock(kCLOCK_Rgpio2p0);
+
+    BOARD_BootClockRUN();
+    CLOCK_SetVlprModeSysClkConfig(&g_sysClkConfigVlpr);
+    CLOCK_SetHsrunModeSysClkConfig(&g_sysClkConfigHsrun);
+
+    CLOCK_SetIpSrc(kCLOCK_Lpi2c3, kCLOCK_IpSrcSircAsync);
+    CLOCK_SetIpSrc(kCLOCK_Lpi2c0, kCLOCK_IpSrcSystem);
+
+    /* Use AUXPLL main clock source */
+    CLOCK_SetIpSrcDiv(kCLOCK_Sai0, kCLOCK_IpSrcRtcAuxPllAsync, 0, 0);
+
+#ifdef ENABLE_RAM_VECTOR_TABLE
+    /* Use RAM vector if needed. Any irq installation can trigger the RAM vector table copy and VTOR update. */
+    InstallIRQHandler(LLWU0_IRQn, (uint32_t)LLWU0_IRQHandler);
+#endif
+}
+
+static void BOARD_InitClockAndPins(void)
+{
+    BOARD_InitClock();
+
+    if (BOARD_IsRunOnQSPI())
+    {
+        BOARD_InitPins();
+    }
+    else
+    {
+        /* If not XIP, configure pins without QSPI feature which saves power. */
+        BOARD_InitPinsNoQSPI();
+    }
+
+    APP_SRTM_I2C_ReleaseBus();
+    BOARD_I2C_ConfigurePins();
+}
+
+
+static void APP_Suspend(void)
+{
+    /* Uninit PMIC I2C */
+    IOMUXC_SetPinMux(IOMUXC_PTB12_PTB12, 0U);
+    IOMUXC_SetPinMux(IOMUXC_PTB13_PTB13, 0U);
+    IOMUXC_SetPinConfig(IOMUXC_PTB12_PTB12, IOMUXC0_SW_MUX_CTL_PAD_PE_MASK | IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+    IOMUXC_SetPinConfig(IOMUXC_PTB13_PTB13, IOMUXC0_SW_MUX_CTL_PAD_PE_MASK | IOMUXC0_SW_MUX_CTL_PAD_PS_MASK);
+
+    /* Save SRTM context */
+    APP_SRTM_Suspend();
+}
+
+static void APP_Resume(bool resume)
+{
+    /* Recover PMIC pinmux. */
+    IOMUXC_SetPinMux(IOMUXC_PTB12_LPI2C3_SCL, 0U);
+    IOMUXC_SetPinConfig(IOMUXC_PTB12_LPI2C3_SCL, IOMUXC0_SW_MUX_CTL_PAD_ODE_MASK);
+    IOMUXC_SetPinMux(IOMUXC_PTB13_LPI2C3_SDA, 0U);
+    IOMUXC_SetPinConfig(IOMUXC_PTB13_LPI2C3_SDA, IOMUXC0_SW_MUX_CTL_PAD_ODE_MASK);
+
+    if (resume)
+    {
+        /* Only init clock. Pins are recovered at the beginning of resume (LPM_Resume). */
+        BOARD_InitClock();
+        /* Need to recover LPTMR clock, though LPTMR itself can keep its state in VLLS. */
+        CLOCK_EnableClock(kCLOCK_Lptmr1); /* Wakeup timer */
+    }
+
+    APP_SRTM_Resume(resume);
+}
+
+void APP_PowerPreSwitchHook(smc_power_state_t originPowerState, lpm_power_mode_t targetMode)
+{
+    if ((LPM_PowerModeRun != targetMode) && (LPM_PowerModeHsrun != targetMode) && (LPM_PowerModeVlpr != targetMode))
+    {
+        /* Wait for debug console output finished. */
+        while (!(kLPUART_TransmissionCompleteFlag & LPUART_GetStatusFlags((LPUART_Type *)BOARD_DEBUG_UART_BASEADDR)))
+        {
+        }
+        DbgConsole_Deinit();
+        /*
+         * Set pin for current leakage.
+         * Debug console RX pin: Set to pinmux to analog.
+         * Debug console TX pin: Don't need to change.
+         */
+        IOMUXC_SetPinMux(IOMUXC_PTA19_CMP1_IN3_3V, 0);
+
+        if (LPM_PowerModeVlls == targetMode)
+        {
+            APP_Suspend();
+        }
+    }
+}
+
+void APP_PowerPostSwitchHook(smc_power_state_t originPowerState, lpm_power_mode_t targetMode, bool result)
+{
+    if ((LPM_PowerModeRun != targetMode) && (LPM_PowerModeHsrun != targetMode) && (LPM_PowerModeVlpr != targetMode))
+    {
+        if (LPM_PowerModeVlls == targetMode)
+        {
+            APP_Resume(result);
+        }
+        /*
+         * Debug console RX pin is set to disable for current leakage, need to re-configure pinmux.
+         * Debug console TX pin: Don't need to change.
+         */
+        IOMUXC_SetPinMux(IOMUXC_PTA19_LPUART0_RX, 0);
+        APP_InitDebugConsole();
+    }
+    PRINTF("== Power switch %s ==\r\n", result ? "OK" : "FAIL");
+}
+
+/* LLWU interrupt handler. */
+void APP_LLWU0_IRQHandler(void)
+{
+    bool wakeup = false;
+
+    if (LLWU_GetInternalWakeupModuleFlag(LLWU, LLWU_MODULE_LPTMR1))
+    {
+        /* Woken up by LPTMR, then clear LPTMR flag. */
+        LPTMR_ClearStatusFlags(LPTMR1, kLPTMR_TimerCompareFlag);
+        LPTMR_DisableInterrupts(LPTMR1, kLPTMR_TimerInterruptEnable);
+        LPTMR_StopTimer(LPTMR1);
+        wakeup = true;
+    }
+
+    if (LLWU_GetExternalWakeupPinFlag(LLWU, LLWU_WAKEUP_PIN_IDX))
+    {
+        /* Woken up by external pin. */
+        LLWU_ClearExternalWakeupPinFlag(LLWU, LLWU_WAKEUP_PIN_IDX);
+        wakeup = true;
+    }
+
+    if (LLWU_GetInternalWakeupModuleFlag(LLWU, SYSTICK_LLWU_MODULE))
+    {
+        /* Woken up by Systick LPTMR, then clear LPTMR flag. */
+        LPTMR_ClearStatusFlags(SYSTICK_BASE, kLPTMR_TimerCompareFlag);
+    }
+
+    if (LLWU_GetInternalWakeupModuleFlag(LLWU, LLWU_MODULE_USBPHY))
+    {
+        /* Woken up by USB PHY, then need to wakeup. */
+        wakeup = true;
+    }
+
+    if (wakeup)
+    {
+        xSemaphoreGiveFromISR(s_wakeupSig, NULL);
+        portYIELD_FROM_ISR(pdTRUE);
+    }
+}
+
+/* LPTMR1 interrupt handler. */
+void LPTMR1_IRQHandler(void)
+{
+    bool wakeup = false;
+
+    if (kLPTMR_TimerInterruptEnable & LPTMR_GetEnabledInterrupts(LPTMR1))
+    {
+        LPTMR_ClearStatusFlags(LPTMR1, kLPTMR_TimerCompareFlag);
+        LPTMR_DisableInterrupts(LPTMR1, kLPTMR_TimerInterruptEnable);
+        LPTMR_StopTimer(LPTMR1);
+        wakeup = true;
+    }
+
+    if (wakeup)
+    {
+        xSemaphoreGiveFromISR(s_wakeupSig, NULL);
+        portYIELD_FROM_ISR(pdTRUE);
+    }
+
+    /* Add for ARM errata 838869, affects Cortex-M4, Cortex-M4F Store immediate overlapping
+    exception return operation might vector to incorrect interrupt */
+    __DSB();
+}
+
+static void APP_IRQDispatcher(IRQn_Type irq, void *param)
+{
+    switch (irq)
+    {
+        case LLWU0_IRQn:
+            APP_LLWU0_IRQHandler();
+            break;
+        case SNVS_IRQn:
+            break;
+        case PCTLA_IRQn:
+            if ((1U << APP_PIN_IDX(APP_PIN_VOL_PLUS)) & PORT_GetPinsInterruptFlags(PORTA))
+            {
+                /* Flag will be cleared by app_srtm.c */
+                xSemaphoreGiveFromISR(s_wakeupSig, NULL);
+                portYIELD_FROM_ISR(pdTRUE);
+            }
+            break;
+        case PCTLB_IRQn:
+            break;
+        default:
+            break;
+    }
+}
+
+static void APP_ShowPowerMode(smc_power_state_t powerMode)
+{
+    switch (powerMode)
+    {
+        case kSMC_PowerStateRun:
+            PRINTF("    Power mode: RUN\r\n");
+            break;
+        case kSMC_PowerStateVlpr:
+            PRINTF("    Power mode: VLPR\r\n");
+            break;
+        case kSMC_PowerStateHsrun:
+            PRINTF("    Power mode: HSRUN\r\n");
+            break;
+        default:
+            PRINTF("    Power mode wrong\r\n");
+            break;
+    }
+}
+
+/* Get input from user about wakeup timeout. */
+static uint8_t APP_GetWakeupTimeout(void)
+{
+    uint8_t timeout;
+
+    while (1)
+    {
+        PRINTF("Select the wake up timeout in seconds.\r\n");
+        PRINTF("The allowed range is 1s ~ 9s.\r\n");
+        PRINTF("Eg. enter 5 to wake up in 5 seconds.\r\n");
+        PRINTF("\r\nWaiting for input timeout value...\r\n\r\n");
+
+        timeout = GETCHAR();
+        PRINTF("%c\r\n", timeout);
+        if ((timeout > '0') && (timeout <= '9'))
+        {
+            return timeout - '0';
+        }
+        PRINTF("Wrong value!\r\n");
+    }
+}
+
+/* Get wakeup source by user input. */
+static app_wakeup_source_t APP_GetWakeupSource(void)
+{
+    uint8_t ch;
+
+    while (1)
+    {
+        PRINTF("Select the wake up source:\r\n");
+        PRINTF("Press T for LPTMR - Low Power Timer\r\n");
+        PRINTF("Press S for switch/button %s. \r\n", APP_WAKEUP_BUTTON_NAME);
+
+        PRINTF("\r\nWaiting for key press..\r\n\r\n");
+
+        ch = GETCHAR();
+
+        if ((ch >= 'a') && (ch <= 'z'))
+        {
+            ch -= 'a' - 'A';
+        }
+
+        if (ch == 'T')
+        {
+            return kAPP_WakeupSourceLptmr;
+        }
+        else if (ch == 'S')
+        {
+            return kAPP_WakeupSourcePin;
+        }
+        else
+        {
+            PRINTF("Wrong value!\r\n");
+        }
+    }
+}
+
+/* Get wakeup timeout and wakeup source. */
+static void APP_GetWakeupConfig(void)
+{
+    /* Get wakeup source by user input. */
+    s_wakeupSource = APP_GetWakeupSource();
+
+    if (kAPP_WakeupSourceLptmr == s_wakeupSource)
+    {
+        /* Wakeup source is LPTMR, user should input wakeup timeout value. */
+        s_wakeupTimeout = APP_GetWakeupTimeout();
+        PRINTF("Will wakeup in %d seconds.\r\n", s_wakeupTimeout);
+    }
+    else
+    {
+        PRINTF("Press %s to wake up.\r\n", APP_WAKEUP_BUTTON_NAME);
+    }
+}
+
+static void APP_SetWakeupConfig(lpm_power_mode_t targetMode)
+{
+    if (kAPP_WakeupSourceLptmr == s_wakeupSource)
+    {
+        LPTMR_SetTimerPeriod(LPTMR1, (1000U * s_wakeupTimeout));
+        LPTMR_StartTimer(LPTMR1);
+        LPTMR_EnableInterrupts(LPTMR1, kLPTMR_TimerInterruptEnable);
+    }
+
+    /* To avoid conflicting access of LLWU with SRTM dispatcher, we put the LLWU setting into SRTM dispatcher context.*/
+    /* If targetMode is VLLS/LLS, setup LLWU. */
+    if ((LPM_PowerModeLls == targetMode) || (LPM_PowerModeVlls == targetMode))
+    {
+        if (kAPP_WakeupSourceLptmr == s_wakeupSource)
+        {
+            /* Set LLWU LPTMR1 module wakeup source. */
+            APP_SRTM_SetWakeupModule(LLWU_MODULE_LPTMR1, true);
+        }
+        else
+        {
+            /* Set PORT and LLWU wakeup pin. */
+            APP_SRTM_SetWakeupPin(APP_PIN_VOL_PLUS, (uint16_t)LLWU_WAKEUP_PIN_TYPE | 0x100);
+        }
+    }
+    else
+    {
+        /* Set PORT pin. */
+        if (kAPP_WakeupSourcePin == s_wakeupSource)
+        {
+            APP_SRTM_SetWakeupPin(APP_PIN_VOL_PLUS, (uint16_t)LLWU_WAKEUP_PIN_TYPE);
+        }
+    }
+}
+
+static void APP_ClearWakeupConfig(lpm_power_mode_t targetMode)
+{
+    if (kAPP_WakeupSourcePin == s_wakeupSource)
+    {
+        APP_SRTM_SetWakeupPin(APP_PIN_VOL_PLUS, (uint16_t)kLLWU_ExternalPinDisable);
+    }
+    else if ((LPM_PowerModeLls == targetMode) || (LPM_PowerModeVlls == targetMode))
+    {
+        APP_SRTM_SetWakeupModule(LLWU_MODULE_LPTMR1, false);
+    }
+}
+
+static status_t APP_PowerModeSwitch(smc_power_state_t curPowerState, lpm_power_mode_t targetPowerMode)
+{
+    status_t status = kStatus_Success;
+
+    switch (targetPowerMode)
+    {
+        case LPM_PowerModeVlpr:
+            APP_SetClockVlpr();
+            status = SMC_SetPowerModeVlpr(MSMC0);
+            while (kSMC_PowerStateVlpr != SMC_GetPowerModeState(MSMC0))
+            {
+            }
+            break;
+
+        case LPM_PowerModeRun:
+            /* If enter RUN from HSRUN, fisrt change clock. */
+            if (kSMC_PowerStateHsrun == curPowerState)
+            {
+                APP_SetClockRunFromHsrun();
+            }
+
+            /* Power mode change. */
+            status = SMC_SetPowerModeRun(MSMC0);
+            while (kSMC_PowerStateRun != SMC_GetPowerModeState(MSMC0))
+            {
+            }
+
+            /* If enter RUN from VLPR, change clock after the power mode change. */
+            if (kSMC_PowerStateVlpr == curPowerState)
+            {
+                APP_SetClockRunFromVlpr();
+            }
+            break;
+
+        case LPM_PowerModeHsrun:
+            status = SMC_SetPowerModeHsrun(MSMC0);
+            while (kSMC_PowerStateHsrun != SMC_GetPowerModeState(MSMC0))
+            {
+            }
+
+            APP_SetClockHsrun(); /* Change clock setting after power mode change. */
+            break;
+
+        default:
+            PRINTF("Wrong value\r\n");
+            break;
+    }
+
+    if (status != kStatus_Success)
+    {
+        PRINTF("!!!! Power switch failed !!!!!\r\n");
+    }
+
+    return status;
+}
+
+static uint32_t APP_GetInputNumWithEcho(uint32_t length, bool allowZero)
+{
+    uint8_t ch;
+    uint8_t digBuffer[8U] = {0U};
+    uint8_t i, j;
+    uint8_t digCount = 0U;
+    uint32_t temp1, temp2 = 0U;
+    uint32_t result = 0U;
+    bool getFirstDig = false;
+
+    assert(length <= (sizeof(digBuffer) / sizeof(digBuffer[0U])));
+
+    /* Get user input and echo it back to terminal. */
+    for (;;)
+    {
+        ch = GETCHAR();
+
+        if (('a' <= ch) && ('f' >= ch))
+        {
+            ch = ch - ('a' - 'A');
+        }
+
+        if (((('0' <= ch) && ('9' >= ch)) || (('A' <= ch) && ('F' >= ch))) && (digCount < length))
+        {
+            if (false == getFirstDig)
+            {
+                if (allowZero || ('0' < ch))
+                {
+                    getFirstDig = true;
+                }
+                else
+                {
+                    continue;
+                }
+            }
+
+            PUTCHAR(ch);
+            digBuffer[digCount] = ch;
+            digCount++;
+        }
+        else if ((0x7FU == ch) && (0U != digCount))
+        {
+            digBuffer[digCount] = 0x0U;
+            digCount--;
+            PUTCHAR(0x7FU);
+        }
+        else
+        {
+            if ('\r' == ch)
+            {
+                break;
+            }
+        }
+    }
+
+    /* Reconstruct user input number. */
+    temp1 = digCount - 1;
+    for (i = 0; i < digCount; i++)
+    {
+        if (('0' <= digBuffer[i]) && ('9' >= digBuffer[i]))
+        {
+            temp2 = digBuffer[i] - '0';
+        }
+        else if (('A' <= digBuffer[i]) && ('F' >= digBuffer[i]))
+        {
+            temp2 = digBuffer[i] - 'A' + 10U;
+        }
+        else
+        {
+        }
+
+        for (j = 0U; j < temp1; j++)
+        {
+            temp2 *= 16U;
+        }
+        temp1--;
+        result += temp2;
+    }
+
+    return result;
+}
+
+static void APP_ReadPmicRegister(void)
+{
+    uint8_t reg;
+    uint8_t value;
+
+    for (;;)
+    {
+        /* Scroll to a new page. */
+        PRINTF("Please select the register address to dump(0~FF):");
+        reg = APP_GetInputNumWithEcho(2U, true);
+        if (0xFFU >= reg)
+        {
+            break;
+        }
+    }
+    PRINTF("\r\n");
+
+    /* Read register from BD70528 in SRTM dispatcher context */
+    value = APP_SRTM_GetPmicReg(reg);
+
+    PRINTF("\r\nDump Format: [Register Address] = Register Content:\r\n");
+    PRINTF("[0x%x] = 0x%x\r\n", reg, value);
+    PRINTF("\r\n");
+    PRINTF("Press Any Key to Home Page...");
+    GETCHAR();
+}
+
+static void APP_DumpPmicRegister(void)
+{
+    uint8_t reg;
+    uint8_t value;
+
+    PRINTF("\r\nDump Format: [Register Address] = Register Content:\r\n");
+
+    for (reg = 0; reg <= PMIC_LAST_ADDR; reg++) {
+        value = APP_SRTM_GetPmicReg(reg);
+        PRINTF("[0x%x] = 0x%x\r\n", reg, value);
+    }
+
+    PRINTF("Press Any Key to Home Page...");
+    GETCHAR();
+}
+
+static void APP_SetPmicRegister(void)
+{
+    uint8_t reg;
+    uint8_t value;
+    uint8_t temp;
+
+    for (;;)
+    {
+        /* Scroll to a new page. */
+        PRINTF("Please input the register address to set(0~FF):");
+        reg = APP_GetInputNumWithEcho(2U, true);
+        if (255U >= reg)
+        {
+            break;
+        }
+    }
+    PRINTF("\r\n");
+
+    for (;;)
+    {
+        /* Scroll to a new page. */
+        PRINTF("Please input the register content to set(0~FF):");
+        value = APP_GetInputNumWithEcho(2U, true);
+        if (0xFFU >= value)
+        {
+            break;
+        }
+    }
+    PRINTF("\r\n");
+
+    /* Set register content to BD70528 in SRTM dispatcher context */
+    APP_SRTM_SetPmicReg(reg, value);
+
+    /* Read register from BD70528 in SRTM dispatcher context */
+    temp = APP_SRTM_GetPmicReg(reg);
+
+    PRINTF("\r\nDump Format: [Register Address] = Register Content:\r\n");
+    PRINTF("[0x%x] = 0x%x\r\n", reg, temp);
+    PRINTF("\r\n");
+    PRINTF("Press Any Key to Home Page...");
+    GETCHAR();
+}
+
+void APP_SetPowerMode(smc_power_state_t powerMode)
+{
+    switch (powerMode)
+    {
+        case kSMC_PowerStateRun:
+            LPM_SetPowerMode(LPM_PowerModeRun);
+            break;
+        case kSMC_PowerStateVlpr:
+            LPM_SetPowerMode(LPM_PowerModeVlpr);
+            break;
+        case kSMC_PowerStateHsrun:
+            LPM_SetPowerMode(LPM_PowerModeHsrun);
+            break;
+        default:
+            break;
+    }
+}
+
+/* Power Mode Switch task */
+void PowerModeSwitchTask(void *pvParameters)
+{
+    status_t status;
+    lptmr_config_t lptmrConfig;
+    smc_power_state_t curPowerState;
+    mu_power_mode_t powerMode;
+    lpm_power_mode_t targetPowerMode;
+    uint32_t resetSrc;
+    uint32_t freq = 0U;
+    uint8_t ch;
+    const char *errorMsg;
+
+    /* As IRQ handler main entry locates in app_srtm.c to support services, here need an entry to handle application
+     * IRQ events.
+     */
+    APP_SRTM_SetIRQHandler(APP_IRQDispatcher, NULL);
+    /* Add Systick as LLS/VLLS wakeup source, depending on SYSTICK_LLWU_WAKEUP value. */
+    APP_SRTM_SetWakeupModule(SYSTICK_LLWU_MODULE, SYSTICK_LLWU_WAKEUP);
+
+    /* Setup LPTMR. */
+    LPTMR_GetDefaultConfig(&lptmrConfig);
+    lptmrConfig.prescalerClockSource = kLPTMR_PrescalerClock_1; /* Use LPO 1KHz as clock source. */
+    lptmrConfig.bypassPrescaler = true;
+    LPTMR_Init(LPTMR1, &lptmrConfig);
+    NVIC_SetPriority(LPTMR1_IRQn, APP_LPTMR1_IRQ_PRIO);
+
+    EnableIRQ(LPTMR1_IRQn);
+
+    resetSrc = SMC_GetPreviousResetSources(MSMC0);
+    PRINTF("\r\nMCU wakeup source 0x%x...\r\n", resetSrc);
+
+    APP_SRTM_BootCA7();
+
+    for (;;)
+    {
+        freq = CLOCK_GetFreq(kCLOCK_CoreSysClk);
+        PRINTF("\r\n####################  Power Mode Switch Task ####################\n\r\n");
+        PRINTF("    Build Time: %s--%s \r\n", __DATE__, __TIME__);
+        PRINTF("    Core Clock: %dHz \r\n", freq);
+        curPowerState = SMC_GetPowerModeState(MSMC0);
+        APP_ShowPowerMode(curPowerState);
+        PRINTF("\r\nSelect the desired operation \n\r\n");
+        PRINTF("Press  %c for enter: RUN      - Normal RUN mode\r\n", kAPP_PowerModeRun);
+        PRINTF("Press  %c for enter: WAIT     - Wait mode\r\n", kAPP_PowerModeWait);
+        PRINTF("Press  %c for enter: STOP     - Stop mode\r\n", kAPP_PowerModeStop);
+        PRINTF("Press  %c for enter: VLPR     - Very Low Power Run mode\r\n", kAPP_PowerModeVlpr);
+        PRINTF("Press  %c for enter: VLPW     - Very Low Power Wait mode\r\n", kAPP_PowerModeVlpw);
+        PRINTF("Press  %c for enter: VLPS     - Very Low Power Stop mode\r\n", kAPP_PowerModeVlps);
+        PRINTF("Press  %c for enter: HSRUN    - High Speed RUN mode\r\n", kAPP_PowerModeHsrun);
+        PRINTF("Press  %c for enter: LLS      - Low Leakage Stop mode\r\n", kAPP_PowerModeLls);
+        PRINTF("Press  %c for enter: VLLS     - Very Low Leakage Stop mode\r\n", kAPP_PowerModeVlls);
+        PRINTF("Press  Q for query CA7 core power status.\r\n");
+        PRINTF("Press  W for wake up CA7 core in VLLS/VLPS.\r\n");
+        PRINTF("Press  T for reboot CA7 core.\r\n");
+        PRINTF("Press  U for shutdown CA7 core.\r\n");
+        PRINTF("Press  V for boot CA7 core.\r\n");
+        PRINTF("Press  R for read BD70528 Register.\r\n");
+        PRINTF("Press  X for dump all BD70528 Registers.\r\n");
+        PRINTF("Press  S for set BD70528 Register.\r\n");
+        PRINTF("\r\nWaiting for power mode select..\r\n\r\n");
+
+        /* Wait for user response */
+        ch = GETCHAR();
+        if ((ch >= 'a') && (ch <= 'z'))
+        {
+            ch -= 'a' - 'A';
+        }
+
+        targetPowerMode = (lpm_power_mode_t)(ch - 'A');
+
+        if (targetPowerMode <= LPM_PowerModeVlls)
+        {
+            if (!LPM_IsTargetModeValid(targetPowerMode, &errorMsg))
+            {
+                assert(errorMsg);
+                PRINTF(errorMsg);
+            }
+            else if (!LPM_SetPowerMode(targetPowerMode))
+            {
+                PRINTF("Some task doesn't allow to enter mode %s\r\n", s_modeNames[targetPowerMode]);
+            }
+            else if ((LPM_PowerModeRun == targetPowerMode) || (LPM_PowerModeHsrun == targetPowerMode) ||
+                     (LPM_PowerModeVlpr == targetPowerMode))
+            {
+                /* If target mode is RUN/VLPR/HSRUN, switch directly. */
+                APP_PowerPreSwitchHook(curPowerState, targetPowerMode);
+                status = APP_PowerModeSwitch(curPowerState, targetPowerMode);
+                APP_PowerPostSwitchHook(curPowerState, targetPowerMode, status == kStatus_Success);
+            }
+            else /* Idle task will handle the low power state. */
+            {
+                APP_GetWakeupConfig();
+                APP_SetWakeupConfig(targetPowerMode);
+                xSemaphoreTake(s_wakeupSig, portMAX_DELAY);
+                if (targetPowerMode == LPM_PowerModeVlls)
+                {
+                    /* PMC0 need to be reconfigured after VLLS. */
+                    APP_InitPMC0();
+                }
+                /* Need to reset power mode to avoid unintentional WFI. */
+                curPowerState = SMC_GetPowerModeState(MSMC0);
+                APP_SetPowerMode(curPowerState);
+                /* The call might be blocked by SRTM dispatcher task. Must be called after power mode reset. */
+                APP_ClearWakeupConfig(targetPowerMode);
+            }
+        }
+        else if ('Q' == ch)
+        {
+            powerMode = MU_GetOtherCorePowerMode(MUA);
+            switch (powerMode)
+            {
+                case kMU_PowerModeRun:
+                    PRINTF("CA7 power mode RUN!\r\n");
+                    break;
+
+                case kMU_PowerModeWait:
+                    PRINTF("CA7 power mode WAIT!\r\n");
+                    break;
+
+                case kMU_PowerModeStop:
+                    PRINTF("CA7 power mode STOP/VLPS!\r\n");
+                    break;
+
+                case kMU_PowerModeDsm:
+                    PRINTF("CA7 power mode LLS/VLLS!\r\n");
+                    break;
+
+                default:
+                    PRINTF("Wrong power mode value %d!\r\n", (int32_t)powerMode);
+                    break;
+            }
+        }
+        else if ('W' == ch)
+        {
+            APP_SRTM_WakeupCA7();
+        }
+        else if ('T' == ch)
+        {
+            APP_SRTM_RebootCA7();
+        }
+        else if ('U' == ch)
+        {
+            APP_SRTM_ShutdownCA7();
+        }
+        else if ('V' == ch)
+        {
+            APP_SRTM_BootCA7();
+        }
+        else if ('R' == ch)
+        {
+            APP_ReadPmicRegister();
+        }
+        else if ('X' == ch)
+        {
+            APP_DumpPmicRegister();
+        }
+        else if ('S' == ch)
+        {
+            APP_SetPmicRegister();
+        }
+        else
+        {
+            PRINTF("Invalid command %c[0x%x]\r\n", ch, ch);
+        }
+
+        PRINTF("\r\nNext loop\r\n");
+    }
+}
+
+void vApplicationMallocFailedHook(void)
+{
+    PRINTF("Malloc Failed!!!\r\n");
+}
+
+void vPortSuppressTicksAndSleep(TickType_t xExpectedIdleTime)
+{
+    uint32_t irqMask;
+    smc_power_state_t curPowerState;
+    lpm_power_mode_t targetPowerMode;
+    bool result;
+
+    irqMask = DisableGlobalIRQ();
+
+    /* Only when no context switch is pending and no task is waiting for the scheduler
+     * to be unsuspended then enter low power entry.
+     */
+    if (eTaskConfirmSleepModeStatus() != eAbortSleep)
+    {
+        targetPowerMode = LPM_GetPowerMode();
+        if (targetPowerMode != LPM_PowerModeRun && targetPowerMode != LPM_PowerModeVlpr &&
+            targetPowerMode != LPM_PowerModeHsrun)
+        {
+            /* Only wait when target power mode is not running */
+            curPowerState = SMC_GetPowerModeState(MSMC0);
+            APP_PowerPreSwitchHook(curPowerState, targetPowerMode);
+            result = LPM_WaitForInterrupt((uint64_t)1000 * xExpectedIdleTime / configTICK_RATE_HZ);
+            APP_PowerPostSwitchHook(curPowerState, targetPowerMode, result);
+        }
+    }
+
+    EnableGlobalIRQ(irqMask);
+}
+
+/* Called in PowerModeSwitchTask */
+static bool APP_LpmListener(lpm_power_mode_t curMode, lpm_power_mode_t newMode, void *data)
+{
+    PRINTF("WorkingTask %d: Transfer from %s to %s\r\n", (uint32_t)data, s_modeNames[curMode], s_modeNames[newMode]);
+
+    /* Do necessary preparation for this mode change */
+
+    return true; /* allow this switch */
+}
+
+/*!
+ * @brief simulating working task.
+ */
+static void WorkingTask(void *pvParameters)
+{
+    LPM_RegisterPowerListener(APP_LpmListener, pvParameters);
+
+    for (;;)
+    {
+        /* Use App task logic to replace vTaskDelay */
+        PRINTF("Task %d is working now\r\n", (uint32_t)pvParameters);
+        vTaskDelay(portMAX_DELAY);
+    }
+}
+
+/*! @brief Main function */
+int main(void)
+{
+    BOARD_InitClockAndPins();
+    APP_InitDebugConsole();
+
+    APP_SRTM_Init();
+    LPM_Init();
+
+    s_wakeupSig = xSemaphoreCreateBinary();
+
+    xTaskCreate(PowerModeSwitchTask, "Main Task", 512U, NULL, tskIDLE_PRIORITY + 1U, NULL);
+    xTaskCreate(WorkingTask, "Working Task", configMINIMAL_STACK_SIZE, (void *)1, tskIDLE_PRIORITY + 2U, NULL);
+
+    /* Start FreeRTOS scheduler. */
+    vTaskStartScheduler();
+
+    /* Application should never reach this point. */
+    for (;;)
+    {
+    }
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.h
new file mode 100644
index 0000000..2a81fed
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.h
@@ -0,0 +1,44 @@
+/*
+ * Copyright (c) 2016, Freescale Semiconductor, Inc.
+ * Copyright 2016-2017 NXP
+ * All rights reserved.
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef _POWER_MODE_SWITCH_H_
+#define _POWER_MODE_SWITCH_H_
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+
+/* Power mode definition used in application. */
+typedef enum _app_power_mode {
+    kAPP_PowerModeRun = 'A', /* Normal RUN mode */
+    kAPP_PowerModeWait,      /* WAIT mode. */
+    kAPP_PowerModeStop,      /* STOP mode. */
+    kAPP_PowerModeVlpr,      /* VLPR mode. */
+    kAPP_PowerModeVlpw,      /* VLPW mode. */
+    kAPP_PowerModeVlps,      /* VLPS mode. */
+    kAPP_PowerModeHsrun,     /* HighSpeed RUN mode */
+    kAPP_PowerModeLls,       /* LLS mode */
+    kAPP_PowerModeVlls,      /* VLLS mode */
+} app_power_mode_t;
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#if defined(__cplusplus)
+extern "C" {
+#endif
+
+#if defined(__cplusplus)
+}
+#endif
+
+#endif /* _POWER_MODE_SWITCH_H_ */
+
+/*******************************************************************************
+ * EOF
+ ******************************************************************************/
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.img b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.img
new file mode 100644
index 0000000000000000000000000000000000000000..f7434e81976c7bc952d633f1929a18f6e45e697b
GIT binary patch
literal 70311
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

literal 0
HcmV?d00001

diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.xml b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.xml
new file mode 100644
index 0000000..ad4a438
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/power_mode_switch.xml
@@ -0,0 +1,170 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<ksdk:examples xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd manifest.xsd">
+  <externalDefinitions>
+    <definition extID="com.nxp.mcuxpresso"/>
+    <definition extID="component.lists.MCIMX7U5"/>
+    <definition extID="component.lpuart_adapter.MCIMX7U5"/>
+    <definition extID="component.serial_manager.MCIMX7U5"/>
+    <definition extID="component.serial_manager_uart.MCIMX7U5"/>
+    <definition extID="driver.pf1550.MCIMX7U5"/>
+    <definition extID="driver.srtm.MCIMX7U5"/>
+    <definition extID="driver.srtm.freertos.MCIMX7U5"/>
+    <definition extID="driver.wm8960.MCIMX7U5"/>
+    <definition extID="middleware.freertos.MCIMX7U5"/>
+    <definition extID="middleware.freertos.heap.heap_4.MCIMX7U5"/>
+    <definition extID="middleware.issdk.algorithms.pedometer.MCIMX7U5"/>
+    <definition extID="middleware.issdk.algorithms.pedometer.lib_cm4.MCIMX7U5"/>
+    <definition extID="middleware.issdk.sensor.allregdefs.MCIMX7U5"/>
+    <definition extID="middleware.multicore.rpmsg_lite.MCIMX7U5"/>
+    <definition extID="middleware.multicore.rpmsg_lite.freertos.MCIMX7U5"/>
+    <definition extID="middleware.multicore.rpmsg_lite.imx7ulp_m4_freertos.MCIMX7U5"/>
+    <definition extID="platform.CMSIS_Driver_Include.Common_CMSISInclude.MCIMX7U5"/>
+    <definition extID="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MCIMX7U5"/>
+    <definition extID="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MCIMX7U5"/>
+    <definition extID="platform.Include_common.MCIMX7U5"/>
+    <definition extID="platform.Include_core_cm4.MCIMX7U5"/>
+    <definition extID="platform.devices.MCIMX7U5_CMSIS.MCIMX7U5"/>
+    <definition extID="platform.devices.MCIMX7U5_startup.MCIMX7U5"/>
+    <definition extID="platform.drivers.clock.MCIMX7U5"/>
+    <definition extID="platform.drivers.common.MCIMX7U5"/>
+    <definition extID="platform.drivers.dmamux.MCIMX7U5"/>
+    <definition extID="platform.drivers.edma.MCIMX7U5"/>
+    <definition extID="platform.drivers.gpio.MCIMX7U5"/>
+    <definition extID="platform.drivers.llwu.MCIMX7U5"/>
+    <definition extID="platform.drivers.lpi2c.MCIMX7U5"/>
+    <definition extID="platform.drivers.lpi2c_freertos.MCIMX7U5"/>
+    <definition extID="platform.drivers.lptmr.MCIMX7U5"/>
+    <definition extID="platform.drivers.lpuart.MCIMX7U5"/>
+    <definition extID="platform.drivers.msmc.MCIMX7U5"/>
+    <definition extID="platform.drivers.mu.MCIMX7U5"/>
+    <definition extID="platform.drivers.pmc0.MCIMX7U5"/>
+    <definition extID="platform.drivers.port.MCIMX7U5"/>
+    <definition extID="platform.drivers.sai.MCIMX7U5"/>
+    <definition extID="platform.drivers.sai_edma.MCIMX7U5"/>
+    <definition extID="platform.drivers.snvs_lp.MCIMX7U5"/>
+    <definition extID="platform.utilities.assert.MCIMX7U5"/>
+    <definition extID="utility.debug_console.MCIMX7U5"/>
+    <definition extID="iar"/>
+    <definition extID="armgcc"/>
+    <definition extID="mdk"/>
+    <definition extID="mcuxpresso"/>
+  </externalDefinitions>
+  <example id="evkmcimx7ulp_power_mode_switch" name="power_mode_switch" category="demo_apps" dependency="platform.drivers.port.MCIMX7U5 platform.drivers.llwu.MCIMX7U5 platform.drivers.lptmr.MCIMX7U5 platform.drivers.gpio.MCIMX7U5 platform.drivers.clock.MCIMX7U5 platform.drivers.common.MCIMX7U5 platform.devices.MCIMX7U5_CMSIS.MCIMX7U5 utility.debug_console.MCIMX7U5 component.lpuart_adapter.MCIMX7U5 component.serial_manager.MCIMX7U5 component.serial_manager_uart.MCIMX7U5 platform.drivers.lpuart.MCIMX7U5 component.lists.MCIMX7U5 platform.devices.MCIMX7U5_startup.MCIMX7U5 platform.drivers.msmc.MCIMX7U5 platform.utilities.assert.MCIMX7U5 platform.drivers.dmamux.MCIMX7U5 platform.Include_core_cm4.MCIMX7U5 platform.Include_common.MCIMX7U5 platform.drivers.edma.MCIMX7U5 platform.drivers.lpi2c.MCIMX7U5 platform.drivers.lpi2c_freertos.MCIMX7U5 middleware.freertos.MCIMX7U5 platform.drivers.pmc0.MCIMX7U5 platform.drivers.snvs_lp.MCIMX7U5 platform.drivers.mu.MCIMX7U5 driver.pf1550.MCIMX7U5 platform.drivers.sai.MCIMX7U5 platform.drivers.sai_edma.MCIMX7U5 driver.wm8960.MCIMX7U5 driver.srtm.freertos.MCIMX7U5 driver.srtm.MCIMX7U5 middleware.multicore.rpmsg_lite.imx7ulp_m4_freertos.MCIMX7U5 middleware.multicore.rpmsg_lite.freertos.MCIMX7U5 middleware.multicore.rpmsg_lite.MCIMX7U5 middleware.freertos.heap.heap_4.MCIMX7U5 middleware.issdk.sensor.allregdefs.MCIMX7U5 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MCIMX7U5 platform.CMSIS_Driver_Include.Common_CMSISInclude.MCIMX7U5 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MCIMX7U5 middleware.issdk.algorithms.pedometer.MCIMX7U5 middleware.issdk.algorithms.pedometer.lib_cm4.MCIMX7U5">
+    <projects>
+      <project type="com.crt.advproject.projecttype.exe" nature="org.eclipse.cdt.core.cnature"/>
+    </projects>
+    <toolchainSettings>
+      <toolchainSetting id_refs="com.nxp.mcuxpresso">
+        <option id="com.crt.advproject.gas.fpu" type="enum">
+          <value>com.crt.advproject.gas.fpu.fpv4.hard</value>
+        </option>
+        <option id="com.crt.advproject.gcc.fpu" type="enum">
+          <value>com.crt.advproject.gcc.fpu.fpv4.hard</value>
+        </option>
+        <option id="com.crt.advproject.c.misc.dialect" type="enum">
+          <value>com.crt.advproject.misc.dialect.gnu99</value>
+        </option>
+        <option id="com.crt.advproject.gcc.exe.debug.option.debugging.level" type="enum">
+          <value>gnu.c.debugging.level.default</value>
+        </option>
+        <option id="gnu.c.compiler.option.preprocessor.def.symbols" type="stringList">
+          <value>SRTM_DEBUG_MESSAGE_FUNC=DbgConsole_Printf</value>
+          <value>SRTM_DEBUG_VERBOSE_LEVEL=SRTM_DEBUG_VERBOSE_WARN</value>
+          <value>CPU_MCIMX7U5DVP08</value>
+          <value>FSL_RTOS_FREE_RTOS</value>
+          <value>SDK_I2C_BASED_COMPONENT_USED=1</value>
+          <value>BOARD_USE_CODEC=1</value>
+        </option>
+        <option id="gnu.c.compiler.option.optimization.flags" type="string">
+          <value>-fno-common</value>
+        </option>
+        <option id="gnu.c.compiler.option.misc.other" type="string">
+          <value>-c  -ffunction-sections  -fdata-sections  -ffreestanding  -fno-builtin</value>
+        </option>
+        <option id="com.crt.advproject.link.fpu" type="enum">
+          <value>com.crt.advproject.link.fpu.fpv4.hard</value>
+        </option>
+        <option id="gnu.c.link.option.nostdlibs" type="boolean">
+          <value>true</value>
+        </option>
+        <option id="gnu.c.link.option.other" type="stringList">
+          <value>--defsym=Reset_Handler=ResetISR</value>
+        </option>
+        <option id="com.crt.advproject.link.memory.heapAndStack" type="string">
+          <value>&amp;Heap:Default;Default;0x400&amp;Stack:Default;Default;0x400</value>
+        </option>
+      </toolchainSetting>
+    </toolchainSettings>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch/armgcc" target_path="source" type="asm_include" toolchain="armgcc">
+      <files mask="lpm_asm.S"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch/armgcc" target_path="src" type="linker" toolchain="armgcc">
+      <files mask="MCIMX7U5xxxxx_cm4_lpm_ram.ld"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch/iar" target_path="source" type="asm_include" toolchain="iar">
+      <files mask="lpm_asm.s"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch/iar" target_path="src" type="linker" toolchain="iar">
+      <files mask="MCIMX7U5xxxxx_cm4_lpm_ram.icf"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch/srtm/channels" target_path="srtm/channels" type="c_include">
+      <files mask="srtm_rpmsg_endpoint.h"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch/srtm/channels" target_path="srtm/channels" type="src">
+      <files mask="srtm_rpmsg_endpoint.c"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch/srtm/services" target_path="srtm/services" type="c_include">
+      <files mask="srtm_audio_service.h"/>
+      <files mask="srtm_i2c_codec_adapter.h"/>
+      <files mask="srtm_io_service.h"/>
+      <files mask="srtm_keypad_service.h"/>
+      <files mask="srtm_lfcl_service.h"/>
+      <files mask="srtm_pf1550_adapter.h"/>
+      <files mask="srtm_pmic_service.h"/>
+      <files mask="srtm_rtc_service.h"/>
+      <files mask="srtm_sai_edma_adapter.h"/>
+      <files mask="srtm_sensor_service.h"/>
+      <files mask="srtm_snvs_lp_rtc_adapter.h"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch/srtm/services" target_path="srtm/services" type="src">
+      <files mask="srtm_audio_service.c"/>
+      <files mask="srtm_i2c_codec_adapter.c"/>
+      <files mask="srtm_io_service.c"/>
+      <files mask="srtm_keypad_service.c"/>
+      <files mask="srtm_lfcl_service.c"/>
+      <files mask="srtm_pf1550_adapter.c"/>
+      <files mask="srtm_pmic_service.c"/>
+      <files mask="srtm_rtc_service.c"/>
+      <files mask="srtm_sai_edma_adapter.c"/>
+      <files mask="srtm_sensor_service.c"/>
+      <files mask="srtm_snvs_lp_rtc_adapter.c"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch" target_path="board" type="c_include">
+      <files mask="board.h"/>
+      <files mask="clock_config.h"/>
+      <files mask="fsl_iomuxc.h"/>
+      <files mask="pin_mux.h"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch" target_path="board" type="src">
+      <files mask="board.c"/>
+      <files mask="clock_config.c"/>
+      <files mask="pin_mux.c"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch" target_path="doc" type="doc" toolchain="iar mdk mcuxpresso armgcc">
+      <files mask="readme.txt"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch" target_path="source" type="c_include">
+      <files mask="FreeRTOSConfig.h"/>
+      <files mask="app_srtm.h"/>
+      <files mask="lpm.h"/>
+      <files mask="power_mode_switch.h"/>
+      <files mask="rpmsg_config.h"/>
+    </source>
+    <source path="boards/evkmcimx7ulp/demo_apps/power_mode_switch" target_path="source" type="src">
+      <files mask="app_srtm.c"/>
+      <files mask="clock_scg.c"/>
+      <files mask="lpm.c"/>
+      <files mask="power_mode_switch.c"/>
+    </source>
+  </example>
+</ksdk:examples>
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/readme.txt b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/readme.txt
new file mode 100644
index 0000000..9c7eccb
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/readme.txt
@@ -0,0 +1,96 @@
+Overview
+========
+The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menu
+through the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeup
+source by following the debug console prompts. The purpose of this demo is to show how to switch between different power
+ modes, and how to configure a wakeup source and wakeup the MCU from low power modes.
+
+ Tips:
+ This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including:
+ - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary.
+ - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on.
+ - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy.
+ - Other low power consideration based on the actual application hardware.
+ - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. 
+
+
+Toolchain supported
+===================
+- IAR embedded Workbench  8.32.1
+- GCC ARM Embedded  7.3.1
+
+Hardware requirements
+=====================
+- Micro USB cable
+- MCIMX7ULP-EVK board
+- J-Link Debug Probe
+- 5V power supply
+- Personal Computer
+
+Board settings
+==============
+No special settings are required.
+
+#### Please note this application can support running with Linux BSP! And gcc debug target
+exceeds the RAM size so it's not available! ####
+
+Prepare the Demo
+================
+1.  Connect 5V power supply and J-Link Debug Probe to the board, switch SW1 to power on the board.
+2.  Connect a micro USB cable between the host PC and the J6 USB port on the target board.
+3.  Open a serial terminal with the following settings:
+    - 115200 baud rate
+    - 8 data bits
+    - No parity
+    - One stop bit
+    - No flow control
+4.  Generate image file with imgutil and write to QSPI flash with U-Boot. For details, please refer to Getting Started with SDK v.2.0 for i.MX 7ULP Derivatives (Doc No: SDK20IMX7ULPGSUG)
+5.  Press the reset button on your board to begin running the demo.
+
+Running the demo
+================
+When running the demo, the debug console shows the menu to command the MCU to the target power mode, or query and set other system power behavior. The power mode switch demo need to run with Linux accordingly, so please make sure the power mode crossings between Cortex-A7 and Cortex-M4 are valid.
+
+NOTE: Only input when the demo asks for input. Input entered at any other time might cause the debug console to overflow and receive the wrong input value.
+
+Remarkable configuration of the application (in power_mode_switch.c):
+"SYSTICK_LLWU_WAKEUP":
+  The demo leverages LPTMR0 as systick timer, and supports FreeRTOS tickless idle. In tickless idle mode, LPTMR0 takes LPO 1kHz clock as clock source and will overflow in 65 seconds. If setting SYSTICK_LLWU_WAKEUP to "true", it means systick can wake up system in LLS/VLLS so that OS event like task delay or semaphore timeout may wake up SoC in addition to the wakeup source selected in application menu. Even no OS event occurs, the system will be woken up from LLS/VLLS every 65 seconds also to avoid LPTMR0 overflow which leads to systick loss. If setting SYSTICK_LLWU_WAKEUP to "false", then systick(LPTMR0) cannot wakeup SoC in LLS/VLLS.
+"APP_ENABLE_GPIO_PAD_LOW_POWER":
+  This is an IO low power switch. If setting to "1", then the SoC IO leakage can be optimized with the limitation that only fixed voltage can be applied to the IO pads. Please read "GPIO pads operating range configuration" in Reference Manual SIM module carefully to avoid malfunction or even SoC pad damage.
+
+~~~~~~~~~~~~~~~~~~~~~
+Task 1 is working now
+
+MCU wakeup source 0x6...
+
+####################  Power Mode Switch Task ####################
+
+    Build Time: Feb 22 2018--15:36:23
+    Core Clock: 115200000Hz
+    Power mode: RUN
+
+Select the desired operation
+
+Press  A for enter: RUN      - Normal RUN mode
+Press  B for enter: WAIT     - Wait mode
+Press  C for enter: STOP     - Stop mode
+Press  D for enter: VLPR     - Very Low Power Run mode
+Press  E for enter: VLPW     - Very Low Power Wait mode
+Press  F for enter: VLPS     - Very Low Power Stop mode
+Press  G for enter: HSRUN    - High Speed RUN mode
+Press  H for enter: LLS      - Low Leakage Stop mode
+Press  I for enter: VLLS     - Very Low Leakage Stop mode
+Press  Q for query CA7 core power status.
+Press  W for wake up CA7 core in VLLS/VLPS.
+Press  T for reboot CA7 core.
+Press  U for shutdown CA7 core.
+Press  V for boot CA7 core.
+Press  R for read PF1550 Register.
+Press  S for set PF1550 Register.
+
+Waiting for power mode select..
+~~~~~~~~~~~~~~~~~~~~~
+Customization options
+=====================
+
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/rpmsg_config.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/rpmsg_config.h
new file mode 100644
index 0000000..6af35b4
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/rpmsg_config.h
@@ -0,0 +1,71 @@
+/*
+ * Copyright (c) 2014, Mentor Graphics Corporation
+ * Copyright (c) 2015 Xilinx, Inc.
+ * Copyright (c) 2016 Freescale Semiconductor, Inc.
+ * Copyright 2016 NXP
+ * All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef _RPMSG_CONFIG_H
+#define _RPMSG_CONFIG_H
+
+/*!
+ * @addtogroup config
+ * @{
+ * @file
+ */
+
+//! @name Configuration options
+//@{
+
+//! @def RL_MS_PER_INTERVAL
+//!
+//! Delay in milliseconds used in non-blocking API functions for polling.
+//! The default value is 1.
+#define RL_MS_PER_INTERVAL (1)
+
+//! @def RL_BUFFER_PAYLOAD_SIZE
+//!
+//! Size of the buffer payload, it must be equal to (240, 496, 1008, ...) 
+//! [2^n - 16].
+//! The default value is 495.
+#define RL_BUFFER_PAYLOAD_SIZE (496)
+
+//! @def RL_BUFFER_COUNT
+//!
+//! Number of the buffers, it must be power of two (2, 4, ...).
+//! The default value is 2.
+#define RL_BUFFER_COUNT (256)
+
+//! @def RL_API_HAS_ZEROCOPY
+//!
+//! Zero-copy API functions enabled/disabled.
+//! The default value is 1 (enabled).
+#define RL_API_HAS_ZEROCOPY (1)
+
+//! @def RL_USE_STATIC_API
+//!
+//! Static API functions (no dynamic allocation) enabled/disabled.
+//! The default value is 0 (static API disabled).
+#define RL_USE_STATIC_API (0)
+
+//! @def RL_CLEAR_USED_BUFFERS
+//!
+//! Clearing used buffers before returning back to the pool of free buffers 
+//! enabled/disabled.
+//! The default value is 0 (disabled).
+#define RL_CLEAR_USED_BUFFERS (0)
+
+//! @def RL_USE_MCMGR_IPC_ISR_HANDLER
+//!
+//! When enabled IPC interrupts are managed by the Multicore Manager (IPC 
+//! interrupts router), when disabled RPMsg-Lite manages IPC interrupts 
+//! by itself.
+//! The default value is 0 (no MCMGR IPC ISR handler used).
+#define RL_USE_MCMGR_IPC_ISR_HANDLER (0)
+
+//@}
+
+#endif /* _RPMSG_CONFIG_H */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/channels/srtm_rpmsg_endpoint.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/channels/srtm_rpmsg_endpoint.c
new file mode 100644
index 0000000..77154eb
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/channels/srtm_rpmsg_endpoint.c
@@ -0,0 +1,234 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include <assert.h>
+#include <string.h>
+
+#include "srtm_heap.h"
+#include "srtm_dispatcher.h"
+#include "srtm_dispatcher_struct.h"
+#include "srtm_peercore.h"
+#include "srtm_peercore_struct.h"
+#include "srtm_channel.h"
+#include "srtm_channel_struct.h"
+#include "srtm_rpmsg_endpoint.h"
+#include "rpmsg_ns.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+#ifndef SRTM_DEBUG_COMMUNICATION
+#define SRTM_DEBUG_COMMUNICATION (0)
+#endif
+
+typedef struct _srtm_rpmsg_endpoint
+{
+    struct _srtm_channel channel;
+    srtm_rpmsg_endpoint_config_t config;
+    struct rpmsg_lite_endpoint *rpmsgEndpoint;
+    srtm_rpmsg_endpoint_rx_cb_t rxCallback;
+    void *rxCallbackParam;
+    bool started;
+} *srtm_rpmsg_endpoint_t;
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static int SRTM_RPMsgEndpoint_RxHandler(void *payload, int payload_len, unsigned long src,
+                                        void *priv)
+{
+    srtm_rpmsg_endpoint_t handle = (srtm_rpmsg_endpoint_t)priv;
+
+    assert(handle);
+
+#if SRTM_DEBUG_COMMUNICATION
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_ERROR, "%s: RPMsg recv: \r\n\t", __func__);
+    for (uint32_t i = 0; i < payload_len; i++)
+    {
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_ERROR, "%x ", ((uint8_t *)payload)[i]);
+    }
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_ERROR, "\r\n");
+#endif
+
+    if (handle->config.peerAddr == RL_ADDR_ANY)
+    {
+        handle->config.peerAddr = src;
+    }
+
+    if (handle->started)
+    {
+        if (handle->rxCallback)
+        {
+            return handle->rxCallback(&handle->channel, payload, payload_len, src,
+                                      handle->rxCallbackParam);
+        }
+
+        assert(handle->channel.core);
+        assert(handle->channel.core->dispatcher);
+
+        SRTM_Dispatcher_PostRecvData(handle->channel.core->dispatcher, &handle->channel,
+                                     payload, payload_len);
+    }
+    else
+    {
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: Get data before channel start\r\n", __func__);
+    }
+
+    return RL_RELEASE;
+}
+
+static srtm_status_t SRTM_RPMsgEndpoint_Start(srtm_channel_t channel)
+{
+    srtm_rpmsg_endpoint_t handle = (srtm_rpmsg_endpoint_t)channel;
+    srtm_status_t status = SRTM_Status_Success;
+
+    assert(handle);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle->started = true;
+
+    return status;
+}
+
+static srtm_status_t SRTM_RPMsgEndpoint_Stop(srtm_channel_t channel)
+{
+    srtm_rpmsg_endpoint_t handle = (srtm_rpmsg_endpoint_t)channel;
+    srtm_status_t status = SRTM_Status_Success;
+
+    assert(handle);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle->started = false;
+
+    return status;
+}
+
+static srtm_status_t SRTM_RPMsgEndpoint_SendData(srtm_channel_t channel, void *data, uint32_t len)
+{
+    srtm_rpmsg_endpoint_t handle = (srtm_rpmsg_endpoint_t)channel;
+    srtm_status_t status = SRTM_Status_InvalidState;
+
+    assert(handle);
+    assert(handle->config.rpmsgHandle);
+    assert(handle->rpmsgEndpoint);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_DEBUG, "%s: len %d\r\n", __func__, len);
+
+    if (handle->started)
+    {
+#if SRTM_DEBUG_COMMUNICATION
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_ERROR, "%s: RPMsg send: \r\n\t", __func__);
+        for (uint32_t i = 0; i < len; i++)
+        {
+            SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_ERROR, "%x ", ((uint8_t *)data)[i]);
+        }
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_ERROR, "\r\n");
+#endif
+        if (rpmsg_lite_send(handle->config.rpmsgHandle, handle->rpmsgEndpoint, handle->config.peerAddr,
+                            (char *)data, len, RL_BLOCK) == RL_SUCCESS)
+        {
+            status = SRTM_Status_Success;
+        }
+        else
+        {
+            SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_ERROR, "%s: RPMsg send failed\r\n", __func__);
+            status = SRTM_Status_TransferFailed;
+        }
+    }
+    else
+    {
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: channel not started\r\n", __func__);
+    }
+
+    return status;
+}
+
+srtm_channel_t SRTM_RPMsgEndpoint_Create(srtm_rpmsg_endpoint_config_t *config)
+{
+    srtm_rpmsg_endpoint_t handle;
+
+    assert(config);
+    assert(config->rpmsgHandle);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle = (srtm_rpmsg_endpoint_t)SRTM_Heap_Malloc(sizeof(struct _srtm_rpmsg_endpoint));
+    assert(handle);
+
+    handle->started = false;
+    handle->rxCallback = NULL;
+    handle->rxCallbackParam = NULL;
+    handle->rpmsgEndpoint = rpmsg_lite_create_ept(config->rpmsgHandle, config->localAddr,
+                                                  SRTM_RPMsgEndpoint_RxHandler, handle);
+    assert(handle->rpmsgEndpoint);
+
+    memcpy(&handle->config, config, sizeof(struct _srtm_rpmsg_endpoint_config));
+    if (config->localAddr == RL_ADDR_ANY)
+    {
+        handle->config.localAddr = handle->rpmsgEndpoint->addr;
+    }
+
+    SRTM_List_Init(&handle->channel.node);
+    handle->channel.core = NULL;
+    handle->channel.destroy = SRTM_RPMsgEndpoint_Destroy;
+    handle->channel.start = SRTM_RPMsgEndpoint_Start;
+    handle->channel.stop = SRTM_RPMsgEndpoint_Stop;
+    handle->channel.sendData = SRTM_RPMsgEndpoint_SendData;
+
+    if (config->epName)
+    {
+        if (rpmsg_ns_announce(config->rpmsgHandle, handle->rpmsgEndpoint, (char *)config->epName,
+                              RL_NS_CREATE) != RL_SUCCESS)
+        {
+            assert(false);
+        }
+    }
+
+    return &handle->channel;
+}
+
+void SRTM_RPMsgEndpoint_Destroy(srtm_channel_t channel)
+{
+    srtm_rpmsg_endpoint_t handle = (srtm_rpmsg_endpoint_t)channel;
+
+    assert(channel);
+    assert(!channel->core); /* Channel must be removed from core before destroy */
+    assert(SRTM_List_IsEmpty(&channel->node)); /* Channel must not on any list */
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    rpmsg_lite_destroy_ept(handle->config.rpmsgHandle, handle->rpmsgEndpoint);
+
+    SRTM_Heap_Free(handle);
+}
+
+srtm_status_t SRTM_RPMsgEndpoint_OverrideRxHandler(srtm_channel_t channel,
+                                                   srtm_rpmsg_endpoint_rx_cb_t callback,
+                                                   void *param)
+{
+    srtm_rpmsg_endpoint_t handle = (srtm_rpmsg_endpoint_t)channel;
+
+    assert(handle);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle->rxCallback = callback;
+    handle->rxCallbackParam = param;
+
+    return SRTM_Status_Success;
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/channels/srtm_rpmsg_endpoint.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/channels/srtm_rpmsg_endpoint.h
new file mode 100644
index 0000000..79a2cf6
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/channels/srtm_rpmsg_endpoint.h
@@ -0,0 +1,84 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef __SRTM_RPMSG_ENDPOINT_H__
+#define __SRTM_RPMSG_ENDPOINT_H__
+
+#include "srtm_channel.h"
+#include "rpmsg_lite.h"
+
+/*!
+ * @addtogroup srtm_channel
+ * @{
+ */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/**
+* @brief SRTM RPMsg endpoint channel configuration fields
+*/
+typedef struct _srtm_rpmsg_endpoint_config
+{
+    struct rpmsg_lite_instance *rpmsgHandle; /*!< RPMsg handle initialized by app */
+    unsigned long localAddr; /*!< RPMsg local endpoint address */
+    unsigned long peerAddr; /*!< RPMsg peer endpoint address */
+    const char *epName; /*!< RPMsg endpoint name for name service announcement */
+} srtm_rpmsg_endpoint_config_t;
+
+/**
+* @brief SRTM RPMsg endpoint channel RX callback function type.
+*/
+typedef int (*srtm_rpmsg_endpoint_rx_cb_t)(srtm_channel_t channel, void *payload, int payloadLen,
+                                           unsigned long src, void *param);
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*!
+ * @brief Create RPMsg endpoint channel.
+ *
+ * @param config SRTM RPMsg endpoint configuration.
+ * @return SRTM channel handle on success and NULL on failure.
+ */
+srtm_channel_t SRTM_RPMsgEndpoint_Create(srtm_rpmsg_endpoint_config_t *config);
+
+/*!
+ * @brief Destroy RPMsg endpoint channel.
+ *
+ * @param channel SRTM channel to destroy.
+ */
+void SRTM_RPMsgEndpoint_Destroy(srtm_channel_t channel);
+
+/*!
+ * @brief Override RPMsg endpoint channel RX handler.
+ *
+ * By default, the RX messages are posted to dispatcher for SRTM
+ * request/response/notification handling. This function is to change the default
+ * behavior for functionality extension.
+ *
+ * @param channel SRTM channel to override RX handler.
+ * @param callback User function to handle RX message.
+ * @param param User parameter to be used in callback.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_RPMsgEndpoint_OverrideRxHandler(srtm_channel_t channel,
+                                                   srtm_rpmsg_endpoint_rx_cb_t callback,
+                                                   void *param);
+
+#ifdef __cplusplus
+}
+#endif
+
+/*! @} */
+
+#endif /* __SRTM_RPMSG_ENDPOINT_H__ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_bd70528_adapter.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_bd70528_adapter.c
new file mode 100644
index 0000000..f0487d1
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_bd70528_adapter.c
@@ -0,0 +1,202 @@
+/*
+ * Copyright (c) 2019, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include "srtm_bd70528_adapter.h"
+#include "srtm_heap.h"
+
+#include "fsl_common.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/* BD70528 adapter */
+typedef struct _srtm_bd70528_adapter
+{
+    struct _srtm_pmic_adapter adapter;
+    bd70528_handle_t *driver;
+} *srtm_bd70528_adapter_t;
+
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+static const bd70528_module_t BD70528ModuleMap[] =
+{
+    kBD70528_ModuleBuck1,
+    kBD70528_ModuleBuck2,
+    kBD70528_ModuleBuck3,
+    kBD70528_ModuleLdo1,
+    kBD70528_ModuleLdo2,
+    kBD70528_ModuleLdo3,
+};
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static srtm_status_t SRTM_Bd70528Adapter_Enable(srtm_pmic_adapter_t adapter, uint8_t regulator)
+{
+    srtm_bd70528_adapter_t handle = (srtm_bd70528_adapter_t)adapter;
+
+    assert(handle->driver);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d\r\n", __func__, regulator);
+
+    if (regulator >= ARRAY_SIZE(BD70528ModuleMap))
+    {
+        return SRTM_Status_InvalidParameter;
+    }
+
+    BD70528_EnableRegulator(handle->driver, BD70528ModuleMap[regulator], kBD70528_OperatingStatusOn,
+                           true);
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t SRTM_Bd70528Adapter_Disable(srtm_pmic_adapter_t adapter, uint8_t regulator)
+{
+    srtm_bd70528_adapter_t handle = (srtm_bd70528_adapter_t)adapter;
+
+    assert(handle->driver);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d\r\n", __func__, regulator);
+
+    if (regulator >= ARRAY_SIZE(BD70528ModuleMap))
+    {
+        return SRTM_Status_InvalidParameter;
+    }
+
+    BD70528_EnableRegulator(handle->driver, BD70528ModuleMap[regulator], kBD70528_OperatingStatusOn,
+                           false);
+
+    return SRTM_Status_Success;
+}
+
+static bool SRTM_Bd70528Adapter_IsEnabled(srtm_pmic_adapter_t adapter, uint8_t regulator)
+{
+    srtm_bd70528_adapter_t handle = (srtm_bd70528_adapter_t)adapter;
+
+    assert(handle->driver);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d\r\n", __func__, regulator);
+
+    if (regulator >= ARRAY_SIZE(BD70528ModuleMap))
+    {
+        return false;
+    }
+
+    return BD70528_IsRegulatorEnabled(handle->driver, BD70528ModuleMap[regulator],
+                                     kBD70528_OperatingStatusOn);
+}
+
+static srtm_status_t SRTM_Bd70528Adapter_SetVoltage(srtm_pmic_adapter_t adapter, uint8_t regulator,
+                                                   uint32_t volt)
+{
+    srtm_bd70528_adapter_t handle = (srtm_bd70528_adapter_t)adapter;
+
+    assert(handle->driver);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d %d\r\n", __func__, regulator, volt);
+
+    if (regulator >= ARRAY_SIZE(BD70528ModuleMap))
+    {
+        return SRTM_Status_InvalidParameter;
+    }
+
+    BD70528_SetRegulatorOutputVoltage(handle->driver, BD70528ModuleMap[regulator],
+                                     kBD70528_OperatingStatusOn, volt);
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t SRTM_Bd70528Adapter_GetVoltage(srtm_pmic_adapter_t adapter, uint8_t regulator,
+                                                   uint32_t *pVolt)
+{
+    srtm_bd70528_adapter_t handle = (srtm_bd70528_adapter_t)adapter;
+
+    assert(handle->driver);
+    assert(pVolt);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d\r\n", __func__, regulator);
+
+    if (regulator >= ARRAY_SIZE(BD70528ModuleMap))
+    {
+        return SRTM_Status_InvalidParameter;
+    }
+
+    *pVolt = BD70528_GetRegulatorOutputVoltage(handle->driver, BD70528ModuleMap[regulator],
+                                              kBD70528_OperatingStatusOn);
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t SRTM_Bd70528Adapter_SetRegister(srtm_pmic_adapter_t adapter, uint8_t reg,
+                                                    uint32_t value)
+{
+    srtm_bd70528_adapter_t handle = (srtm_bd70528_adapter_t)adapter;
+
+    assert(handle->driver);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d %d\r\n", __func__, reg, value);
+
+    return BD70528_WriteReg(handle->driver, reg, (uint8_t)value) ? SRTM_Status_Success :
+                                                                       SRTM_Status_Error;
+}
+
+static srtm_status_t SRTM_Bd70528Adapter_GetRegister(srtm_pmic_adapter_t adapter, uint8_t reg,
+                                                    uint32_t *pValue)
+{
+    srtm_bd70528_adapter_t handle = (srtm_bd70528_adapter_t)adapter;
+
+    assert(handle->driver);
+    assert(pValue);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d\r\n", __func__, reg);
+
+    return BD70528_ReadReg(handle->driver, reg, (uint8_t *)pValue) ? SRTM_Status_Success :
+                                                                             SRTM_Status_Error;
+}
+
+srtm_pmic_adapter_t SRTM_Bd70528Adapter_Create(bd70528_handle_t *driver)
+{
+    srtm_bd70528_adapter_t handle;
+
+    assert(driver);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle = (srtm_bd70528_adapter_t)SRTM_Heap_Malloc(sizeof(struct _srtm_bd70528_adapter));
+    assert(handle);
+
+    handle->driver = driver;
+
+    handle->adapter.enable = SRTM_Bd70528Adapter_Enable;
+    handle->adapter.disable = SRTM_Bd70528Adapter_Disable;
+    handle->adapter.isEnabled = SRTM_Bd70528Adapter_IsEnabled;
+    handle->adapter.setVoltage = SRTM_Bd70528Adapter_SetVoltage;
+    handle->adapter.getVoltage = SRTM_Bd70528Adapter_GetVoltage;
+    handle->adapter.setRegister = SRTM_Bd70528Adapter_SetRegister;
+    handle->adapter.getRegister = SRTM_Bd70528Adapter_GetRegister;
+
+    return &handle->adapter;
+}
+
+void SRTM_Bd70528Adapter_Destroy(srtm_pmic_adapter_t adapter)
+{
+    srtm_bd70528_adapter_t handle = (srtm_bd70528_adapter_t)adapter;
+
+    assert(adapter);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    SRTM_Heap_Free(handle);
+}
+
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_bd70528_adapter.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_bd70528_adapter.h
new file mode 100644
index 0000000..570afba
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_bd70528_adapter.h
@@ -0,0 +1,52 @@
+/*
+ * Copyright (c) 2019, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef __SRTM_BD70528_ADAPTER_H__
+#define __SRTM_BD70528_ADAPTER_H__
+
+#include "srtm_pmic_service.h"
+#include "bd70528.h"
+
+/*!
+ * @addtogroup srtm_service
+ * @{
+ */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*!
+ * @brief Create BD70528 adapter.
+ *
+ * @param handle BD70528 driver handle.
+ * @return SRTM PMIC adapter on success or NULL on failure.
+ */
+srtm_pmic_adapter_t SRTM_Bd70528Adapter_Create(bd70528_handle_t *handle);
+
+/*!
+ * @brief Destroy BD70528 adapter.
+ *
+ * @param adapter BD70528 adapter to destroy.
+ */
+void SRTM_Bd70528Adapter_Destroy(srtm_pmic_adapter_t adapter);
+
+#ifdef __cplusplus
+}
+#endif
+
+/*! @} */
+
+#endif /* __SRTM_BD70528_ADAPTER_H__ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_io_service.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_io_service.c
new file mode 100644
index 0000000..9670a3e
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_io_service.c
@@ -0,0 +1,406 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include <string.h>
+
+#include "srtm_heap.h"
+#include "srtm_dispatcher.h"
+#include "srtm_peercore.h"
+#include "srtm_service.h"
+#include "srtm_service_struct.h"
+#include "srtm_channel.h"
+#include "srtm_channel_struct.h"
+#include "srtm_io_service.h"
+#include "srtm_message.h"
+#include "srtm_message_struct.h"
+
+#include "fsl_common.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/* Protocol definition */
+#define SRTM_IO_CATEGORY (0x5U)
+
+#define SRTM_IO_VERSION (0x0100U)
+
+#define SRTM_IO_RETURN_CODE_SUCEESS (0x0U)
+#define SRTM_IO_RETURN_CODE_FAIL (0x1U)
+#define SRTM_IO_RETURN_CODE_UNSUPPORTED (0x2U)
+
+#define SRTM_IO_CMD_CONF_INPUT_EVENT (0x00U)
+#define SRTM_IO_CMD_SET_OUTPUT (0x01U)
+#define SRTM_IO_CMD_GET_INPUT (0x02U)
+
+#define SRTM_IO_NTF_INPUT_EVENT (0x00U)
+
+/* IO pin list node */
+typedef struct _srtm_io_pin
+{
+    srtm_list_t node;
+    uint16_t ioId;
+    srtm_channel_t channel;
+    srtm_notification_t notif; /* SRTM notification message for input event */
+    srtm_io_service_set_output_t setOutput;
+    srtm_io_service_get_input_t getInput;
+    srtm_io_service_conf_input_t confIEvent;
+    void *param;
+} *srtm_io_pin_t;
+
+/* Service handle */
+typedef struct _srtm_io_service
+{
+    struct _srtm_service service;
+    srtm_list_t pins; /*!< SRTM IO pins list */
+} *srtm_io_service_t;
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static void SRTM_IoService_FreePin(srtm_io_pin_t pin)
+{
+    SRTM_Notification_Destroy(pin->notif);
+    SRTM_Heap_Free(pin);
+}
+
+static void SRTM_IoService_RecycleMessage(srtm_message_t msg, void *param)
+{
+    uint32_t primask;
+    srtm_io_pin_t pin = (srtm_io_pin_t)param;
+
+    assert(pin);
+    assert(pin->notif == NULL);
+
+    primask = DisableGlobalIRQ();
+    /* Return msg to pin */
+    pin->notif = msg;
+    EnableGlobalIRQ(primask);
+}
+
+static srtm_io_pin_t SRTM_IoService_FindPin(srtm_io_service_t handle, uint16_t ioId, bool remove, bool notify)
+{
+    srtm_io_pin_t pin = NULL;
+    srtm_list_t *list;
+    srtm_notification_t notif = NULL;
+    uint32_t primask;
+
+    primask = DisableGlobalIRQ();
+    for (list = handle->pins.next; list != &handle->pins; list = list->next)
+    {
+        pin = SRTM_LIST_OBJ(srtm_io_pin_t, node, list);
+        if (pin->ioId == ioId)
+        {
+            if (remove)
+            {
+                SRTM_List_Remove(list);
+            }
+            if (notify)
+            {
+                notif = pin->notif;
+                pin->notif = NULL;
+            }
+            break;
+        }
+    }
+    EnableGlobalIRQ(primask);
+
+    if (notify && notif && pin->channel)
+    {
+        /* If notification message exists, just deliver it. Otherwise it's on the way, no need
+           to deliver again. */
+        notif->channel = pin->channel;
+        SRTM_Dispatcher_DeliverNotification(handle->service.dispatcher, notif);
+    }
+
+    return list == &handle->pins ? NULL : pin;
+}
+
+/* Both request and notify are called from SRTM dispatcher context */
+static srtm_status_t SRTM_IoService_Request(srtm_service_t service, srtm_request_t request)
+{
+    srtm_status_t status;
+    srtm_io_service_t handle = (srtm_io_service_t)service;
+    srtm_io_pin_t pin;
+    srtm_channel_t channel;
+    uint8_t command, retCode;
+    uint8_t *payload;
+    srtm_response_t response;
+    uint16_t ioId = 0U;
+    uint32_t len;
+    srtm_io_value_t value = SRTM_IoValueLow;
+
+    assert(service->dispatcher);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    channel = SRTM_CommMessage_GetChannel(request);
+    assert(channel);
+    command = SRTM_CommMessage_GetCommand(request);
+    payload = SRTM_CommMessage_GetPayload(request);
+    len = SRTM_CommMessage_GetPayloadLen(request);
+
+    status = SRTM_Service_CheckVersion(service, request, SRTM_IO_VERSION);
+    if (status != SRTM_Status_Success || !payload || len < 2)
+    {
+        /* Either version mismatch or empty payload is not supported */
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: format error, len %d!\r\n", __func__, len);
+        retCode = SRTM_IO_RETURN_CODE_UNSUPPORTED;
+    }
+    else
+    {
+        ioId = (((uint16_t)(*(payload + 1))) << 8) | *payload;
+        pin = SRTM_IoService_FindPin(handle, ioId, false, false);
+        if (!pin)
+        {
+            SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: Pin 0x%x not registered!\r\n", __func__, ioId);
+            retCode = SRTM_IO_RETURN_CODE_FAIL;
+        }
+        else
+        {
+            /* Record pin's channel for further input event */
+            pin->channel = channel;
+            switch (command)
+            {
+                case SRTM_IO_CMD_CONF_INPUT_EVENT:
+                    if (len >= 4 && pin->confIEvent)
+                    {
+                        status = pin->confIEvent(service, channel->core, ioId, (srtm_io_event_t)(*(payload + 2)),
+                                                 (bool)(*(payload + 3)));
+                        retCode = status == SRTM_Status_Success ? SRTM_IO_RETURN_CODE_SUCEESS
+                                                                : SRTM_IO_RETURN_CODE_FAIL;
+                    }
+                    else
+                    {
+                        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN,
+                                           "%s: Command ConfInputEvent not allowed or len %d error!\r\n",
+                                           __func__, len);
+                        retCode = SRTM_IO_RETURN_CODE_FAIL;
+                    }
+                    break;
+                case SRTM_IO_CMD_SET_OUTPUT:
+                    if (len >= 3 && pin->setOutput)
+                    {
+                        status = pin->setOutput(service, channel->core, ioId, (srtm_io_value_t)(*(payload + 2)));
+                        retCode = status == SRTM_Status_Success ? SRTM_IO_RETURN_CODE_SUCEESS
+                                                                : SRTM_IO_RETURN_CODE_FAIL;
+                    }
+                    else
+                    {
+                        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN,
+                                           "%s: Command SetOutput not allowed or len %d error!\r\n", __func__, len);
+                        retCode = SRTM_IO_RETURN_CODE_FAIL;
+                    }
+                    break;
+                case SRTM_IO_CMD_GET_INPUT:
+                    if (pin->getInput)
+                    {
+                        status = pin->getInput(service, channel->core, ioId, &value);
+                        retCode = status == SRTM_Status_Success ? SRTM_IO_RETURN_CODE_SUCEESS
+                                                                : SRTM_IO_RETURN_CODE_FAIL;
+                    }
+                    else
+                    {
+                        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: Command %d function not registered!\r\n",
+                                           __func__, SRTM_IO_CMD_GET_INPUT);
+                        retCode = SRTM_IO_RETURN_CODE_FAIL;
+                    }
+                    break;
+                default:
+                    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported!\r\n", __func__, command);
+                    retCode = SRTM_IO_RETURN_CODE_UNSUPPORTED;
+                    break;
+            }
+        }
+    }
+
+    response = SRTM_Response_Create(channel, SRTM_IO_CATEGORY, SRTM_IO_VERSION, command, 4U);
+    if (!response)
+    {
+        return SRTM_Status_OutOfMemory;
+    }
+
+    payload = SRTM_CommMessage_GetPayload(response);
+    *payload = ioId;
+    *(payload + 1) = ioId >> 8U;
+    *(payload + 2) = retCode;
+    *(payload + 3) = (uint8_t)value; /* Only used in SRTM_IO_CMD_GET_INPUT */
+
+    /* Now the response is ready */
+    return SRTM_Dispatcher_DeliverResponse(service->dispatcher, response);
+}
+
+static srtm_status_t SRTM_IoService_Notify(srtm_service_t service, srtm_notification_t notif)
+{
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported!\r\n", __func__,
+                       SRTM_CommMessage_GetCommand(notif));
+
+    return SRTM_Status_ServiceNotFound;
+}
+
+srtm_service_t SRTM_IoService_Create(void)
+{
+    srtm_io_service_t handle;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle = (srtm_io_service_t)SRTM_Heap_Malloc(sizeof(struct _srtm_io_service));
+    assert(handle);
+
+    SRTM_List_Init(&handle->pins);
+
+    SRTM_List_Init(&handle->service.node);
+    handle->service.dispatcher = NULL;
+    handle->service.category = SRTM_IO_CATEGORY;
+    handle->service.destroy = SRTM_IoService_Destroy;
+    handle->service.request = SRTM_IoService_Request;
+    handle->service.notify = SRTM_IoService_Notify;
+
+    return &handle->service;
+}
+
+void SRTM_IoService_Destroy(srtm_service_t service)
+{
+    srtm_io_service_t handle = (srtm_io_service_t)service;
+    srtm_list_t *list;
+    srtm_io_pin_t pin;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    assert(service);
+    /* Service must be unregistered from dispatcher before destroy */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    while(!SRTM_List_IsEmpty(&handle->pins))
+    {
+        list = handle->pins.next;
+        SRTM_List_Remove(list);
+        pin = SRTM_LIST_OBJ(srtm_io_pin_t, node, list);
+        SRTM_IoService_FreePin(pin);
+    }
+
+    SRTM_Heap_Free(handle);
+}
+
+void SRTM_IoService_Reset(srtm_service_t service, srtm_peercore_t core)
+{
+    srtm_io_service_t handle = (srtm_io_service_t)service;
+    srtm_list_t *list;
+    srtm_io_pin_t pin;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    assert(service);
+
+    /* Currently assume just one peer core, need to update all pins. */
+    for (list = handle->pins.next; list != &handle->pins; list = list->next)
+    {
+        pin = SRTM_LIST_OBJ(srtm_io_pin_t, node, list);
+        pin->channel = NULL;
+    }
+}
+
+srtm_status_t SRTM_IoService_RegisterPin(srtm_service_t service, uint16_t ioId, srtm_io_service_set_output_t setOutput,
+                                         srtm_io_service_get_input_t getInput, srtm_io_service_conf_input_t confIEvent,
+                                         void *param)
+{
+    srtm_io_service_t handle = (srtm_io_service_t)service;
+    srtm_io_pin_t pin;
+    uint8_t *payload;
+    uint32_t primask;
+
+    assert(service);
+    /* Pin must be registered before service registration. */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    pin = SRTM_IoService_FindPin(handle, ioId, false, false);
+    if (pin)
+    {
+        /* ioId already registered */
+        return SRTM_Status_InvalidParameter;
+    }
+
+    pin = (srtm_io_pin_t)SRTM_Heap_Malloc(sizeof(struct _srtm_io_pin));
+    if (pin == NULL)
+    {
+        return SRTM_Status_OutOfMemory;
+    }
+
+    pin->ioId = ioId;
+    pin->setOutput = setOutput;
+    pin->getInput = getInput;
+    pin->confIEvent = confIEvent;
+    pin->param = param;
+    pin->notif = SRTM_Notification_Create(NULL, SRTM_IO_CATEGORY, SRTM_IO_VERSION, SRTM_IO_NTF_INPUT_EVENT, 2U);
+    assert(pin->notif);
+    SRTM_Message_SetFreeFunc(pin->notif, SRTM_IoService_RecycleMessage, pin);
+    payload = (uint8_t *)SRTM_CommMessage_GetPayload(pin->notif);
+    /* Little endian IO pin ID */
+    *payload = ioId;
+    *(payload+1) = ioId >> 8U;
+
+    primask = DisableGlobalIRQ();
+    SRTM_List_AddTail(&handle->pins, &pin->node);
+    EnableGlobalIRQ(primask);
+
+    return SRTM_Status_Success;
+}
+
+srtm_status_t SRTM_IoService_UnregisterPin(srtm_service_t service, uint16_t ioId)
+{
+    srtm_io_service_t handle = (srtm_io_service_t)service;
+    srtm_io_pin_t pin;
+
+    assert(service);
+    /* Pin must be unregistered when service is not running. */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    pin = SRTM_IoService_FindPin(handle, ioId, true, false);
+    if (pin)
+    {
+        SRTM_IoService_FreePin(pin);
+    }
+    else
+    {
+        /* Not found */
+        return SRTM_Status_ListRemoveFailed;
+    }
+
+    return SRTM_Status_Success;
+}
+
+/* Called in ISR */
+srtm_status_t SRTM_IoService_NotifyInputEvent(srtm_service_t service, uint16_t ioId)
+{
+    srtm_io_service_t handle = (srtm_io_service_t)service;
+    srtm_io_pin_t pin;
+
+    assert(service);
+    /* Service must be running in dispatcher when notifying input event */
+    assert(!SRTM_List_IsEmpty(&service->node));
+
+    pin = SRTM_IoService_FindPin(handle, ioId, false, true);
+    if (!pin)
+    {
+        /* Pin not registered */
+        return SRTM_Status_InvalidParameter;
+    }
+
+    return SRTM_Status_Success;
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_io_service.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_io_service.h
new file mode 100644
index 0000000..0e2e30d
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_io_service.h
@@ -0,0 +1,140 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef __SRTM_IO_SERVICE_H__
+#define __SRTM_IO_SERVICE_H__
+
+#include "srtm_service.h"
+
+/*!
+ * @addtogroup srtm_service
+ * @{
+ */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/** @brief Switch to disable IO service debugging messages. */
+#ifndef SRTM_IO_SERVICE_DEBUG_OFF
+#define SRTM_IO_SERVICE_DEBUG_OFF (0)
+#endif
+
+#if SRTM_IO_SERVICE_DEBUG_OFF
+#undef SRTM_DEBUG_VERBOSE_LEVEL
+#define SRTM_DEBUG_VERBOSE_LEVEL SRTM_DEBUG_VERBOSE_NONE
+#endif
+
+/*! @brief SRTM IO service output value */
+typedef enum _srtm_io_value
+{
+    SRTM_IoValueLow = 0U,
+    SRTM_IoValueHigh,
+} srtm_io_value_t;
+
+/*! @brief SRTM IO service input event */
+typedef enum _srtm_io_event
+{
+    SRTM_IoEventNone = 0U, /* Ignore the event */
+    SRTM_IoEventRisingEdge,
+    SRTM_IoEventFallingEdge,
+    SRTM_IoEventEitherEdge,
+    SRTM_IoEventLowLevel,
+    SRTM_IoEventHighLevel,
+} srtm_io_event_t;
+
+/**
+* @brief SRTM IO service set output value function type.
+*/
+typedef srtm_status_t (*srtm_io_service_set_output_t)(srtm_service_t service, srtm_peercore_t core,
+                                                      uint16_t ioId, srtm_io_value_t ioValue);
+
+/**
+* @brief SRTM IO service get input value function type.
+*/
+typedef srtm_status_t (*srtm_io_service_get_input_t)(srtm_service_t service, srtm_peercore_t core,
+                                                     uint16_t ioId, srtm_io_value_t *pIoValue);
+
+
+/**
+* @brief SRTM IO service configure input event function type.
+*/
+typedef srtm_status_t (*srtm_io_service_conf_input_t)(srtm_service_t service, srtm_peercore_t core,
+                                                      uint16_t ioId, srtm_io_event_t event, bool wakeup);
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*!
+ * @brief Create IO service.
+ *
+ * @return SRTM service handle on success and NULL on failure.
+ */
+srtm_service_t SRTM_IoService_Create(void);
+
+/*!
+ * @brief Destroy IO service.
+ *
+ * @param service SRTM service to destroy.
+ */
+void SRTM_IoService_Destroy(srtm_service_t service);
+
+/*!
+ * @brief Reset IO service.
+ *  This is used to stop all IO operations and return to initial state for corresponding core.
+ *  Registered pins are kept unchanged.
+ *
+ * @param service SRTM service to reset.
+ * @param core Identify which core is to be reset
+ */
+void SRTM_IoService_Reset(srtm_service_t service, srtm_peercore_t core);
+
+/*!
+ * @brief Register IO service pin. Only registered pin will be serviced.
+ *
+ * @param service SRTM IO service handle.
+ * @param ioId IO pin identification.
+ * @param setOutput IO pin set output value callback.
+ * @param getInput IO pin get input value callback.
+ * @param confIEvent IO pin configure input event callback.
+ * @param param user callback parameter.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_IoService_RegisterPin(srtm_service_t service, uint16_t ioId, srtm_io_service_set_output_t setOutput,
+                                         srtm_io_service_get_input_t getInput, srtm_io_service_conf_input_t confIEvent,
+                                         void *param);
+
+/*!
+ * @brief Unregister IO service pin. The operation cannot work when service is running.
+ *
+ * @param service SRTM IO service handle.
+ * @param ioId IO pin identification.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_IoService_UnregisterPin(srtm_service_t service, uint16_t ioId);
+
+/*!
+ * @brief Notify Input event to peer core. This function must be called by application after peer core configured
+ *  input event.
+ *
+ * @param service SRTM IO service.
+ * @param ioId IO pin identification.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_IoService_NotifyInputEvent(srtm_service_t service, uint16_t ioId);
+
+#ifdef __cplusplus
+}
+#endif
+
+/*! @} */
+
+#endif /* __SRTM_IO_SERVICE_H__ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_keypad_service.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_keypad_service.c
new file mode 100644
index 0000000..be19136
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_keypad_service.c
@@ -0,0 +1,363 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include <string.h>
+
+#include "srtm_heap.h"
+#include "srtm_dispatcher.h"
+#include "srtm_peercore.h"
+#include "srtm_service.h"
+#include "srtm_service_struct.h"
+#include "srtm_channel.h"
+#include "srtm_channel_struct.h"
+#include "srtm_keypad_service.h"
+#include "srtm_message.h"
+#include "srtm_message_struct.h"
+
+#include "fsl_common.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/* Protocol definition */
+#define SRTM_KEYPAD_CATEGORY (0x4U)
+
+#define SRTM_KEYPAD_VERSION (0x0100U)
+
+#define SRTM_KEYPAD_RETURN_CODE_SUCEESS (0x0U)
+#define SRTM_KEYPAD_RETURN_CODE_FAIL (0x1U)
+#define SRTM_KEYPAD_RETURN_CODE_UNSUPPORTED (0x2U)
+
+#define SRTM_KEYPAD_CMD_CONF_EVENT (0x00U)
+
+#define SRTM_KEYPAD_NTF_KEYPAD_EVENT (0x00U)
+
+/* keypad key list node */
+typedef struct _srtm_keypad_key
+{
+    srtm_list_t node;
+    uint8_t keyIdx;
+    srtm_channel_t channel;
+    srtm_notification_t notif; /* SRTM notification message for keypad event */
+    srtm_keypad_service_conf_t confKEvent;
+    void *param;
+} *srtm_keypad_key_t;
+
+/* Service handle */
+typedef struct _srtm_keypad_service
+{
+    struct _srtm_service service;
+    srtm_list_t keys; /*!< SRTM keypad keys list */
+} *srtm_keypad_service_t;
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static void SRTM_KeypadService_FreeKey(srtm_keypad_key_t key)
+{
+    SRTM_Notification_Destroy(key->notif);
+    SRTM_Heap_Free(key);
+}
+
+static void SRTM_KeypadService_RecycleMessage(srtm_message_t msg, void *param)
+{
+    uint32_t primask;
+    srtm_keypad_key_t key = (srtm_keypad_key_t)param;
+
+    assert(key);
+    assert(key->notif == NULL);
+
+    primask = DisableGlobalIRQ();
+    /* Return msg to key */
+    key->notif = msg;
+    EnableGlobalIRQ(primask);
+}
+
+static srtm_keypad_key_t SRTM_KeypadService_FindKey(srtm_keypad_service_t handle, uint8_t keyIdx, bool remove,
+                                                    bool notify, srtm_keypad_value_t value)
+{
+    srtm_keypad_key_t key = NULL;
+    srtm_list_t *list;
+    srtm_notification_t notif = NULL;
+    uint32_t primask;
+    uint8_t *payload;
+
+    primask = DisableGlobalIRQ();
+    for (list = handle->keys.next; list != &handle->keys; list = list->next)
+    {
+        key = SRTM_LIST_OBJ(srtm_keypad_key_t, node, list);
+        if (key->keyIdx == keyIdx)
+        {
+            if (remove)
+            {
+                SRTM_List_Remove(list);
+            }
+            if (notify)
+            {
+                notif = key->notif;
+                key->notif = NULL;
+            }
+            break;
+        }
+    }
+    EnableGlobalIRQ(primask);
+
+    if (notify && notif && key->channel)
+    {
+        /* If notification message exists, just deliver it. Otherwise it's on the way, no need
+           to deliver again. */
+        notif->channel = key->channel;
+        payload = SRTM_CommMessage_GetPayload(notif);
+        *(payload + 1) = (uint8_t)value;
+        SRTM_Dispatcher_DeliverNotification(handle->service.dispatcher, notif);
+    }
+
+    return list == &handle->keys ? NULL : key;
+}
+
+/* Both request and notify are called from SRTM dispatcher context */
+static srtm_status_t SRTM_KeypadService_Request(srtm_service_t service, srtm_request_t request)
+{
+    srtm_status_t status;
+    srtm_keypad_service_t handle = (srtm_keypad_service_t)service;
+    srtm_keypad_key_t key;
+    srtm_channel_t channel;
+    uint8_t command, retCode;
+    uint8_t *payload;
+    srtm_response_t response;
+    uint8_t keyIdx = 0U;
+    uint32_t len;
+
+    assert(service->dispatcher);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    channel = SRTM_CommMessage_GetChannel(request);
+    assert(channel);
+    command = SRTM_CommMessage_GetCommand(request);
+    payload = SRTM_CommMessage_GetPayload(request);
+    len = SRTM_CommMessage_GetPayloadLen(request);
+
+    status = SRTM_Service_CheckVersion(service, request, SRTM_KEYPAD_VERSION);
+    if (status != SRTM_Status_Success || !payload || len < 3)
+    {
+        /* Either version mismatch or empty payload is not supported */
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: format error, len %d!\r\n", __func__, len);
+        retCode = SRTM_KEYPAD_RETURN_CODE_UNSUPPORTED;
+    }
+    else
+    {
+        keyIdx = *payload;
+        key = SRTM_KeypadService_FindKey(handle, keyIdx, false, false, SRTM_KeypadValueReleased);
+        if (!key)
+        {
+            SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: Key 0x%x not registered!\r\n", __func__, keyIdx);
+            retCode = SRTM_KEYPAD_RETURN_CODE_FAIL;
+        }
+        else
+        {
+            /* Record key's channel for further event notification */
+            key->channel = channel;
+            switch (command)
+            {
+                case SRTM_KEYPAD_CMD_CONF_EVENT:
+                    assert(key->confKEvent);
+                    status = key->confKEvent(service, channel->core, keyIdx, (srtm_keypad_event_t)(*(payload + 1)),
+                                             (bool)(*(payload + 2)));
+                    retCode = status == SRTM_Status_Success ? SRTM_KEYPAD_RETURN_CODE_SUCEESS
+                                                            : SRTM_KEYPAD_RETURN_CODE_FAIL;
+                    break;
+                default:
+                    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported!\r\n", __func__, command);
+                    retCode = SRTM_KEYPAD_RETURN_CODE_UNSUPPORTED;
+                    break;
+            }
+        }
+    }
+
+    response = SRTM_Response_Create(channel, SRTM_KEYPAD_CATEGORY, SRTM_KEYPAD_VERSION, command, 2U);
+    if (!response)
+    {
+        return SRTM_Status_OutOfMemory;
+    }
+
+    payload = SRTM_CommMessage_GetPayload(response);
+    *payload = keyIdx;
+    *(payload + 1) = retCode;
+
+    /* Now the response is ready */
+    return SRTM_Dispatcher_DeliverResponse(service->dispatcher, response);
+}
+
+static srtm_status_t SRTM_KeypadService_Notify(srtm_service_t service, srtm_notification_t notif)
+{
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported!\r\n", __func__,
+                       SRTM_CommMessage_GetCommand(notif));
+
+    return SRTM_Status_ServiceNotFound;
+}
+
+srtm_service_t SRTM_KeypadService_Create(void)
+{
+    srtm_keypad_service_t handle;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle = (srtm_keypad_service_t)SRTM_Heap_Malloc(sizeof(struct _srtm_keypad_service));
+    assert(handle);
+
+    SRTM_List_Init(&handle->keys);
+
+    SRTM_List_Init(&handle->service.node);
+    handle->service.dispatcher = NULL;
+    handle->service.category = SRTM_KEYPAD_CATEGORY;
+    handle->service.destroy = SRTM_KeypadService_Destroy;
+    handle->service.request = SRTM_KeypadService_Request;
+    handle->service.notify = SRTM_KeypadService_Notify;
+
+    return &handle->service;
+}
+
+void SRTM_KeypadService_Destroy(srtm_service_t service)
+{
+    srtm_keypad_service_t handle = (srtm_keypad_service_t)service;
+    srtm_list_t *list;
+    srtm_keypad_key_t key;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    assert(service);
+    /* Service must be unregistered from dispatcher before destroy */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    while(!SRTM_List_IsEmpty(&handle->keys))
+    {
+        list = handle->keys.next;
+        SRTM_List_Remove(list);
+        key = SRTM_LIST_OBJ(srtm_keypad_key_t, node, list);
+        SRTM_KeypadService_FreeKey(key);
+    }
+
+    SRTM_Heap_Free(handle);
+}
+
+void SRTM_KeypadService_Reset(srtm_service_t service, srtm_peercore_t core)
+{
+    srtm_keypad_service_t handle = (srtm_keypad_service_t)service;
+    srtm_list_t *list;
+    srtm_keypad_key_t key;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    assert(service);
+
+    /* Currently assume just one peer core, need to update all keys. */
+    for (list = handle->keys.next; list != &handle->keys; list = list->next)
+    {
+        key = SRTM_LIST_OBJ(srtm_keypad_key_t, node, list);
+        key->channel = NULL;
+    }
+}
+
+srtm_status_t SRTM_KeypadService_RegisterKey(srtm_service_t service, uint8_t keyIdx,
+                                             srtm_keypad_service_conf_t confKEvent, void *param)
+{
+    srtm_keypad_service_t handle = (srtm_keypad_service_t)service;
+    srtm_keypad_key_t key;
+    uint8_t *payload;
+    uint32_t primask;
+
+    assert(service);
+    /* Key must be registered before service registration. */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    key = SRTM_KeypadService_FindKey(handle, keyIdx, false, false, SRTM_KeypadValueReleased);
+    if (key)
+    {
+        /* keyIdx already registered */
+        return SRTM_Status_InvalidParameter;
+    }
+
+    key = (srtm_keypad_key_t)SRTM_Heap_Malloc(sizeof(struct _srtm_keypad_key));
+    if (key == NULL)
+    {
+        return SRTM_Status_OutOfMemory;
+    }
+
+    key->keyIdx = keyIdx;
+    key->confKEvent = confKEvent;
+    key->param = param;
+    key->notif = SRTM_Notification_Create(NULL, SRTM_KEYPAD_CATEGORY, SRTM_KEYPAD_VERSION,
+                                          SRTM_KEYPAD_NTF_KEYPAD_EVENT, 2U);
+    assert(key->notif);
+    SRTM_Message_SetFreeFunc(key->notif, SRTM_KeypadService_RecycleMessage, key);
+    payload = (uint8_t *)SRTM_CommMessage_GetPayload(key->notif);
+    /* Little endian keypad key ID */
+    *payload = keyIdx;
+
+    primask = DisableGlobalIRQ();
+    SRTM_List_AddTail(&handle->keys, &key->node);
+    EnableGlobalIRQ(primask);
+
+    return SRTM_Status_Success;
+}
+
+srtm_status_t SRTM_KeypadService_UnregisterKey(srtm_service_t service, uint8_t keyIdx)
+{
+    srtm_keypad_service_t handle = (srtm_keypad_service_t)service;
+    srtm_keypad_key_t key;
+
+    assert(service);
+    /* Key must be unregistered when service is not running. */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    key = SRTM_KeypadService_FindKey(handle, keyIdx, true, false, SRTM_KeypadValueReleased);
+    if (key)
+    {
+        SRTM_KeypadService_FreeKey(key);
+    }
+    else
+    {
+        /* Not found */
+        return SRTM_Status_ListRemoveFailed;
+    }
+
+    return SRTM_Status_Success;
+}
+
+/* Called in ISR */
+srtm_status_t SRTM_KeypadService_NotifyKeypadEvent(srtm_service_t service, uint8_t keyIdx, srtm_keypad_value_t value)
+{
+    srtm_keypad_service_t handle = (srtm_keypad_service_t)service;
+    srtm_keypad_key_t key;
+
+    assert(service);
+    /* Service must be running in dispatcher when notifying keypad event */
+    assert(!SRTM_List_IsEmpty(&service->node));
+
+    key = SRTM_KeypadService_FindKey(handle, keyIdx, false, true, value);
+    if (!key)
+    {
+        /* Key not registered */
+        return SRTM_Status_InvalidParameter;
+    }
+
+    return SRTM_Status_Success;
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_keypad_service.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_keypad_service.h
new file mode 100644
index 0000000..07f0c48
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_keypad_service.h
@@ -0,0 +1,123 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef __SRTM_KEYPAD_SERVICE_H__
+#define __SRTM_KEYPAD_SERVICE_H__
+
+#include "srtm_service.h"
+
+/*!
+ * @addtogroup srtm_service
+ * @{
+ */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/** @brief Switch to disable keypad service debugging messages. */
+#ifndef SRTM_KEYPAD_SERVICE_DEBUG_OFF
+#define SRTM_KEYPAD_SERVICE_DEBUG_OFF (0)
+#endif
+
+#if SRTM_KEYPAD_SERVICE_DEBUG_OFF
+#undef SRTM_DEBUG_VERBOSE_LEVEL
+#define SRTM_DEBUG_VERBOSE_LEVEL SRTM_DEBUG_VERBOSE_NONE
+#endif
+
+/*! @brief SRTM keypad value */
+typedef enum _srtm_keypad_value
+{
+    SRTM_KeypadValueReleased = 0U,
+    SRTM_KeypadValuePressed,
+} srtm_keypad_value_t;
+
+/*! @brief SRTM keypad service input event */
+typedef enum _srtm_keypad_event
+{
+    SRTM_KeypadEventNone = 0U, /* Ignore the event */
+    SRTM_KeypadEventPress,
+    SRTM_KeypadEventRelease,
+    SRTM_KeypadEventPressOrRelease,
+} srtm_keypad_event_t;
+
+/**
+* @brief SRTM keypad service configure keypad event function type.
+*/
+typedef srtm_status_t (*srtm_keypad_service_conf_t)(srtm_service_t service, srtm_peercore_t core,
+                                                    uint8_t keyIdx, srtm_keypad_event_t event, bool wakeup);
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*!
+ * @brief Create keypad service.
+ *
+ * @return SRTM service handle on success and NULL on failure.
+ */
+srtm_service_t SRTM_KeypadService_Create(void);
+
+/*!
+ * @brief Destroy keypad service.
+ *
+ * @param service SRTM service to destroy.
+ */
+void SRTM_KeypadService_Destroy(srtm_service_t service);
+
+/*!
+ * @brief Reset keypad service.
+ *  This is used to stop all keypad operations and return to initial state for corresponding core.
+ *  Registered keys are kept unchanged.
+ *
+ * @param service SRTM service to reset.
+ * @param core Identify which core is to be reset
+ */
+void SRTM_KeypadService_Reset(srtm_service_t service, srtm_peercore_t core);
+
+/*!
+ * @brief Register keypad service key. Only registered key will be serviced.
+ *
+ * @param service SRTM keypad service handle.
+ * @param keyIdx Keypad key index.
+ * @param confKEvent Keypad configure event callback.
+ * @param param user callback parameter.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_KeypadService_RegisterKey(srtm_service_t service, uint8_t keyIdx,
+                                             srtm_keypad_service_conf_t confKEvent, void *param);
+
+/*!
+ * @brief Unregister keypad service pin. The operation cannot work when service is running.
+ *
+ * @param service SRTM keypad service handle.
+ * @param keyIdx Keypad key index.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_KeypadService_UnregisterPin(srtm_service_t service, uint8_t keyIdx);
+
+/*!
+ * @brief Notify keypad event to peer core. This function must be called by application after peer core configured
+ *  keypad event.
+ *
+ * @param service SRTM KEYPAD service.
+ * @param keyIdx Keypad index.
+ * @param value Keypad event value.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_KeypadService_NotifyKeypadEvent(srtm_service_t service, uint8_t keyIdx, srtm_keypad_value_t value);
+
+#ifdef __cplusplus
+}
+#endif
+
+/*! @} */
+
+#endif /* __SRTM_KEYPAD_SERVICE_H__ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_lfcl_service.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_lfcl_service.c
new file mode 100644
index 0000000..1742f4b
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_lfcl_service.c
@@ -0,0 +1,417 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include <assert.h>
+#include <string.h>
+
+#include "srtm_heap.h"
+#include "srtm_dispatcher.h"
+#include "srtm_dispatcher_struct.h"
+#include "srtm_peercore.h"
+#include "srtm_peercore_struct.h"
+#include "srtm_service.h"
+#include "srtm_service_struct.h"
+#include "srtm_channel.h"
+#include "srtm_channel_struct.h"
+#include "srtm_lfcl_service.h"
+#include "srtm_message.h"
+#include "srtm_message_struct.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/* Protocol definition */
+#define SRTM_LFCL_CATEGORY (0x1U)
+
+#define SRTM_LFCL_VERSION (0x0100U)
+
+#define SRTM_LFCL_RETURN_CODE_SUCEESS (0x0U)
+#define SRTM_LFCL_RETURN_CODE_FAIL (0x1U)
+#define SRTM_LFCL_RETURN_CODE_UNSUPPORTED (0x2U)
+
+#define SRTM_LFCL_CMD_CHANGE_POWER_MODE (0x00U)
+#define SRTM_LFCL_CMD_HEART_BEAT_ENABLE (0x02U)
+
+#define SRTM_LFCL_NTF_HEART_BEAT (0x01U)
+
+#define SRTM_LFCL_POWER_MODE_RUN (0x01U)
+#define SRTM_LFCL_POWER_MODE_VLLS (0x05U)
+#define SRTM_LFCL_POWER_MODE_REBOOT (0x06U)
+#define SRTM_LFCL_POWER_MODE_SHUTDOWN (0x07U)
+#define SRTM_LFCL_HEART_BEAT_DISABLE (0x00U)
+#define SRTM_LFCL_HEART_BEAT_ENABLE (0x01U)
+
+/* Callback list node */
+typedef struct _srtm_lfcl_callback
+{
+    srtm_list_t node;
+    srtm_lfcl_service_cb_t callback;
+    void *param;
+} *srtm_lfcl_callback_t;
+
+/* Service handle */
+typedef struct _srtm_lfcl_service
+{
+    struct _srtm_service service;
+    srtm_list_t subscribers; /*!< SRTM life cycle event subscribers */
+    srtm_mutex_t mutex;
+} *srtm_lfcl_service_t;
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static srtm_status_t SRTM_LfclService_NotifySubscribers(srtm_lfcl_service_t handle,
+                                                        srtm_peercore_t core,
+                                                        srtm_lfcl_event_t event,
+                                                        void *eventParam)
+{
+    srtm_status_t status = SRTM_Status_Success;
+    srtm_lfcl_callback_t cb;
+    srtm_list_t *list;
+
+    SRTM_Mutex_Lock(handle->mutex);
+    for (list = handle->subscribers.next; list != &handle->subscribers; list = list->next)
+    {
+        cb = SRTM_LIST_OBJ(srtm_lfcl_callback_t, node, list);
+        status = cb->callback(&handle->service, core, event, eventParam, cb->param);
+        if (status != SRTM_Status_Success)
+        {
+            break;
+        }
+    }
+    SRTM_Mutex_Unlock(handle->mutex);
+
+    return status;
+}
+
+static srtm_status_t SRTM_LfclService_WakeupPeerCore(srtm_peercore_t core, void *param)
+{
+    srtm_lfcl_service_t handle = (srtm_lfcl_service_t)param;
+
+    return SRTM_LfclService_NotifySubscribers(handle, core, SRTM_Lfcl_Event_WakeupReq, NULL);
+}
+
+static void SRTM_LfclService_DeactivatePeerCore(srtm_dispatcher_t disp, void *param1, void *param2)
+{
+    srtm_peercore_t core = (srtm_peercore_t)param2;
+
+    SRTM_PeerCore_Deactivate(core, SRTM_LfclService_WakeupPeerCore, param1);
+}
+
+static srtm_status_t SRTM_LfclService_ChangePowerMode(srtm_lfcl_service_t handle,
+                                                      srtm_peercore_t core,
+                                                      uint8_t mode,
+                                                      srtm_procedure_t *pPre,
+                                                      srtm_procedure_t *pPost)
+{
+    srtm_status_t status;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d\r\n", __func__, mode);
+
+    switch (mode)
+    {
+        case SRTM_LFCL_POWER_MODE_RUN:
+            status = SRTM_LfclService_NotifySubscribers(handle, core, SRTM_Lfcl_Event_Running, NULL);
+            if (status == SRTM_Status_Success)
+            {
+                SRTM_PeerCore_SetState(core, SRTM_PeerCore_State_Activated);
+            }
+            break;
+
+        case SRTM_LFCL_POWER_MODE_VLLS:
+            status = SRTM_LfclService_NotifySubscribers(handle, core, SRTM_Lfcl_Event_SuspendReq, NULL);
+            if (status == SRTM_Status_Success)
+            {
+                *pPost = SRTM_Procedure_Create(SRTM_LfclService_DeactivatePeerCore, handle, core);
+                if (!(*pPost))
+                {
+                    status = SRTM_Status_OutOfMemory;
+                }
+            }
+            break;
+
+        case SRTM_LFCL_POWER_MODE_REBOOT:
+            status = SRTM_LfclService_NotifySubscribers(handle, core, SRTM_Lfcl_Event_RebootReq, NULL);
+            SRTM_PeerCore_SetState(core, SRTM_PeerCore_State_Inactive);
+            break;
+
+        case SRTM_LFCL_POWER_MODE_SHUTDOWN:
+            status = SRTM_LfclService_NotifySubscribers(handle, core, SRTM_Lfcl_Event_ShutdownReq, NULL);
+            SRTM_PeerCore_SetState(core, SRTM_PeerCore_State_Inactive);
+            break;
+        default:
+            SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: error mode\r\n", __func__);
+            status = SRTM_Status_ServiceNotFound;
+            break;
+    }
+
+    return status;
+}
+
+static srtm_status_t SRTM_LfclService_EnableHeartBeat(srtm_lfcl_service_t handle,
+                                                      srtm_peercore_t core,
+                                                      uint8_t enable)
+{
+    srtm_lfcl_event_t event = enable ? SRTM_Lfcl_Event_HeartBeatEnable :
+                                       SRTM_Lfcl_Event_HeartBeatDisable;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s: %d\r\n", __func__, enable);
+
+    return SRTM_LfclService_NotifySubscribers(handle, core, event, NULL);
+}
+
+static srtm_status_t SRTM_LfclService_HeartBeat(srtm_lfcl_service_t handle, srtm_peercore_t core)
+{
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    return SRTM_LfclService_NotifySubscribers(handle, core, SRTM_Lfcl_Event_HeartBeat, NULL);
+}
+
+/* Both request and notify are called from SRTM dispatcher context */
+static srtm_status_t SRTM_LfclService_Request(srtm_service_t service, srtm_request_t request)
+{
+    srtm_status_t status;
+    srtm_lfcl_service_t handle = (srtm_lfcl_service_t)service;
+    srtm_channel_t channel;
+    uint8_t command, retCode;
+    uint8_t *payload;
+    srtm_response_t response;
+    srtm_procedure_t pre = NULL;
+    srtm_procedure_t post = NULL;
+    srtm_list_t listHead;
+
+    assert(service->dispatcher);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    channel = SRTM_CommMessage_GetChannel(request);
+    command = SRTM_CommMessage_GetCommand(request);
+    payload = SRTM_CommMessage_GetPayload(request);
+
+    status = SRTM_Service_CheckVersion(service, request, SRTM_LFCL_VERSION);
+    if (status != SRTM_Status_Success || !payload)
+    {
+        /* Either version mismatch or empty payload is not supported */
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: format error!\r\n", __func__);
+        retCode = SRTM_LFCL_RETURN_CODE_UNSUPPORTED;
+    }
+    else
+    {
+        switch (command)
+        {
+            case SRTM_LFCL_CMD_CHANGE_POWER_MODE:
+                status = SRTM_LfclService_ChangePowerMode(handle, channel->core, *payload, &pre, &post);
+                retCode = status == SRTM_Status_Success ? SRTM_LFCL_RETURN_CODE_SUCEESS
+                                                        : SRTM_LFCL_RETURN_CODE_FAIL;
+                break;
+            case SRTM_LFCL_CMD_HEART_BEAT_ENABLE:
+                status = SRTM_LfclService_EnableHeartBeat(handle, channel->core, *payload);
+                retCode = status == SRTM_Status_Success ? SRTM_LFCL_RETURN_CODE_SUCEESS
+                                                        : SRTM_LFCL_RETURN_CODE_FAIL;
+                break;
+            default:
+                SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported!\r\n", __func__, command);
+                retCode = SRTM_LFCL_RETURN_CODE_UNSUPPORTED;
+                break;
+        }
+    }
+
+    if (SRTM_PeerCore_GetState(channel->core) == SRTM_PeerCore_State_Inactive)
+    {
+        /* If peer core request to reboot or shutdown, response is not needed */
+        return SRTM_Status_TransferNotAvail;
+    }
+
+    response = SRTM_Response_Create(channel, SRTM_LFCL_CATEGORY, SRTM_LFCL_VERSION,
+                                    command, 1U);
+    if (!response)
+    {
+        if (pre)
+        {
+            SRTM_Procedure_Destroy(pre);
+        }
+        if (post)
+        {
+            SRTM_Procedure_Destroy(post);
+        }
+        return SRTM_Status_OutOfMemory;
+    }
+
+    payload = SRTM_CommMessage_GetPayload(response);
+    *payload = retCode;
+
+    /* Now the response is ready */
+    /* If there's procedure combination, use message list to deliver */
+    if (pre || post)
+    {
+        SRTM_List_Init(&listHead);
+        if (pre)
+        {
+            SRTM_List_AddTail(&listHead, &pre->node);
+        }
+        SRTM_List_AddTail(&listHead, &response->node);
+        if (post)
+        {
+            SRTM_List_AddTail(&listHead, &post->node);
+        }
+
+        return SRTM_Dispatcher_DeliverMessages(service->dispatcher, &listHead);
+    }
+
+    return SRTM_Dispatcher_DeliverResponse(service->dispatcher, response);
+}
+
+static srtm_status_t SRTM_LfclService_Notify(srtm_service_t service, srtm_notification_t notif)
+{
+    srtm_status_t status;
+    srtm_lfcl_service_t handle = (srtm_lfcl_service_t)service;
+    srtm_channel_t channel;
+    uint8_t command;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    channel = SRTM_CommMessage_GetChannel(notif);
+    command = SRTM_CommMessage_GetCommand(notif);
+
+    status = SRTM_Service_CheckVersion(service, notif, SRTM_LFCL_VERSION);
+    if (status == SRTM_Status_Success)
+    {
+        switch (command)
+        {
+            case SRTM_LFCL_NTF_HEART_BEAT:
+                status = SRTM_LfclService_HeartBeat(handle, channel->core);
+                break;
+            default:
+                SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported!\r\n", __func__, command);
+                status = SRTM_Status_ServiceNotFound;
+                break;
+        }
+    }
+    else
+    {
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: version mismatch!\r\n", __func__);
+    }
+
+    return status;
+}
+
+srtm_service_t SRTM_LfclService_Create(void)
+{
+    srtm_lfcl_service_t handle;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle = (srtm_lfcl_service_t)SRTM_Heap_Malloc(sizeof(struct _srtm_lfcl_service));
+    assert(handle);
+
+    SRTM_List_Init(&handle->subscribers);
+    handle->mutex = SRTM_Mutex_Create();
+    assert(handle->mutex);
+
+    SRTM_List_Init(&handle->service.node);
+    handle->service.dispatcher = NULL;
+    handle->service.category = SRTM_LFCL_CATEGORY;
+    handle->service.destroy = SRTM_LfclService_Destroy;
+    handle->service.request = SRTM_LfclService_Request;
+    handle->service.notify = SRTM_LfclService_Notify;
+
+    return &handle->service;
+}
+
+void SRTM_LfclService_Destroy(srtm_service_t service)
+{
+    srtm_lfcl_service_t handle = (srtm_lfcl_service_t)service;
+    srtm_list_t *list;
+    srtm_lfcl_callback_t cb;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    assert(service);
+    /* Service must be unregistered from dispatcher before destroy */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    while(!SRTM_List_IsEmpty(&handle->subscribers))
+    {
+        list = handle->subscribers.next;
+        SRTM_List_Remove(list);
+        cb = SRTM_LIST_OBJ(srtm_lfcl_callback_t, node, list);
+        SRTM_Heap_Free(cb);
+    }
+
+    SRTM_Mutex_Destroy(handle->mutex);    
+    SRTM_Heap_Free(handle);
+}
+
+srtm_status_t SRTM_LfclService_Subscribe(srtm_service_t service, srtm_lfcl_service_cb_t callback,
+                                         void *param)
+{
+    srtm_lfcl_service_t handle = (srtm_lfcl_service_t)service;
+    srtm_lfcl_callback_t cb;
+
+    assert(service);
+    assert(callback);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    cb = (srtm_lfcl_callback_t)SRTM_Heap_Malloc(sizeof(struct _srtm_lfcl_callback));
+    if (cb == NULL)
+    {
+        return SRTM_Status_OutOfMemory;
+    }
+
+    cb->callback = callback;
+    cb->param = param;
+
+    SRTM_Mutex_Lock(handle->mutex);
+    SRTM_List_AddTail(&handle->subscribers, &cb->node);
+    SRTM_Mutex_Unlock(handle->mutex);
+
+    return SRTM_Status_Success;
+}
+
+srtm_status_t SRTM_LfclService_Unsubscribe(srtm_service_t service, srtm_lfcl_service_cb_t callback,
+                                           void *param)
+{
+    srtm_lfcl_service_t handle = (srtm_lfcl_service_t)service;
+    srtm_lfcl_callback_t cb = NULL;
+    srtm_list_t *list;
+
+    assert(service);
+    assert(callback);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    SRTM_Mutex_Lock(handle->mutex);
+    for (list = handle->subscribers.next; list != &handle->subscribers; list = list->next)
+    {
+        cb = SRTM_LIST_OBJ(srtm_lfcl_callback_t, node, list);
+        if (cb->callback == callback && cb->param == param)
+        {
+            SRTM_List_Remove(list);
+            break;
+        }
+    }
+    SRTM_Mutex_Unlock(handle->mutex);
+
+    if (list == &handle->subscribers)
+    {
+        return SRTM_Status_ListRemoveFailed;
+    }
+
+    SRTM_Heap_Free(cb);
+
+    return SRTM_Status_Success;
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_lfcl_service.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_lfcl_service.h
new file mode 100644
index 0000000..ab4f78e
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_lfcl_service.h
@@ -0,0 +1,106 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef __SRTM_LFCL_SERVICE_H__
+#define __SRTM_LFCL_SERVICE_H__
+
+#include "srtm_service.h"
+
+/*!
+ * @addtogroup srtm_service
+ * @{
+ */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/** @brief Switch to disable life cycle service debugging messages. */
+#ifndef SRTM_LFCL_SERVICE_DEBUG_OFF
+#define SRTM_LFCL_SERVICE_DEBUG_OFF (0)
+#endif
+
+#if SRTM_LFCL_SERVICE_DEBUG_OFF
+#undef SRTM_DEBUG_VERBOSE_LEVEL
+#define SRTM_DEBUG_VERBOSE_LEVEL SRTM_DEBUG_VERBOSE_NONE
+#endif
+
+/*! @brief SRTM life cycle service event code */
+typedef enum _srtm_lfcl_event
+{
+    /* SRTM power mode event from peer core */
+    SRTM_Lfcl_Event_Running     = 0x20U, /*!< Peer core indicates it is running */
+    SRTM_Lfcl_Event_SuspendReq  = 0x21U, /*!< Peer core request to suspend */
+    SRTM_Lfcl_Event_RebootReq   = 0x22U, /*!< Peer core request to reboot */
+    SRTM_Lfcl_Event_ShutdownReq = 0x23U, /*!< Peer core request to shutdown */
+
+    /* SRTM power mode event from lifecycle service */
+    SRTM_Lfcl_Event_WakeupReq   = 0x30U, /*!< Request peer core to exit suspend mode */
+
+    /* SRTM heart beat event from peer core */
+    SRTM_Lfcl_Event_HeartBeatEnable  = 0x40U, /*!< Peer core request to enable heart beat monitor */
+    SRTM_Lfcl_Event_HeartBeatDisable = 0x41U, /*!< Peer core request to disable heart beat monitor */
+    SRTM_Lfcl_Event_HeartBeat        = 0x50U, /*!< Peer core heart beat event */
+} srtm_lfcl_event_t;
+
+/**
+* @brief SRTM life cycle service callback function type.
+*/
+typedef srtm_status_t (*srtm_lfcl_service_cb_t)(srtm_service_t service, srtm_peercore_t core,
+                                                srtm_lfcl_event_t event, void *eventParam,
+                                                void *userParam);
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*!
+ * @brief Create life cycle service.
+ *
+ * @return SRTM service handle on success and NULL on failure.
+ */
+srtm_service_t SRTM_LfclService_Create(void);
+
+/*!
+ * @brief Destroy life cycle service.
+ *
+ * @param service SRTM service to destroy.
+ */
+void SRTM_LfclService_Destroy(srtm_service_t service);
+
+/*!
+ * @brief Subscribe lifecycle service callback.
+ *
+ * @param service SRTM life cycle service.
+ * @param callback User function to handle life cycle event.
+ * @param param User parameter to be used in callback.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_LfclService_Subscribe(srtm_service_t service, srtm_lfcl_service_cb_t callback,
+                                         void *param);
+
+/*!
+ * @brief Unsubscribe lifecycle service callback.
+ *
+ * @param service SRTM life cycle service.
+ * @param callback User function to handle life cycle event.
+ * @param param User parameter to be used in callback.
+ * @return SRTM_Status_Success on success and others on failure.
+ */
+srtm_status_t SRTM_LfclService_Unsubscribe(srtm_service_t service, srtm_lfcl_service_cb_t callback,
+                                           void *param);
+
+#ifdef __cplusplus
+}
+#endif
+
+/*! @} */
+
+#endif /* __SRTM_LFCL_SERVICE_H__ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_pmic_service.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_pmic_service.c
new file mode 100644
index 0000000..a37bb5b
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_pmic_service.c
@@ -0,0 +1,204 @@
+/*
+ * Copyright (c) 2017-2018, NXP
+ * All rights reserved.
+ *
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include <assert.h>
+#include <string.h>
+
+#include "srtm_heap.h"
+#include "srtm_dispatcher.h"
+#include "srtm_service.h"
+#include "srtm_service_struct.h"
+#include "srtm_pmic_service.h"
+#include "srtm_message.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/* Protocol definition */
+#define SRTM_PMIC_CATEGORY (0x2U)
+
+#define SRTM_PMIC_VERSION (0x0100U)
+
+#define SRTM_PMIC_RETURN_CODE_SUCEESS (0x0U)
+#define SRTM_PMIC_RETURN_CODE_FAIL (0x1U)
+#define SRTM_PMIC_RETURN_CODE_UNSUPPORTED (0x2U)
+
+#define SRTM_PMIC_CMD_ENABLE (0x0U)
+#define SRTM_PMIC_CMD_DISABLE (0x1U)
+#define SRTM_PMIC_CMD_IS_ENABLED (0x2U)
+#define SRTM_PMIC_CMD_SET_VOLTAGE (0x3U)
+#define SRTM_PMIC_CMD_GET_VOLTAGE (0x4U)
+#define SRTM_PMIC_CMD_GET_REGISTER (0x5U)
+#define SRTM_PMIC_CMD_SET_REGISTER (0x6U)
+#define SRTM_PMIC_CMD_SET_STANDBY_VOLTAGE (0x7U)
+
+#define SRTM_PMIC_REGULATOR_STATUS_DISABLED (0x0U)
+#define SRTM_PMIC_REGULATOR_STATUS_ENABLED (0x1U)
+
+/* Service handle */
+typedef struct _srtm_pmic_service
+{
+    struct _srtm_service service;
+    srtm_pmic_adapter_t adapter;
+} * srtm_pmic_service_t;
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+/* Both request and notify are called from SRTM dispatcher context */
+static srtm_status_t SRTM_PmicService_Request(srtm_service_t service, srtm_request_t request)
+{
+    srtm_status_t status;
+    srtm_pmic_service_t handle = (srtm_pmic_service_t)service;
+    srtm_pmic_adapter_t adapter = handle->adapter;
+    srtm_channel_t channel;
+    uint8_t command;
+    uint32_t payloadLen;
+    srtm_response_t response;
+    struct _srtm_pmic_payload *pmicReq;
+    struct _srtm_pmic_payload *pmicResp;
+
+    assert(adapter);
+    assert(service->dispatcher);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    channel = SRTM_CommMessage_GetChannel(request);
+    command = SRTM_CommMessage_GetCommand(request);
+    pmicReq = (struct _srtm_pmic_payload *)SRTM_CommMessage_GetPayload(request);
+    payloadLen = SRTM_CommMessage_GetPayloadLen(request);
+
+    response = SRTM_Response_Create(channel, SRTM_PMIC_CATEGORY, SRTM_PMIC_VERSION, command,
+                                    sizeof(struct _srtm_pmic_payload));
+    if (!response)
+    {
+        return SRTM_Status_OutOfMemory;
+    }
+
+    pmicResp = (struct _srtm_pmic_payload *)SRTM_CommMessage_GetPayload(response);
+
+    status = SRTM_Service_CheckVersion(service, request, SRTM_PMIC_VERSION);
+    if (status != SRTM_Status_Success || !pmicReq || payloadLen != sizeof(struct _srtm_pmic_payload))
+    {
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s format error!\r\n", __func__);
+        pmicResp->reg = pmicReq ? pmicReq->reg : 0;
+        pmicResp->retCode = SRTM_PMIC_RETURN_CODE_UNSUPPORTED;
+    }
+    else
+    {
+        pmicResp->reg = pmicReq->reg; /* Regulator or register number */
+        switch (command)
+        {
+            case SRTM_PMIC_CMD_ENABLE:
+                assert(adapter->enable);
+                status = adapter->enable(adapter, pmicReq->reg);
+                pmicResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_PMIC_RETURN_CODE_SUCEESS : SRTM_PMIC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_PMIC_CMD_DISABLE:
+                assert(adapter->disable);
+                status = adapter->disable(adapter, pmicReq->reg);
+                pmicResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_PMIC_RETURN_CODE_SUCEESS : SRTM_PMIC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_PMIC_CMD_IS_ENABLED:
+                assert(adapter->isEnabled);
+                pmicResp->status = adapter->isEnabled(adapter, pmicReq->reg) ? SRTM_PMIC_REGULATOR_STATUS_ENABLED :
+                                                                               SRTM_PMIC_REGULATOR_STATUS_DISABLED;
+                pmicResp->retCode = SRTM_PMIC_RETURN_CODE_SUCEESS;
+                break;
+            case SRTM_PMIC_CMD_SET_VOLTAGE:
+                assert(adapter->setVoltage);
+                status = adapter->setVoltage(adapter, pmicReq->reg, pmicReq->value);
+                pmicResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_PMIC_RETURN_CODE_SUCEESS : SRTM_PMIC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_PMIC_CMD_GET_VOLTAGE:
+                assert(adapter->getVoltage);
+                status = adapter->getVoltage(adapter, pmicReq->reg, (uint32_t *)&pmicResp->value);
+                pmicResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_PMIC_RETURN_CODE_SUCEESS : SRTM_PMIC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_PMIC_CMD_GET_REGISTER:
+                assert(adapter->getRegister);
+                status = adapter->getRegister(adapter, pmicReq->reg, (uint32_t *)&pmicResp->value);
+                pmicResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_PMIC_RETURN_CODE_SUCEESS : SRTM_PMIC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_PMIC_CMD_SET_REGISTER:
+                assert(adapter->setRegister);
+                status = adapter->setRegister(adapter, pmicReq->reg, pmicReq->value);
+                pmicResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_PMIC_RETURN_CODE_SUCEESS : SRTM_PMIC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_PMIC_CMD_SET_STANDBY_VOLTAGE:
+                assert(adapter->setStandbyVoltage);
+                status = adapter->setStandbyVoltage(adapter, pmicReq->reg, pmicReq->value);
+                pmicResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_PMIC_RETURN_CODE_SUCEESS : SRTM_PMIC_RETURN_CODE_FAIL;
+                break;
+            default:
+                SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported\r\n", __func__, command);
+                pmicResp->retCode = SRTM_PMIC_RETURN_CODE_UNSUPPORTED;
+                break;
+        }
+    }
+
+    return SRTM_Dispatcher_DeliverResponse(service->dispatcher, response);
+}
+
+static srtm_status_t SRTM_PmicService_Notify(srtm_service_t service, srtm_notification_t notif)
+{
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported\r\n", __func__,
+                       SRTM_CommMessage_GetCommand(notif));
+
+    return SRTM_Status_ServiceNotFound;
+}
+
+srtm_service_t SRTM_PmicService_Create(srtm_pmic_adapter_t adapter)
+{
+    srtm_pmic_service_t handle;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle = (srtm_pmic_service_t)SRTM_Heap_Malloc(sizeof(struct _srtm_pmic_service));
+    assert(handle);
+
+    handle->adapter = adapter;
+
+    SRTM_List_Init(&handle->service.node);
+    handle->service.dispatcher = NULL;
+    handle->service.category = SRTM_PMIC_CATEGORY;
+    handle->service.destroy = SRTM_PmicService_Destroy;
+    handle->service.request = SRTM_PmicService_Request;
+    handle->service.notify = SRTM_PmicService_Notify;
+
+    return &handle->service;
+}
+
+void SRTM_PmicService_Destroy(srtm_service_t service)
+{
+    srtm_pmic_service_t handle = (srtm_pmic_service_t)service;
+
+    assert(service);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    /* Service must be unregistered from dispatcher before destroy */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    SRTM_Heap_Free(handle);
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_pmic_service.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_pmic_service.h
new file mode 100644
index 0000000..e3dbd04
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_pmic_service.h
@@ -0,0 +1,91 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef __SRTM_PMIC_SERVICE_H__
+#define __SRTM_PMIC_SERVICE_H__
+
+#include "srtm_service.h"
+
+/*!
+ * @addtogroup srtm_service
+ * @{
+ */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/** @brief Switch to disable PMIC service debugging messages. */
+#ifndef SRTM_PMIC_SERVICE_DEBUG_OFF
+#define SRTM_PMIC_SERVICE_DEBUG_OFF (0)
+#endif
+
+#if SRTM_PMIC_SERVICE_DEBUG_OFF
+#undef SRTM_DEBUG_VERBOSE_LEVEL
+#define SRTM_DEBUG_VERBOSE_LEVEL SRTM_DEBUG_VERBOSE_NONE
+#endif
+
+/**
+* @brief SRTM PMIC adapter structure pointer.
+*/
+typedef struct _srtm_pmic_adapter *srtm_pmic_adapter_t;
+
+/**
+* @brief SRTM PMIC adapter structure
+*/
+struct _srtm_pmic_adapter
+{
+    srtm_status_t (*enable)(srtm_pmic_adapter_t adapter, uint8_t regulator);
+    srtm_status_t (*disable)(srtm_pmic_adapter_t adapter, uint8_t regulator);
+    bool (*isEnabled)(srtm_pmic_adapter_t adapter, uint8_t regulator);
+    srtm_status_t (*setVoltage)(srtm_pmic_adapter_t adapter, uint8_t regulator, uint32_t volt);
+    srtm_status_t (*getVoltage)(srtm_pmic_adapter_t adapter, uint8_t regulator, uint32_t *pVolt);
+    srtm_status_t (*setRegister)(srtm_pmic_adapter_t adapter, uint8_t register, uint32_t value);
+    srtm_status_t (*getRegister)(srtm_pmic_adapter_t adapter, uint8_t register, uint32_t *pValue);
+    srtm_status_t (*setStandbyVoltage)(srtm_pmic_adapter_t adapter, uint8_t regulator, uint32_t volt);
+};
+
+/**
+* @brief SRTM PMIC payload structure
+*/
+SRTM_PACKED_BEGIN struct _srtm_pmic_payload
+{
+    uint8_t reg;
+    uint8_t retCode;
+    uint8_t status;
+    uint32_t value;
+} SRTM_PACKED_END;
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*!
+ * @brief Create PMIC service.
+ *
+ * @param adapter PMIC adapter to handle real pmic operations.
+ * @return SRTM service handle on success and NULL on failure.
+ */
+srtm_service_t SRTM_PmicService_Create(srtm_pmic_adapter_t adapter);
+
+/*!
+ * @brief Destroy PMIC service.
+ *
+ * @param service SRTM service to destroy.
+ */
+void SRTM_PmicService_Destroy(srtm_service_t service);
+
+#ifdef __cplusplus
+}
+#endif
+
+/*! @} */
+
+#endif /* __SRTM_PMIC_SERVICE_H__ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_rtc_service.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_rtc_service.c
new file mode 100644
index 0000000..6bb8c5e
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_rtc_service.c
@@ -0,0 +1,239 @@
+/*
+ * Copyright (c) 2017-2018, NXP
+ * All rights reserved.
+ *
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include <assert.h>
+#include <string.h>
+
+#include "srtm_heap.h"
+#include "srtm_dispatcher.h"
+#include "srtm_service.h"
+#include "srtm_service_struct.h"
+#include "srtm_rtc_service.h"
+#include "srtm_message.h"
+#include "srtm_message_struct.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/* Protocol definition */
+#define SRTM_RTC_CATEGORY (0x6U)
+
+#define SRTM_RTC_VERSION (0x0100U)
+
+#define SRTM_RTC_RETURN_CODE_SUCEESS (0x0U)
+#define SRTM_RTC_RETURN_CODE_FAIL (0x1U)
+#define SRTM_RTC_RETURN_CODE_UNSUPPORTED (0x2U)
+
+#define SRTM_RTC_CMD_SET_TIME (0x0U)
+#define SRTM_RTC_CMD_GET_TIME (0x1U)
+#define SRTM_RTC_CMD_SET_ALARM (0x2U)
+#define SRTM_RTC_CMD_GET_ALARM (0x3U)
+#define SRTM_RTC_CMD_ENABLE_ALARM (0x4U)
+
+#define SRTM_RTC_NTF_ALARM (0x0U)
+
+/* Service handle */
+typedef struct _srtm_rtc_service
+{
+    struct _srtm_service service;
+    srtm_rtc_adapter_t adapter;
+    /* Currently assume just one peer core, to support multiple peer cores, channel need to be a list */
+    srtm_channel_t channel;
+    srtm_notification_t notif;
+} * srtm_rtc_service_t;
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static void SRTM_RtcService_RecycleMessage(srtm_message_t msg, void *param)
+{
+    srtm_rtc_service_t handle = (srtm_rtc_service_t)param;
+
+    handle->notif = msg;
+}
+
+/* Both request and notify are called from SRTM dispatcher context */
+static srtm_status_t SRTM_RtcService_Request(srtm_service_t service, srtm_request_t request)
+{
+    srtm_status_t status;
+    srtm_rtc_service_t handle = (srtm_rtc_service_t)service;
+    srtm_rtc_adapter_t adapter = handle->adapter;
+    srtm_channel_t channel;
+    uint8_t command;
+    uint32_t payloadLen;
+    srtm_response_t response;
+    struct _srtm_rtc_payload *rtcReq;
+    struct _srtm_rtc_payload *rtcResp;
+
+    assert(adapter);
+    assert(service->dispatcher);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    channel = SRTM_CommMessage_GetChannel(request);
+    command = SRTM_CommMessage_GetCommand(request);
+    rtcReq = (struct _srtm_rtc_payload *)SRTM_CommMessage_GetPayload(request);
+    payloadLen = SRTM_CommMessage_GetPayloadLen(request);
+
+    response =
+        SRTM_Response_Create(channel, SRTM_RTC_CATEGORY, SRTM_RTC_VERSION, command, sizeof(struct _srtm_rtc_payload));
+    if (!response)
+    {
+        return SRTM_Status_OutOfMemory;
+    }
+    else
+    {
+        /* Remember the channel for future notification */
+        handle->channel = channel;
+    }
+
+    rtcResp = (struct _srtm_rtc_payload *)SRTM_CommMessage_GetPayload(response);
+
+    status = SRTM_Service_CheckVersion(service, request, SRTM_RTC_VERSION);
+    if (status != SRTM_Status_Success || !rtcReq || payloadLen != sizeof(struct _srtm_rtc_payload))
+    {
+        SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s format error %d!\r\n", __func__, payloadLen);
+        rtcResp->retCode = SRTM_RTC_RETURN_CODE_UNSUPPORTED;
+    }
+    else
+    {
+        switch (command)
+        {
+            case SRTM_RTC_CMD_SET_TIME:
+                assert(adapter->setTime);
+                status = adapter->setTime(adapter, rtcReq->alarm.seconds);
+                rtcResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_RTC_RETURN_CODE_SUCEESS : SRTM_RTC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_RTC_CMD_GET_TIME:
+                assert(adapter->getTime);
+                status = adapter->getTime(adapter, (uint32_t *)&rtcResp->alarm.seconds);
+                rtcResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_RTC_RETURN_CODE_SUCEESS : SRTM_RTC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_RTC_CMD_SET_ALARM:
+                assert(adapter->setAlarm);
+                status = adapter->setAlarm(adapter, &rtcReq->alarm);
+                rtcResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_RTC_RETURN_CODE_SUCEESS : SRTM_RTC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_RTC_CMD_GET_ALARM:
+                assert(adapter->getAlarm);
+                status = adapter->getAlarm(adapter, &rtcResp->alarm);
+                rtcResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_RTC_RETURN_CODE_SUCEESS : SRTM_RTC_RETURN_CODE_FAIL;
+                break;
+            case SRTM_RTC_CMD_ENABLE_ALARM:
+                assert(adapter->enableAlarm);
+                status = adapter->enableAlarm(adapter, rtcReq->alarm.enabled);
+                rtcResp->retCode =
+                    status == SRTM_Status_Success ? SRTM_RTC_RETURN_CODE_SUCEESS : SRTM_RTC_RETURN_CODE_FAIL;
+                break;
+            default:
+                SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported\r\n", __func__, command);
+                rtcResp->retCode = SRTM_RTC_RETURN_CODE_UNSUPPORTED;
+                break;
+        }
+    }
+
+    return SRTM_Dispatcher_DeliverResponse(service->dispatcher, response);
+}
+
+static srtm_status_t SRTM_RtcService_Notify(srtm_service_t service, srtm_notification_t notif)
+{
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_WARN, "%s: command %d unsupported\r\n", __func__,
+                       SRTM_CommMessage_GetCommand(notif));
+
+    return SRTM_Status_ServiceNotFound;
+}
+
+/* CALLED IN RTC DRIVER ISR */
+static srtm_status_t SRTM_RtcService_NotifyAlarm(srtm_service_t service)
+{
+    srtm_status_t status = SRTM_Status_Success;
+    srtm_rtc_service_t handle = (srtm_rtc_service_t)service;
+
+    /* If service is still serving and no pending alarm */
+    if (service->dispatcher && handle->notif && handle->channel)
+    {
+        handle->notif->channel = handle->channel;
+        status = SRTM_Dispatcher_DeliverNotification(service->dispatcher, handle->notif);
+        handle->notif = NULL;
+    }
+
+    return status;
+}
+
+srtm_service_t SRTM_RtcService_Create(srtm_rtc_adapter_t adapter)
+{
+    srtm_rtc_service_t handle;
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle = (srtm_rtc_service_t)SRTM_Heap_Malloc(sizeof(struct _srtm_rtc_service));
+    assert(handle);
+
+    adapter->service = &handle->service;
+    adapter->notifyAlarm = SRTM_RtcService_NotifyAlarm;
+    handle->adapter = adapter;
+
+    SRTM_List_Init(&handle->service.node);
+    handle->service.dispatcher = NULL;
+    handle->service.category = SRTM_RTC_CATEGORY;
+    handle->service.destroy = SRTM_RtcService_Destroy;
+    handle->service.request = SRTM_RtcService_Request;
+    handle->service.notify = SRTM_RtcService_Notify;
+
+    handle->channel = NULL;
+    handle->notif = SRTM_Notification_Create(NULL, SRTM_RTC_CATEGORY, SRTM_RTC_VERSION, SRTM_RTC_NTF_ALARM, 0);
+    assert(handle->notif);
+    SRTM_Message_SetFreeFunc(handle->notif, SRTM_RtcService_RecycleMessage, handle);
+
+    return &handle->service;
+}
+
+void SRTM_RtcService_Destroy(srtm_service_t service)
+{
+    srtm_rtc_service_t handle = (srtm_rtc_service_t)service;
+
+    assert(service);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    /* Service must be unregistered from dispatcher before destroy */
+    assert(SRTM_List_IsEmpty(&service->node));
+
+    if (handle->notif)
+    {
+        SRTM_Message_SetFreeFunc(handle->notif, NULL, NULL);
+        SRTM_Message_Destroy(handle->notif);
+    }
+
+    SRTM_Heap_Free(handle);
+}
+
+void SRTM_RtcService_Reset(srtm_service_t service, srtm_peercore_t core)
+{
+    srtm_rtc_service_t handle = (srtm_rtc_service_t)service;
+
+    assert(service);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    /* Currently assume just one peer core, need to reset the service. */
+    handle->adapter->enableAlarm(handle->adapter, false);
+    handle->channel = NULL;
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_rtc_service.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_rtc_service.h
new file mode 100644
index 0000000..cf75381
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_rtc_service.h
@@ -0,0 +1,113 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef __SRTM_RTC_SERVICE_H__
+#define __SRTM_RTC_SERVICE_H__
+
+#include "srtm_service.h"
+
+/*!
+ * @addtogroup srtm_service
+ * @{
+ */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+/** @brief Switch to disable RTC service debugging messages. */
+#ifndef SRTM_RTC_SERVICE_DEBUG_OFF
+#define SRTM_RTC_SERVICE_DEBUG_OFF (0)
+#endif
+
+#if SRTM_RTC_SERVICE_DEBUG_OFF
+#undef SRTM_DEBUG_VERBOSE_LEVEL
+#define SRTM_DEBUG_VERBOSE_LEVEL SRTM_DEBUG_VERBOSE_NONE
+#endif
+
+#define SRTM_RTC_ALARM_DISABLED (0x0U)
+#define SRTM_RTC_ALARM_ENABLED (0x1U)
+
+#define SRTM_RTC_ALARM_NOT_PENDING (0x0U)
+#define SRTM_RTC_ALARM_PENDING (0x1U)
+
+/*! @brief SRTM RTC datetime structure */
+SRTM_PACKED_BEGIN struct _srtm_rtc_alarm
+{
+    uint32_t seconds; /* Seconds since 01-01-1970 00:00:00 */
+    uint8_t enabled;
+    uint8_t pending;
+} SRTM_PACKED_END;
+
+SRTM_PACKED_BEGIN struct _srtm_rtc_payload
+{
+    uint8_t reserved;
+    uint8_t retCode;
+    struct _srtm_rtc_alarm alarm;
+} SRTM_PACKED_END;
+
+/**
+* @brief SRTM RTC adapter structure pointer.
+*/
+typedef struct _srtm_rtc_adapter *srtm_rtc_adapter_t;
+
+/**
+* @brief SRTM RTC adapter structure
+*/
+struct _srtm_rtc_adapter
+{
+    /* Bound service */
+    srtm_service_t service;
+
+    /* Interfaces implemented by RTC service. */
+    srtm_status_t (*notifyAlarm)(srtm_service_t service);
+
+    /* Interface implemented by RTC adapter */
+    srtm_status_t (*getTime)(srtm_rtc_adapter_t adapter, uint32_t *pSeconds);
+    srtm_status_t (*setTime)(srtm_rtc_adapter_t adapter, uint32_t seconds);
+    srtm_status_t (*getAlarm)(srtm_rtc_adapter_t adapter, struct _srtm_rtc_alarm *pAlarm);
+    srtm_status_t (*setAlarm)(srtm_rtc_adapter_t adapter, const struct _srtm_rtc_alarm *pAlarm);
+    srtm_status_t (*enableAlarm)(srtm_rtc_adapter_t adapter, bool enable);
+};
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*!
+ * @brief Create RTC service.
+ *
+ * @param adapter RTC adapter to handle real rtc operations.
+ * @return SRTM service handle on success and NULL on failure.
+ */
+srtm_service_t SRTM_RtcService_Create(srtm_rtc_adapter_t adapter);
+
+/*!
+ * @brief Destroy RTC service.
+ *
+ * @param service SRTM service to destroy.
+ */
+void SRTM_RtcService_Destroy(srtm_service_t service);
+
+/*!
+ * @brief Reset RTC service. This is used to reset RTC to initial state.
+ *
+ * @param service SRTM service to reset.
+ * @param core Identify which core is to be reset.
+ */
+void SRTM_RtcService_Reset(srtm_service_t service, srtm_peercore_t core);
+
+#ifdef __cplusplus
+}
+#endif
+
+/*! @} */
+
+#endif /* __SRTM_RTC_SERVICE_H__ */
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_snvs_lp_rtc_adapter.c b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_snvs_lp_rtc_adapter.c
new file mode 100644
index 0000000..dc71fdd
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_snvs_lp_rtc_adapter.c
@@ -0,0 +1,254 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#include "srtm_snvs_lp_rtc_adapter.h"
+#include "srtm_heap.h"
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+
+/* SNVS_LP RTC adapter */
+typedef struct _srtm_snvs_lp_rtc_adapter
+{
+    struct _srtm_rtc_adapter adapter;
+    SNVS_Type *base;
+} *srtm_snvs_lp_rtc_adapter_t;
+
+
+/*******************************************************************************
+ * Prototypes
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Variables
+ ******************************************************************************/
+
+/*******************************************************************************
+ * Code
+ ******************************************************************************/
+static uint32_t RTC_GetSeconds(SNVS_Type *base)
+{
+    uint32_t seconds = 0;
+    uint32_t tmp = 0;
+
+    /* Do consecutive reads until value is correct */
+    do
+    {
+        seconds = tmp;
+        tmp = (base->LPSRTCMR << 17U) | (base->LPSRTCLR >> 15U);
+    } while (tmp != seconds);
+
+    return seconds;
+}
+
+static void RTC_SetSeconds(SNVS_Type *base, uint32_t seconds)
+{
+    uint32_t tmp = base->LPCR;
+
+    /* disable RTC */
+    SNVS_LP_SRTC_StopTimer(base);
+
+    /* Set time in seconds */
+    base->LPSRTCMR = (uint32_t)(seconds >> 17U);
+    base->LPSRTCLR = (uint32_t)(seconds << 15U);
+
+    /* reenable SRTC in case that it was enabled before */
+    if (tmp & SNVS_LPCR_SRTC_ENV_MASK)
+    {
+        SNVS_LP_SRTC_StartTimer(base);
+    }
+}
+
+static srtm_status_t RTC_SetAlarm(SNVS_Type *base, uint32_t seconds)
+{
+    uint32_t currSeconds = 0U;
+    uint32_t tmp = base->LPCR;
+
+    currSeconds = RTC_GetSeconds(base);
+
+    /* Return error if the alarm time has passed */
+    if (seconds <= currSeconds)
+    {
+        return SRTM_Status_InvalidParameter;
+    }
+
+    /* disable SRTC alarm interrupt */
+    base->LPCR &= ~SNVS_LPCR_LPTA_EN_MASK;
+    while (base->LPCR & SNVS_LPCR_LPTA_EN_MASK)
+    {
+    }
+
+    /* Set alarm in seconds*/
+    base->LPTAR = seconds;
+
+    /* reenable SRTC alarm interrupt in case that it was enabled before */
+    base->LPCR = tmp;
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t SRTM_SnvsLpRtcAdapter_GetTime(srtm_rtc_adapter_t adapter, uint32_t *pSeconds)
+{
+    srtm_snvs_lp_rtc_adapter_t handle = (srtm_snvs_lp_rtc_adapter_t)adapter;
+
+    assert(handle->base);
+    assert(pSeconds);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    *pSeconds = RTC_GetSeconds(handle->base);
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t SRTM_SnvsLpRtcAdapter_SetTime(srtm_rtc_adapter_t adapter, uint32_t seconds)
+{
+    srtm_snvs_lp_rtc_adapter_t handle = (srtm_snvs_lp_rtc_adapter_t)adapter;
+
+    assert(handle->base);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    RTC_SetSeconds(handle->base, seconds);
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t SRTM_SnvsLpRtcAdapter_GetAlarm(srtm_rtc_adapter_t adapter, struct _srtm_rtc_alarm *pAlarm)
+{
+    srtm_snvs_lp_rtc_adapter_t handle = (srtm_snvs_lp_rtc_adapter_t)adapter;
+
+    assert(handle->base);
+    assert(pAlarm);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    pAlarm->seconds = handle->base->LPTAR;
+
+    pAlarm->enabled = (SNVS_LP_SRTC_GetEnabledInterrupts(handle->base) & kSNVS_SRTC_AlarmInterrupt) ?
+                      SRTM_RTC_ALARM_ENABLED : SRTM_RTC_ALARM_DISABLED;
+    pAlarm->pending = (SNVS_LP_SRTC_GetStatusFlags(handle->base) & kSNVS_SRTC_AlarmInterruptFlag) ?
+                      SRTM_RTC_ALARM_PENDING : SRTM_RTC_ALARM_NOT_PENDING;
+
+    return SRTM_Status_Success;
+}
+
+static srtm_status_t SRTM_SnvsLpRtcAdapter_SetAlarm(srtm_rtc_adapter_t adapter,
+                                                    const struct _srtm_rtc_alarm *pAlarm)
+{
+    srtm_status_t status;
+    srtm_snvs_lp_rtc_adapter_t handle = (srtm_snvs_lp_rtc_adapter_t)adapter;
+
+    assert(handle->base);
+    assert(pAlarm);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s %s\r\n", __func__, pAlarm->enabled ? "Enable" : "Disable");
+
+    status = RTC_SetAlarm(handle->base, pAlarm->seconds);
+    if (status == SRTM_Status_Success)
+    {
+        /* Clear the pending alarm flag */
+        SNVS_LP_SRTC_ClearStatusFlags(handle->base, kSNVS_SRTC_AlarmInterruptFlag);
+
+        if (pAlarm->enabled)
+        {
+            SNVS_LP_SRTC_EnableInterrupts(handle->base, kSNVS_SRTC_AlarmInterrupt);
+        }
+        else
+        {
+            SNVS_LP_SRTC_DisableInterrupts(handle->base, kSNVS_SRTC_AlarmInterrupt);
+        }
+    }
+
+    return status;
+}
+
+srtm_status_t SRTM_SnvsLpRtcAdapter_EnableAlarm(srtm_rtc_adapter_t adapter, bool enable)
+{
+    srtm_snvs_lp_rtc_adapter_t handle = (srtm_snvs_lp_rtc_adapter_t)adapter;
+
+    assert(handle->base);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s %s\r\n", __func__, enable ? "Enable" : "Disable");
+
+    /* Clear the pending alarm flag */
+    SNVS_LP_SRTC_ClearStatusFlags(handle->base, kSNVS_SRTC_AlarmInterruptFlag);
+
+    if (enable)
+    {
+        SNVS_LP_SRTC_EnableInterrupts(handle->base, kSNVS_SRTC_AlarmInterrupt);
+    }
+    else
+    {
+        SNVS_LP_SRTC_DisableInterrupts(handle->base, kSNVS_SRTC_AlarmInterrupt);
+    }
+
+    return SRTM_Status_Success;
+}
+
+srtm_rtc_adapter_t SRTM_SnvsLpRtcAdapter_Create(SNVS_Type *base)
+{
+    srtm_snvs_lp_rtc_adapter_t handle;
+
+    assert(base);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    handle = (srtm_snvs_lp_rtc_adapter_t)SRTM_Heap_Malloc(sizeof(struct _srtm_snvs_lp_rtc_adapter));
+    assert(handle);
+
+    handle->base = base;
+
+    /* Fields to be filled when creating service with this adapter. */
+    handle->adapter.service = NULL;
+    handle->adapter.notifyAlarm = NULL;
+
+    /* Adapter interfaces. */
+    handle->adapter.getTime = SRTM_SnvsLpRtcAdapter_GetTime;
+    handle->adapter.setTime = SRTM_SnvsLpRtcAdapter_SetTime;
+    handle->adapter.getAlarm = SRTM_SnvsLpRtcAdapter_GetAlarm;
+    handle->adapter.setAlarm = SRTM_SnvsLpRtcAdapter_SetAlarm;
+    handle->adapter.enableAlarm = SRTM_SnvsLpRtcAdapter_EnableAlarm;
+
+    /* Enable RTC */
+    SNVS_LP_SRTC_StartTimer(base);
+
+    return &handle->adapter;
+}
+
+void SRTM_SnvsLpRtcAdapter_Destroy(srtm_rtc_adapter_t adapter)
+{
+    srtm_snvs_lp_rtc_adapter_t handle = (srtm_snvs_lp_rtc_adapter_t)adapter;
+
+    assert(adapter);
+
+    SRTM_DEBUG_MESSAGE(SRTM_DEBUG_VERBOSE_INFO, "%s\r\n", __func__);
+
+    SRTM_Heap_Free(handle);
+}
+
+void SRTM_SnvsLpRtcAdapter_NotifyAlarm(srtm_rtc_adapter_t adapter)
+{
+    srtm_snvs_lp_rtc_adapter_t handle = (srtm_snvs_lp_rtc_adapter_t)adapter;
+
+    assert(adapter);
+
+    if (SNVS_LP_SRTC_GetStatusFlags(handle->base) & kSNVS_SRTC_AlarmInterruptFlag)
+    {
+        /* Alarm should be one-shot */
+        SNVS_LP_SRTC_DisableInterrupts(handle->base, kSNVS_SRTC_AlarmInterrupt);
+        /* Clear alarm flag */
+        SNVS_LP_SRTC_ClearStatusFlags(handle->base, kSNVS_SRTC_AlarmInterruptFlag);
+
+        if (adapter->notifyAlarm && adapter->service)
+        {
+            adapter->notifyAlarm(adapter->service);
+        }
+    }
+}
diff --git a/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_snvs_lp_rtc_adapter.h b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_snvs_lp_rtc_adapter.h
new file mode 100644
index 0000000..f3213e9
--- /dev/null
+++ b/boards/evkmcimx7ulp/demo_apps/rohm_power_mode_switch/srtm/services/srtm_snvs_lp_rtc_adapter.h
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2017, NXP
+ * All rights reserved.
+ *
+ * 
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+
+#ifndef __SRTM_SNVS_LP_RTC_ADAPTER_H__
+#define __SRTM_SNVS_LP_RTC_ADAPTER_H__
+
+#include "srtm_rtc_service.h"
+#include "fsl_snvs_lp.h"
+
+/*!
+ * @addtogroup srtm_service
+ * @{
+ */
+
+/*******************************************************************************
+ * Definitions
+ ******************************************************************************/
+
+/*******************************************************************************
+ * API
+ ******************************************************************************/
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*!
+ * @brief Create SNVS_LP RTC adapter.
+ *
+ * @param base SNVS base address.
+ * @return SRTM RTC adapter on success or NULL on failure.
+ */
+srtm_rtc_adapter_t SRTM_SnvsLpRtcAdapter_Create(SNVS_Type *base);
+
+/*!
+ * @brief Destroy SNVS_LP RTC adapter.
+ *
+ * @param adapter SNVS_LP RTC adapter to destroy.
+ */
+void SRTM_SnvsLpRtcAdapter_Destroy(srtm_rtc_adapter_t adapter);
+
+/*!
+ * @brief Notify alarm event.
+ *
+ * @param adapter SNVS_LP RTC adapter to destroy.
+ */
+void SRTM_SnvsLpRtcAdapter_NotifyAlarm(srtm_rtc_adapter_t adapter);
+
+#ifdef __cplusplus
+}
+#endif
+
+/*! @} */
+
+#endif /* __SRTM_SNVS_LP_RTC_ADAPTER_H__ */
-- 
2.17.1

