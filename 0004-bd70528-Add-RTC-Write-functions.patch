From 6316ab43846c4a8c5ee868a7d21b289afc99efed Mon Sep 17 00:00:00 2001
From: Vanessa Maegima <vanessa.maegima@nxp.com>
Date: Thu, 25 Jul 2019 14:00:25 -0300
Subject: [PATCH 2/3] bd70528: Add RTC Write functions

Enable RTC write.
Enable Alarm set to ONESEC and ONEMIN events.

Signed-off-by: Vanessa Maegima <vanessa.maegima@nxp.com>
---
 components/bd70528/bd70528.c | 58 ++++++++++++++++++++++++++++++++----
 components/bd70528/bd70528.h |  6 ++++
 2 files changed, 58 insertions(+), 6 deletions(-)

diff --git a/components/bd70528/bd70528.c b/components/bd70528/bd70528.c
index eb31a4b..44ab486 100644
--- a/components/bd70528/bd70528.c
+++ b/components/bd70528/bd70528.c
@@ -429,7 +429,7 @@ uint32_t BD70528_GetRegulatorOutputVoltage(bd70528_handle_t *handle,
     return voltage;
 }
 
-void BD70528_RTC_ConvertTime(rtc_time_t *rtc)
+void BD70528_RTC_ConvertBCD(rtc_time_t *rtc)
 {
     rtc->sec &= 0x7F;
     rtc->sec = bcd2bin(rtc->sec);
@@ -437,7 +437,7 @@ void BD70528_RTC_ConvertTime(rtc_time_t *rtc)
     rtc->min &= 0x7F;
     rtc->min = bcd2bin(rtc->min);
 
-    rtc->hour &= 0xBF;
+    rtc->hour &= 0x3F;
     rtc->hour = bcd2bin(rtc->hour);
 
     rtc->week &= 0x07;
@@ -483,8 +483,38 @@ void BD70528_RTC_ConvertTime(rtc_time_t *rtc)
         rtc->repeat &= 0x03;
 }
 
-bool BD70528_RTC_SetTime(bd70528_handle_t *handle, rtc_time_t *rtc)
+void BD70528_RTC_ConvertDecimal(rtc_time_t *rtc)
 {
+    rtc->sec = bin2bcd(rtc->sec);
+    rtc->min = bin2bcd(rtc->min);
+
+    if (rtc->hour & H12_24) {
+        rtc->hour ^= H12_24;
+        rtc->hour = bin2bcd(rtc->hour);
+        rtc->hour ^= H12_24;
+    } else
+        rtc->hour = bin2bcd(rtc->hour);
+
+    rtc->day = bin2bcd(rtc->day);
+    rtc->month = bin2bcd(rtc->month);
+    rtc->year = bin2bcd(rtc->year);
+}
+
+bool BD70528_RTC_SetTime(bd70528_handle_t *handle, rtc_time_t rtc)
+{
+    assert(handle);
+    assert(rtc);
+
+    BD70528_RTC_ConvertDecimal(&rtc);
+
+    BD70528_WriteReg(handle, BD70528_SEC, rtc.sec);
+    BD70528_WriteReg(handle, BD70528_MIN, rtc.min);
+    BD70528_WriteReg(handle, BD70528_HOUR, rtc.hour);
+    BD70528_WriteReg(handle, BD70528_WEEK, rtc.week);
+    BD70528_WriteReg(handle, BD70528_DAY, rtc.day);
+    BD70528_WriteReg(handle, BD70528_MONTH, rtc.month);
+    BD70528_WriteReg(handle, BD70528_YEAR, rtc.year);
+
     return kStatus_Success;
 }
 
@@ -502,7 +532,7 @@ rtc_time_t BD70528_RTC_ReadTime(bd70528_handle_t *handle)
     BD70528_ReadReg(handle, BD70528_MONTH, &rtc.month);
     BD70528_ReadReg(handle, BD70528_YEAR, &rtc.year);
 
-    BD70528_RTC_ConvertTime(&rtc);
+    BD70528_RTC_ConvertBCD(&rtc);
 
     PRINTF("\n\rRTC date: %s %d/%d/%d", rtc.week_day, rtc.month, rtc.day, rtc.year);
     PRINTF("\n\rRTC time: %d:%d:%d\n\r", rtc.hour, rtc.min, rtc.sec);
@@ -510,8 +540,24 @@ rtc_time_t BD70528_RTC_ReadTime(bd70528_handle_t *handle)
     return rtc;
 }
 
-bool BD70528_RTC_SetAlarm(bd70528_handle_t *handle, rtc_time_t *rtc)
+bool BD70528_RTC_SetAlarm(bd70528_handle_t *handle, rtc_time_t rtc)
 {
+    assert(handle);
+    assert(rtc);
+
+    BD70528_RTC_ConvertDecimal(&rtc);
+
+    BD70528_WriteReg(handle, BD70528_ALM_SEC, rtc.sec);
+    BD70528_WriteReg(handle, BD70528_ALM_MIN, rtc.min);
+    BD70528_WriteReg(handle, BD70528_ALM_HOUR, rtc.hour);
+    BD70528_WriteReg(handle, BD70528_ALM_WEEK, rtc.week);
+    BD70528_WriteReg(handle, BD70528_ALM_DAY, rtc.day);
+    BD70528_WriteReg(handle, BD70528_ALM_MONTH, rtc.month);
+    BD70528_WriteReg(handle, BD70528_ALM_YEAR, rtc.year);
+
+    BD70528_WriteReg(handle, BD70528_ALM_MASK, rtc.mask);
+    BD70528_WriteReg(handle, BD70528_ALM_REPEAT, rtc.repeat);
+
     return kStatus_Success;
 }
 
@@ -532,7 +578,7 @@ rtc_time_t BD70528_RTC_ReadAlarm(bd70528_handle_t *handle)
     BD70528_ReadReg(handle, BD70528_ALM_MASK, &rtc.mask);
     BD70528_ReadReg(handle, BD70528_ALM_REPEAT, &rtc.repeat);
 
-    BD70528_RTC_ConvertTime(&rtc);
+    BD70528_RTC_ConvertBCD(&rtc);
 
     if (!rtc.repeat && !rtc.mask) {
         PRINTF("\n\rRTC Alarm interrupt not set");
diff --git a/components/bd70528/bd70528.h b/components/bd70528/bd70528.h
index 063c254..4b459ee 100644
--- a/components/bd70528/bd70528.h
+++ b/components/bd70528/bd70528.h
@@ -335,10 +335,16 @@ void BD70528_SetRegulatorOutputVoltage(bd70528_handle_t *handle, bd70528_module_
 uint32_t BD70528_GetRegulatorOutputVoltage(bd70528_handle_t *handle, bd70528_module_t module,
 			bd70528_operating_status_t status);
 
+bool BD70528_RTC_SetTime(bd70528_handle_t *handle, rtc_time_t rtc);
+
 rtc_time_t BD70528_RTC_ReadTime(bd70528_handle_t *handle);
 
+bool BD70528_RTC_SetAlarm(bd70528_handle_t *handle, rtc_time_t rtc);
+
 rtc_time_t BD70528_RTC_ReadAlarm(bd70528_handle_t *handle);
 
+bool BD70528_RTC_EnableAlarm(bd70528_handle_t *handle);
+
 #if defined(__cplusplus)
 }
 #endif
-- 
2.17.1

